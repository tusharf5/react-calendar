{"version":3,"sources":["awesome-react-calendar/utils/constants.ts","awesome-react-calendar/utils/date-utils.ts","awesome-react-calendar/components/header/Header.tsx","awesome-react-calendar/components/month-selector/MonthSelector.tsx","awesome-react-calendar/components/year-selector/YearSelector.tsx","awesome-react-calendar/components/week-days-row/WeekDaysRow.tsx","awesome-react-calendar/components/day-of-month-selector/DayOfMonthSelector.tsx","awesome-react-calendar/calendar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NATIVE_INDEX_TO_LABEL_WEEKDAY_MAP","NATIVE_INDEX_TO_LABEL_MONTHS_MAP","toString","date","getFullYear","getMonth","getDate","isBefore","toCheckDate","isValid","isNaN","Date","getTime","isEqual","first","second","isPartOfRange","rangeStart","rangeEnd","isALeapYear","year","getNumberOfDaysInAMonth","month","isLastDayOfMonth","getPreviousMonth","getNextMonth","getPreviousYear","getNextYear","getNextDate","isLastDayOfYear","getInfluencedWeekDayIndexAsPerAStartDay","weekdayAsPerNativeIndex","startOfTheWeek","getNativeWeekDayIndexFromAStartDayInfluencedIndex","weekdayAsPerChangedIndex","diversion","getStartOfRangeForAYear","Number","toFixed","getDaysOfMonthViewMetrix","params","isRangeSelectModeOn","isRangeView","selectedDate","selectedRangeStart","selectedRangeEnd","highlightsMap","newSelectedRangeStart","newSelectedRangeEnd","isSelectMultiDate","selectedMultiDates","yearInView","monthInView","isDisabled","checkIfWeekend","matrix","currentMonthDatesStartIndex","setDate","setMonth","setFullYear","getDay","getInfluencedWeekDayIndexOnFirstDateOfMonth","today","totalDaysInCurrentMonth","isPrevMonthFromLastYear","isCurrentMonthLast","totalDaysInPrevMonth","row","weekColumn","dayOfMonth","push","getCellValue","currDate","activeMonthInView","length","isHighlight","isInRange","isRangeStart","isRangeEnd","dayOfWeek","isWeekend","isToday","isFirstRow","isLastRow","isFirsColumn","isLastColumn","isSelected","HeaderComponent","onClickPrev","onChangeViewType","onClickNext","viewType","viewingMonth","viewingYear","yearMatrixEnd","yearMatrixStart","layoutCalcs","style","root","arc_header","className","header","arc_header_nav","onClick","arch_header_label","Header","memo","MonthSelectorComponent","onChangeViewingMonth","monthsViewMatrix","useMemo","selectedMonth","months","Array","from","v","k","isCurrentMonth","isSelectedMonth","slice","getMonthViewMetrix","map","index","arc_view_row","key","cell","arc_view_cell","arc_view_cell_value_button","MonthSelector","YearSelectorComponent","onChangeViewingYear","yearsMatrix","rangeStartYear","selectedYearMap","years","isCurrentYear","isSelectedYear","getYearsViewMetrix","YearSelector","WeekDaysRowComponent","weekStartIndex","weekendIndices","order","Object","keys","concat","reduce","acc","weekdayIndex","getWeekDaysIndexToLabelMapForAStartOfTheWeek","weekDayOrder","weekDayMap","weekendIndicesMap","curr","weekdaysRow","arc_view_weekdays","weekDay","arc_view_weekdays_cell","arc_view_weekdays_cell_value","WeekDaysRow","DayOfMonthSelectorComponent","isRangeSelectorView","skipDisabledDatesInRange","setIsRangeSelectModeOn","fixedRangeLength","isFixedRangeView","onChangenSelectedMultiDates","isMultiSelectorView","onChangenNewSelectedRangeEnd","onChangenNewSelectedRangeStart","onChangenSelectedRangeEnd","onChangenSelectedRangeStart","onChangenSelectedDate","onChange","allowFewerDatesThanRange","disableFuture","disablePast","lockView","highlights","disableToday","useState","isArray","filter","d","daysOfMMonthViewMatrix","weekendIndexes","onDateClicked","useCallback","clickedDate","previouslySelectedDate","undefined","numberOfDaysToAdd","options","daysLeftToAdd","newDate","limitReached","loopControl","nextCouldBeDate","upperLimit","console","log","endDate","addDays","stringkey","newselectedMultiDates","dk","role","onMouseEnter","arc_view_cell_value","disabled","tabIndex","DayOfMonthSelector","Calendar","value","isMultiSelector","isRangeSelector","useDarkMode","weekends","skipWeekendsInRange","initialViewDate","startOfWeek","maxAllowedDate","minAllowedDate","fixedRange","size","fontSize","styles","arc","width","height","display","alignItems","flexDirection","boxSizing","arc_view","padding","alignTtems","margin","listStyle","justifyContent","flexBasis","maxWidth","flex","getStyles","isNormalView","Error","every","num","getWeekendInfo","dateOfMonth","setSelectedDate","setSelectedMultiDates","setSelectedRangeStart","setSelectedRangeEnd","setNewSelectedRangeStart","setNewSelectedRangeEnd","view","setView","setMonthInView","setYearInView","changeMonthInView","changeYearInView","changeView","startingYearForCurrRange","setStartingYearForCurrRange","useEffect","yearMatrixRangeStart","yearMatrixRangeEnd","onPrevClick","e","onNextClick","computedClass","maxDate","minDate","applyMaxConstraint","applyminConstraint","checkDisabledForADate","customDisabledCheck","applyMax","applyMin","currentYear","currentMonth","dateToCheck","checkIfDateIsDisabledHOF","startDayOfWeek","weekendMap","checkIfWeekendHOF","giveDaysInRange","range","start","end","dates","giveFormatter","format","partsMap","YYYY","MM","DD","parts","split","part","separator","string","forEach","validateAndReturnDateFormatter","App","isPopoverOpen","setIsPopoverOpen","one","setOne","onChangeone","two","setTwo","onChangetwo","three","setThree","onChangethree","four","setFour","onChangefour","five","setFive","onChangefive","six","setSix","onChangesix","seven","setSeven","onChangeseven","setEight","onChangeeight","nine","setNine","onChangenine","ten","setTen","onChangeTen","eleven","setEleven","onChangeEleven","tweleve","setTweleve","onChangeTweleve","thirteen","setThirteen","onChangeThirteen","fourteen","setFourteen","onChangeFourteen","fiveteen","setFiveteen","onChangeFiveteen","name","enableClipboard","src","output","formatted","Popover","isOpen","positions","content","dangerouslySetInnerHTML","__html","ReactDOMServer","renderToStaticMarkup","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99ece7fd.chunk.js","sourcesContent":["import type { MonthIndices, WeekdayIndices } from '../types';\n\n/**\n * This weekday index-to-label map is what is used by the Date object\n */\nexport const NATIVE_INDEX_TO_LABEL_WEEKDAY_MAP: Record<WeekdayIndices, string> = {\n  0: 'Su',\n  1: 'Mo',\n  2: 'Tu',\n  3: 'We',\n  4: 'Th',\n  5: 'Fr',\n  6: 'Sa',\n};\n\nexport const NATIVE_INDEX_TO_LABEL_MONTHS_MAP: Record<MonthIndices, string> = {\n  0: 'January',\n  1: 'February',\n  2: 'March',\n  3: 'April',\n  4: 'May',\n  5: 'June',\n  6: 'July',\n  7: 'August',\n  8: 'September',\n  9: 'October',\n  10: 'November',\n  11: 'December',\n};\n","/* eslint-disable no-loop-func */\nimport type {\n  MonthIndices,\n  WeekdayIndices,\n  MonthCell,\n  YearCell,\n  DayOfMonthCell,\n  GetDaysOfMonthViewMetrixParams,\n  CheckIfDateIsDisabledHOFParams,\n} from '../types';\n\nimport { NATIVE_INDEX_TO_LABEL_WEEKDAY_MAP } from './constants';\n\n/**\n * Add number of days to a month.\n */\nexport function addDays(\n  date: Date,\n  numberOfDaysToAdd: number,\n  options: {\n    isDisabled: (arg: Date) => boolean;\n    skipDisabledDatesInRange?: boolean;\n    upperLimit?: Date;\n  }\n): { endDate: Date; limitReached: boolean } {\n  let daysLeftToAdd = numberOfDaysToAdd;\n  let newDate = date;\n  let limitReached = false;\n  let loopControl = 0;\n\n  while (daysLeftToAdd > 0) {\n    if (loopControl === 1500) {\n      limitReached = true;\n      break;\n    }\n\n    const nextCouldBeDate = getNextDate(newDate);\n\n    if (options.upperLimit && isEqual(options.upperLimit, nextCouldBeDate)) {\n      limitReached = true;\n      break;\n    }\n\n    newDate = nextCouldBeDate;\n\n    if (options.skipDisabledDatesInRange) {\n      console.log('trigered');\n      if (options.skipDisabledDatesInRange && !options.isDisabled(nextCouldBeDate)) {\n        console.log('both so decrementing', nextCouldBeDate);\n        // if skipping is enabled and date is not disabled then decrement\n        daysLeftToAdd--;\n      }\n    } else {\n      // if skipping is disabled then just decrement\n      daysLeftToAdd--;\n    }\n    loopControl++;\n  }\n\n  return { endDate: newDate, limitReached };\n}\n\n/**\n * Converts a date to string\n */\nexport function toString(date: Date) {\n  return `${date.getFullYear()}${date.getMonth()}${date.getDate()}`;\n}\n\n/**\n * Returns true if toCheck date is before the date\n */\nexport function isBefore(date: Date, toCheckDate: Date): boolean {\n  if (toCheckDate.getFullYear() < date.getFullYear()) {\n    return true;\n  }\n\n  if (toCheckDate.getFullYear() === date.getFullYear()) {\n    if (toCheckDate.getMonth() < date.getMonth()) {\n      return true;\n    }\n\n    if (toCheckDate.getMonth() === date.getMonth()) {\n      if (toCheckDate.getDate() < date.getDate()) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the given date is valid\n */\nexport function isValid(date: undefined | Date): date is Date {\n  return typeof date !== 'undefined' && date !== null && !isNaN(new Date(date as Date).getTime());\n}\n\n/**\n * Returns true if the given dates are equal\n */\nexport function isEqual(first: Date, second: Date): boolean {\n  return (\n    first.getFullYear() === second.getFullYear() &&\n    first.getMonth() === second.getMonth() &&\n    first.getDate() === second.getDate()\n  );\n}\n\n/**\n * Returns true if the given date falls inside the range\n */\nexport function isPartOfRange(rangeStart: Date, rangeEnd: Date, date: Date): boolean {\n  // if date lies in between the year\n  if (rangeStart.getFullYear() <= date.getFullYear() && date.getFullYear() <= rangeEnd.getFullYear()) {\n    // if year is in-between range year start and year end\n    if (rangeStart.getFullYear() < date.getFullYear() && date.getFullYear() < rangeEnd.getFullYear()) {\n      return true;\n    }\n\n    // if start year and end year are same\n    if (rangeStart.getFullYear() === rangeEnd.getFullYear()) {\n      if (rangeStart.getMonth() <= date.getMonth() && date.getMonth() <= rangeEnd.getMonth()) {\n        // if month is in-between month start and and moth end\n        if (rangeStart.getMonth() < date.getMonth() && date.getMonth() < rangeEnd.getMonth()) {\n          return true;\n        }\n\n        // if month start and month end are same\n        if (rangeStart.getMonth() === rangeEnd.getMonth()) {\n          if (\n            rangeStart.getDate() <= date.getDate() &&\n            date.getDate() <= rangeEnd.getDate() &&\n            date.getMonth() === rangeEnd.getMonth()\n          ) {\n            return true;\n          }\n          return false;\n        }\n\n        // if date is in start month\n        if (rangeStart.getMonth() === date.getMonth()) {\n          if (rangeStart.getDate() <= date.getDate()) {\n            return true;\n          }\n          return false;\n        }\n\n        // if date is in end month\n        if (rangeEnd.getMonth() === date.getMonth()) {\n          if (date.getDate() <= rangeEnd.getDate()) {\n            return true;\n          }\n          return false;\n        }\n\n        return false;\n      }\n      return false;\n    }\n\n    // if year is same as start year\n    if (rangeStart.getFullYear() === date.getFullYear()) {\n      // if month is greater than start month\n      if (date.getMonth() > rangeStart.getMonth()) {\n        return true;\n      }\n\n      // if month is same as start month\n      if (date.getMonth() === rangeStart.getMonth()) {\n        // if date is greater than range start date\n        if (date.getDate() >= rangeStart.getDate()) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    // if year is same as end year\n    if (rangeEnd.getFullYear() === date.getFullYear()) {\n      // if month is smaller than end month\n      if (date.getMonth() < rangeEnd.getMonth()) {\n        return true;\n      }\n\n      // if month is same as end month\n      if (date.getMonth() === rangeEnd.getMonth()) {\n        // if date is smaller than range end date\n        if (date.getDate() <= rangeEnd.getDate()) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    return false;\n  }\n  return false;\n}\n\n/**\n * Returns true if the given year is a leap year.\n * @param {number} year\n */\nexport function isALeapYear(year: number) {\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n/**\n * Returns the number of days in the given month of the given year.\n * @param {number} year\n * @param {number} month\n */\nexport function getNumberOfDaysInAMonth(year: number, month: MonthIndices) {\n  const map: Record<MonthIndices, number> = {\n    0: 31,\n    1: isALeapYear(year) ? 29 : 28,\n    2: 31,\n    3: 30,\n    4: 31,\n    5: 30,\n    6: 31,\n    7: 31,\n    8: 30,\n    9: 31,\n    10: 30,\n    11: 31,\n  };\n\n  return map[month];\n}\n\nfunction isLastDayOfMonth(date: Date): boolean {\n  return getNumberOfDaysInAMonth(date.getFullYear(), date.getMonth() as MonthIndices) === date.getDate();\n}\n\nfunction isLastDayOfYear(date: Date): boolean {\n  return (date.getMonth() as MonthIndices) === 11 && isLastDayOfMonth(date);\n}\n\nexport function getPreviousMonth(month: MonthIndices): MonthIndices {\n  return month === 0 ? 11 : ((month - 1) as MonthIndices);\n}\n\nexport function getNextMonth(month: MonthIndices): MonthIndices {\n  return month === 11 ? 0 : ((month + 1) as MonthIndices);\n}\n\nexport function getPreviousYear(year: number): number {\n  return year === 1 ? 1 : year - 1;\n}\n\nexport function getNextYear(year: number): number {\n  return year + 1;\n}\n\nexport function getNextDate(date: Date): Date {\n  if (isLastDayOfYear(date)) {\n    return new Date(date.getFullYear() + 1, 0, 1);\n  } else if (isLastDayOfMonth(date)) {\n    return new Date(date.getFullYear(), date.getMonth() + 1, 1);\n  } else {\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate() + 1);\n  }\n}\n\nexport function giveRangeDays(range: [Date, Date]): Date[] {\n  if (!Array.isArray(range)) {\n    return [];\n  }\n  const [start, end] = range;\n  if (!isValid(start) || !isValid(end)) {\n    return [];\n  }\n  let date = start;\n  const dates = [];\n  while (isBefore(end, date)) {\n    dates.push(date);\n    date = getNextDate(date);\n  }\n  dates.push(end);\n  return dates;\n}\n\n// WEEKDAY UTILS\n\n/**\n * Creates and return a new weekday index-label map as per the **start**\n * parameter. By default this will return the same weekday index-label map\n * used by the Date object.\n * 0 means Sun - if we follow the native Date convention\n * Now if someone wants to start their week from Mon, then 0 would mean Monday which is different from\n * the convention used by the Date methods.\n * @param startOfTheWeek index of the day to be considered as start of the week\n */\nexport function getWeekDaysIndexToLabelMapForAStartOfTheWeek(startOfTheWeek = 0): {\n  map: Record<WeekdayIndices, string>;\n  order: WeekdayIndices[];\n} {\n  // we break [0,1,2,3,4,5,6] in two parts, startOfTheWeek = 3\n  // [startOfTheWeek,4,5,6] and [0,1,2] and join them with their labels\n  // this is just to re-order the label in the **correct order**\n  // i.e 0 becomes Wed although in native order 0 is Sunday\n  const order = Object.keys(NATIVE_INDEX_TO_LABEL_WEEKDAY_MAP)\n    .slice(startOfTheWeek, 7)\n    .concat(Object.keys(NATIVE_INDEX_TO_LABEL_WEEKDAY_MAP).slice(0, startOfTheWeek)) as unknown as WeekdayIndices[];\n\n  const map = order.reduce((acc, weekdayIndex, index) => {\n    // acc[0] = DEFAULT_WEEKDAY_INDEX[3]\n    acc[Number(index) as WeekdayIndices] = NATIVE_INDEX_TO_LABEL_WEEKDAY_MAP[Number(weekdayIndex) as WeekdayIndices];\n    return acc;\n  }, {} as Record<WeekdayIndices, string>);\n\n  return { map, order };\n}\n\n/**\n * So if the Date object says that some date has 3 day-of-the-week. No this 3 means Wednesday as per the native index for week days.\n * But if a calendar starts from Monday, then wednesday will not be at 3 but it will be at some other index which is according to a different index-label map.\n * So this method returns that index for wednesday.\n * @param weekdayAsPerNativeIndex day-of-the-week as per the Date object\n * @param startOfTheWeek index of the day to be considered as start of the week\n */\nfunction getInfluencedWeekDayIndexAsPerAStartDay(weekdayAsPerNativeIndex: number, startOfTheWeek = 0): WeekdayIndices {\n  return (\n    weekdayAsPerNativeIndex >= startOfTheWeek\n      ? weekdayAsPerNativeIndex - startOfTheWeek\n      : 6 - startOfTheWeek + 1 + weekdayAsPerNativeIndex\n  ) as WeekdayIndices;\n}\n\n// {\n//   0: 'Mo',\n//   1: 'Tu',\n//   2: 'We',\n//   3: 'Th',\n//   4: 'Fr',\n//   5: 'Sa',\n//   6: 'Su'\n// };\n// start = 1\n// 6 - 1 = 5\n// influencedIndex = 3 (Thu)\n// 3 <= 5 so 3 + 1 = 4 (Thu) (native)\n// influencedIndex = 2 (Wed)\n// 2 <= 5 so 2 + 1 = 3 (Wed) (native)\n// influencedIndex = 5 (Sa)\n// 5 <= 5 so 5 + 1 = 6 (Sa) (native)\n// influencedIndex = 6 (Su)\n// 6 > 5 so ((6 - 5) - 1) = 0 (su) (native)\n\n// {\n//   0: 'Tu',\n//   1: 'We',\n//   2: 'Th',\n//   3: 'Fr',\n//   4: 'Sa',\n//   5: 'Su',\n//   6: 'Mo'\n// };\n// start = 2\n// 6 - 2 = 4\n// influencedIndex = 3 (Fr)\n// 3 <= 4 so 3 + 2 = 5 (Fr) (native)\n// influencedIndex = 2 (Th)\n// 2 <= 4 so 2 + 2 = 4 (Th) (native)\n// influencedIndex = 5 (Su)\n// 5 > 4 so ((5 - 4) - 1) = 0 (Su) (native)\n// influencedIndex = 6 (Mo)\n// 6 > 4 so ((6 - 4) - 1) = 1 (Mo) (native)\nfunction getNativeWeekDayIndexFromAStartDayInfluencedIndex(\n  weekdayAsPerChangedIndex: number,\n  startOfTheWeek: number\n): WeekdayIndices {\n  const diversion = 6 - startOfTheWeek;\n  return (\n    weekdayAsPerChangedIndex <= diversion\n      ? weekdayAsPerChangedIndex + startOfTheWeek\n      : weekdayAsPerChangedIndex - diversion - 1\n  ) as WeekdayIndices;\n}\n\n/**\n * Gives the index of day-of-the-week on the 1st of the provided month-year.\n * @param year Specify a year\n * @param month Specify a month\n * @param startOfTheWeek index of the day to be considered as start of the week\n */\nfunction getInfluencedWeekDayIndexOnFirstDateOfMonth(\n  year: number,\n  month: number,\n  startOfTheWeek: number\n): WeekdayIndices {\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  return getInfluencedWeekDayIndexAsPerAStartDay(date.getDay(), startOfTheWeek) as WeekdayIndices;\n}\n\n/**\n * Returns info about what indexes are weekend\n * @param startOfTheWeek index of the day to be considered as start of the week\n */\nexport function getWeekendInfo(startOfTheWeek: number): WeekdayIndices[] {\n  if (startOfTheWeek === 0) {\n    return [6, 0];\n  } else if (startOfTheWeek === 1) {\n    return [5, 6];\n  } else if (startOfTheWeek === 2) {\n    return [4, 5];\n  } else if (startOfTheWeek === 3) {\n    return [3, 4];\n  } else if (startOfTheWeek === 4) {\n    return [2, 3];\n  } else if (startOfTheWeek === 5) {\n    return [1, 2];\n  } else {\n    return [0, 1];\n  }\n}\n\n// 1 - 20 (20 years in one range block)\n// 21 - 40\n// so if you provide 3 then the start of raange for 3 would be\n// 1 since it belongs to the 1-20 year range.\nexport function getStartOfRangeForAYear(year: number) {\n  // last cell will always be a perfect multiple of 20\n  // take 2016 as an example\n  if (year % 20 === 0) {\n    return 20 * (year / 20 - 1) + 1;\n  }\n  // logic derived from a few examples like 2021, 1981, 1973\n  return 20 * Number((year / 20).toFixed(0)) + 1;\n}\n\n/**\n * Returns matrix for the month select view.\n * @param selectedMonth\n */\nexport function getMonthViewMetrix(selectedMonth: Record<number, 1>): Array<MonthCell>[] {\n  const months = Array.from({ length: 12 }, (v, k) => {\n    return {\n      month: k as MonthIndices,\n      isCurrentMonth: new Date().getMonth() === k,\n      isSelectedMonth: selectedMonth[k] === 1,\n    };\n  });\n  return [months.slice(0, 3), months.slice(3, 6), months.slice(6, 9), months.slice(9, 12)];\n}\n\nexport function getPreviousRangeStartingYear(rangeStartYear: number) {\n  if (rangeStartYear === 1) {\n    return 1;\n  }\n  return getStartOfRangeForAYear(rangeStartYear - 1);\n}\n\nexport function getNextRangeStartingYear(rangeStartYear: number) {\n  return getStartOfRangeForAYear(rangeStartYear + 20);\n}\n\nexport function getYearRangeLimits(rangeStartYear: number) {\n  return [rangeStartYear, rangeStartYear + 19];\n}\n\nexport function getYearsViewMetrix(rangeStartYear: number, selectedYearMap: Record<number, 1>): Array<YearCell>[] {\n  const years = Array.from({ length: 20 }, (v, index) => {\n    return {\n      year: rangeStartYear + index,\n      isCurrentYear: new Date().getFullYear() === rangeStartYear + index,\n      isSelectedYear: selectedYearMap[rangeStartYear + index] === 1,\n    };\n  });\n  return [years.slice(0, 5), years.slice(5, 10), years.slice(10, 15), years.slice(15, 20)];\n}\n\nexport function validateAndReturnDateFormatter(format: string) {\n  const partsMap: Record<'YYYY' | 'MM' | 'DD', boolean> = { YYYY: true, MM: true, DD: true };\n  const parts = format.split('-') as ('YYYY' | 'MM' | 'DD')[];\n  if (parts.length !== 3) {\n    throw new Error('Date format is invalid.');\n  }\n  if (!parts.every((part) => partsMap[part])) {\n    throw new Error('Date format uses unknown parts.');\n  }\n\n  /**\n   * Separator to be used when formatting the date string.\n   * Default is '-' i.e 'DD-MM-YYYY'\n   */\n  return (date: any, separator: string): string | undefined => {\n    if (!isValid(date)) {\n      return;\n    }\n    let string = '';\n    parts.forEach((part, index) => {\n      if (part === 'YYYY') {\n        string += date.getFullYear();\n      }\n      if (part === 'MM') {\n        string += date.getMonth();\n      }\n      if (part === 'DD') {\n        string += date.getDate();\n      }\n      if (index !== 2) {\n        string += separator;\n      }\n    });\n    return string;\n  };\n}\n\nexport function checkIfWeekendHOF(weekends: WeekdayIndices[], startDayOfWeek: WeekdayIndices) {\n  const weekendMap = weekends.reduce((acc, curr) => {\n    acc[curr] = 1;\n    return acc;\n  }, {} as Record<WeekdayIndices, 1>);\n  return function checkIfWeekend(date: Date) {\n    return weekendMap[getInfluencedWeekDayIndexAsPerAStartDay(date.getDay(), startDayOfWeek)] === 1;\n  };\n}\n\nexport function checkIfDateIsDisabledHOF(params: CheckIfDateIsDisabledHOFParams) {\n  const { disablePast, disableToday, disableFuture, customDisabledCheck, maxDate, minDate, applyMax, applyMin } =\n    params;\n\n  const today = new Date();\n  const currentYear = today.getFullYear();\n  const currentMonth = today.getMonth();\n  const currDate = today.getDate();\n\n  return function checkIfDateIsDisabled(dateToCheck: Date) {\n    if (disablePast) {\n      if (dateToCheck.getFullYear() < currentYear) {\n        return true;\n      }\n\n      if (dateToCheck.getFullYear() === currentYear && dateToCheck.getMonth() < currentMonth) {\n        return true;\n      }\n\n      if (\n        dateToCheck.getFullYear() === currentYear &&\n        dateToCheck.getMonth() === currentMonth &&\n        dateToCheck.getDate() < currDate\n      ) {\n        return true;\n      }\n    }\n    if (disableToday) {\n      if (\n        dateToCheck.getFullYear() === currentYear &&\n        dateToCheck.getMonth() === currentMonth &&\n        dateToCheck.getDate() === currDate\n      ) {\n        return true;\n      }\n    }\n    if (disableFuture) {\n      if (dateToCheck.getFullYear() > currentYear) {\n        return true;\n      }\n\n      if (dateToCheck.getFullYear() === currentYear && dateToCheck.getMonth() > currentMonth) {\n        return true;\n      }\n\n      if (\n        dateToCheck.getFullYear() === currentYear &&\n        dateToCheck.getMonth() === currentMonth &&\n        dateToCheck.getDate() > currDate\n      ) {\n        return true;\n      }\n    }\n\n    if (applyMax) {\n      if (isBefore(dateToCheck, maxDate)) {\n        return true;\n      }\n    }\n\n    if (applyMin) {\n      if (isBefore(minDate, dateToCheck)) {\n        return true;\n      }\n    }\n\n    if (typeof customDisabledCheck === 'function') {\n      return customDisabledCheck(dateToCheck);\n    }\n\n    return false;\n  };\n}\n\nexport function getDaysOfMonthViewMetrix(params: GetDaysOfMonthViewMetrixParams): Array<DayOfMonthCell>[] {\n  const {\n    isRangeSelectModeOn,\n    isRangeView,\n    selectedDate,\n    selectedRangeStart,\n    selectedRangeEnd,\n    highlightsMap,\n    newSelectedRangeStart,\n    newSelectedRangeEnd,\n    isSelectMultiDate,\n    selectedMultiDates,\n    yearInView,\n    monthInView,\n    startOfTheWeek,\n    isDisabled,\n    checkIfWeekend,\n  } = params;\n\n  const matrix: Array<DayOfMonthCell>[] = [[], [], [], [], [], []];\n\n  const currentMonthDatesStartIndex = getInfluencedWeekDayIndexOnFirstDateOfMonth(\n    yearInView,\n    monthInView,\n    startOfTheWeek\n  );\n\n  const today = new Date();\n  const totalDaysInCurrentMonth = getNumberOfDaysInAMonth(yearInView, monthInView);\n\n  const isPrevMonthFromLastYear = monthInView === 0;\n  const isCurrentMonthLast = monthInView === 11;\n\n  const totalDaysInPrevMonth = getNumberOfDaysInAMonth(\n    isPrevMonthFromLastYear ? getPreviousYear(yearInView) : yearInView,\n    getPreviousMonth(monthInView)\n  );\n\n  // calendar has 6 rows (0 - 5)\n  let row = 0;\n  let weekColumn: WeekdayIndices = 0;\n\n  //  31 - (6 - 1) === 26\n  const lastMonthDateStartFrom = totalDaysInPrevMonth - (currentMonthDatesStartIndex - 1);\n\n  // first loop to fill cell values of last month\n  for (let dayOfMonth = lastMonthDateStartFrom; dayOfMonth <= totalDaysInPrevMonth; dayOfMonth++) {\n    if (weekColumn === 7) {\n      weekColumn = 0;\n      row++;\n    }\n\n    matrix[row].push(\n      getCellValue({\n        currDate: new Date(\n          isPrevMonthFromLastYear ? getPreviousYear(yearInView) : yearInView,\n          getPreviousMonth(monthInView),\n          dayOfMonth\n        ),\n        activeMonthInView: false,\n        highlightsMap,\n        newSelectedRangeEnd,\n        newSelectedRangeStart,\n        selectedDate,\n        selectedRangeEnd,\n        selectedRangeStart,\n        isDisabled,\n        isRangeSelectModeOn,\n        isRangeView,\n        isSelectMultiDate,\n        row,\n        weekColumn,\n        checkIfWeekend,\n        today,\n        selectedMultiDates,\n        startOfTheWeek,\n      })\n    );\n    weekColumn++;\n  }\n\n  // second loop to fill cell values of current month\n  for (let dayOfMonth = 1; dayOfMonth <= totalDaysInCurrentMonth; dayOfMonth++) {\n    if (weekColumn === 7) {\n      weekColumn = 0;\n      row++;\n    }\n\n    matrix[row].push(\n      getCellValue({\n        currDate: new Date(yearInView, monthInView, dayOfMonth),\n        activeMonthInView: true,\n        highlightsMap,\n        newSelectedRangeEnd,\n        newSelectedRangeStart,\n        selectedDate,\n        selectedRangeEnd,\n        selectedRangeStart,\n        isDisabled,\n        isRangeSelectModeOn,\n        isRangeView,\n        isSelectMultiDate,\n        row,\n        weekColumn,\n        checkIfWeekend,\n        today,\n        selectedMultiDates,\n        startOfTheWeek,\n      })\n    );\n    weekColumn++;\n  }\n\n  let dayOfMonth = 1;\n  // last loop to fill cell values of next month\n\n  while (matrix[5].length < 7) {\n    if (weekColumn === 7) {\n      weekColumn = 0;\n      row++;\n    }\n    matrix[row].push(\n      getCellValue({\n        currDate: new Date(isCurrentMonthLast ? yearInView + 1 : yearInView, getNextMonth(monthInView), dayOfMonth),\n        activeMonthInView: false,\n        highlightsMap,\n        newSelectedRangeEnd,\n        newSelectedRangeStart,\n        selectedDate,\n        selectedRangeEnd,\n        selectedRangeStart,\n        isDisabled,\n        isRangeSelectModeOn,\n        isRangeView,\n        isSelectMultiDate,\n        row,\n        weekColumn,\n        checkIfWeekend,\n        today,\n        selectedMultiDates,\n        startOfTheWeek,\n      })\n    );\n    weekColumn++;\n    dayOfMonth++;\n  }\n\n  return matrix;\n}\n\ninterface GetCellValueParams\n  extends Pick<\n    GetDaysOfMonthViewMetrixParams,\n    | 'highlightsMap'\n    | 'isRangeView'\n    | 'isRangeSelectModeOn'\n    | 'newSelectedRangeStart'\n    | 'newSelectedRangeEnd'\n    | 'selectedRangeStart'\n    | 'selectedRangeEnd'\n    | 'isSelectMultiDate'\n    | 'isDisabled'\n    | 'selectedDate'\n    | 'selectedMultiDates'\n    | 'checkIfWeekend'\n    | 'startOfTheWeek'\n  > {\n  currDate: Date;\n  today: Date;\n  activeMonthInView: boolean;\n  row: number;\n  weekColumn: number;\n}\n\nfunction getCellValue({\n  currDate,\n  activeMonthInView,\n  highlightsMap,\n  newSelectedRangeEnd,\n  newSelectedRangeStart,\n  selectedDate,\n  selectedRangeEnd,\n  selectedRangeStart,\n  isDisabled,\n  isRangeSelectModeOn,\n  isRangeView,\n  isSelectMultiDate,\n  row,\n  weekColumn,\n  checkIfWeekend,\n  today,\n  selectedMultiDates,\n  startOfTheWeek,\n}: GetCellValueParams) {\n  return {\n    date: currDate,\n    dayOfMonth: currDate.getDate(),\n    month: currDate.getMonth() as MonthIndices,\n    activeMonthInView,\n    isHighlight: highlightsMap[toString(currDate)] === 1,\n    isInRange: isRangeView\n      ? isRangeSelectModeOn\n        ? isValid(newSelectedRangeStart) && isValid(newSelectedRangeEnd)\n          ? isBefore(newSelectedRangeEnd, newSelectedRangeStart)\n            ? isPartOfRange(newSelectedRangeStart, newSelectedRangeEnd, currDate)\n            : isPartOfRange(newSelectedRangeEnd, newSelectedRangeStart, currDate)\n          : false\n        : !!selectedRangeStart && !!selectedRangeEnd && isPartOfRange(selectedRangeStart, selectedRangeEnd, currDate)\n      : false,\n    isRangeStart: isRangeView\n      ? isRangeSelectModeOn\n        ? isValid(newSelectedRangeStart)\n          ? isEqual(newSelectedRangeStart, currDate)\n          : false\n        : !!selectedRangeStart && isEqual(selectedRangeStart, currDate)\n      : false,\n    isRangeEnd: isRangeView\n      ? isRangeSelectModeOn\n        ? false\n        : !!selectedRangeEnd && isEqual(selectedRangeEnd, currDate)\n      : false,\n    year: currDate.getFullYear(),\n    dayOfWeek: getNativeWeekDayIndexFromAStartDayInfluencedIndex(weekColumn, startOfTheWeek),\n    isWeekend: checkIfWeekend(currDate),\n    isToday: isEqual(currDate, today),\n    isFirstRow: row === 0,\n    isLastRow: row === 5,\n    isFirsColumn: weekColumn === 0,\n    isLastColumn: weekColumn === 6,\n    isSelected: isSelectMultiDate\n      ? !!selectedMultiDates[toString(currDate)]\n      : isRangeView\n      ? false\n      : selectedDate\n      ? currDate.getMonth() === selectedDate.getMonth() &&\n        currDate.getFullYear() === selectedDate.getFullYear() &&\n        currDate.getDate() === selectedDate.getDate()\n      : false,\n    isDisabled: isDisabled(currDate),\n  };\n}\n","import React, { memo } from 'react';\nimport { CSSProps } from '../../calendar';\n\nimport { MonthIndices } from '../../types';\n\nimport { NATIVE_INDEX_TO_LABEL_MONTHS_MAP } from '../../utils/constants';\n\ninterface Props {\n  onClickPrev: (e: any) => any;\n  onClickNext: (e: any) => any;\n  onChangeViewType: (view: 'month_dates' | 'months' | 'years') => any;\n  viewType: 'month_dates' | 'months' | 'years';\n  viewingMonth: MonthIndices;\n  viewingYear: number;\n  yearMatrixStart: number;\n  yearMatrixEnd: number;\n  layoutCalcs: CSSProps;\n}\n\nfunction HeaderComponent({\n  onClickPrev,\n  onChangeViewType,\n  onClickNext,\n  viewType,\n  viewingMonth,\n  viewingYear,\n  yearMatrixEnd,\n  yearMatrixStart,\n  layoutCalcs,\n}: Props) {\n  return (\n    <header style={layoutCalcs.root.arc_header} className='arc_header'>\n      <button\n        style={layoutCalcs.header.arc_header_nav}\n        className='arc_header_nav arc_header_nav-prev'\n        onClick={onClickPrev}>\n        <span>←</span>\n      </button>\n      {viewType === 'month_dates' ? (\n        <button\n          style={layoutCalcs.header.arch_header_label}\n          className='arc_header_label arc_header_label-days-of-month'\n          onClick={() => onChangeViewType('years')}>\n          <div>\n            <span>{NATIVE_INDEX_TO_LABEL_MONTHS_MAP[viewingMonth]}</span>\n          </div>\n          <div>\n            <span>{viewingYear}</span>\n          </div>\n        </button>\n      ) : viewType === 'months' ? (\n        <button style={layoutCalcs.header.arch_header_label} className='arc_header_label arc_header_label-months'>\n          <div onClick={() => onChangeViewType('years')}>\n            <span>{viewingYear}</span>\n          </div>\n        </button>\n      ) : (\n        <button\n          style={layoutCalcs.header.arch_header_label}\n          className='arc_header_label arc_header_label-years'\n          onClick={() => onChangeViewType('month_dates')}>\n          <div>\n            <span>\n              {yearMatrixStart}-{yearMatrixEnd}\n            </span>\n          </div>\n        </button>\n      )}\n      <button\n        style={layoutCalcs.header.arc_header_nav}\n        className='arc_header_nav arc_header_nav-next'\n        onClick={onClickNext}>\n        <span>→</span>\n      </button>\n    </header>\n  );\n}\n\nexport const Header = memo(HeaderComponent);\n","import React, { memo, useMemo } from 'react';\n\nimport { MonthCell, MonthIndices } from '../../types';\n\nimport { getMonthViewMetrix } from '../../utils/date-utils';\nimport { NATIVE_INDEX_TO_LABEL_MONTHS_MAP } from '../../utils/constants';\nimport { CSSProps } from '../../calendar';\n\ninterface Props {\n  onChangeViewType: (view: 'month_dates' | 'months' | 'years') => any;\n  onChangeViewingMonth: (month: MonthIndices) => any;\n  layoutCalcs: CSSProps;\n}\n\nfunction MonthSelectorComponent({ onChangeViewingMonth, onChangeViewType, layoutCalcs }: Props) {\n  const monthsViewMatrix = useMemo<MonthCell[][]>(() => {\n    return getMonthViewMetrix({});\n  }, []);\n\n  return (\n    <div style={layoutCalcs.root['arc_view-months']} className='arc_view-months'>\n      {monthsViewMatrix.map((row, index) => (\n        <div style={layoutCalcs.months.arc_view_row} className='arc_view_row' key={index}>\n          {row.map((cell) => (\n            <div\n              style={layoutCalcs.months.arc_view_cell}\n              className={`arc_view_cell${cell.isCurrentMonth ? ' arc_this_month' : ''}`}\n              key={cell.month}>\n              <button\n                style={layoutCalcs.months.arc_view_cell_value_button}\n                onClick={() => {\n                  onChangeViewingMonth(cell.month);\n                  onChangeViewType('month_dates');\n                }}>\n                {NATIVE_INDEX_TO_LABEL_MONTHS_MAP[cell.month]}\n              </button>\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport const MonthSelector = memo(MonthSelectorComponent);\n","import React, { memo, useMemo } from 'react';\nimport { CSSProps } from '../../calendar';\n\nimport { YearCell } from '../../types';\n\nimport { getYearsViewMetrix } from '../../utils/date-utils';\n\ninterface Props {\n  onChangeViewType: (view: 'month_dates' | 'months' | 'years') => any;\n  onChangeViewingYear: (year: number) => any;\n  yearMatrixStart: number;\n  yearMatrixEnd: number;\n  layoutCalcs: CSSProps;\n}\n\nfunction YearSelectorComponent({\n  onChangeViewType,\n  onChangeViewingYear,\n  yearMatrixStart,\n  yearMatrixEnd,\n  layoutCalcs,\n}: Props) {\n  // TODO add highlight slected dates years\n  const yearsMatrix = useMemo<YearCell[][]>(() => {\n    return getYearsViewMetrix(yearMatrixStart, {});\n  }, [yearMatrixStart]);\n\n  return (\n    <div style={layoutCalcs.root['arc_view-years']} className='arc_view-years'>\n      {yearsMatrix.map((row, index) => (\n        <div style={layoutCalcs.years.arc_view_row} className='arc_view_row' key={index}>\n          {row.map((cell) => (\n            <div\n              style={layoutCalcs.years.arc_view_cell}\n              className={`arc_view_cell${cell.isCurrentYear ? ' arc_this_year' : ''}`}\n              key={cell.year}>\n              <button\n                style={layoutCalcs.months.arc_view_cell_value_button}\n                onClick={() => {\n                  onChangeViewingYear(cell.year);\n                  onChangeViewType('months');\n                }}>\n                {cell.year}\n              </button>\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport const YearSelector = memo(YearSelectorComponent);\n","import React, { memo, useMemo } from 'react';\nimport { CSSProps } from '../../calendar';\n\nimport { WeekdayIndices } from '../../types';\n\nimport { getWeekDaysIndexToLabelMapForAStartOfTheWeek } from '../../utils/date-utils';\n\ninterface Props {\n  weekStartIndex: WeekdayIndices;\n  weekendIndices: WeekdayIndices[];\n  layoutCalcs: CSSProps;\n}\n\nfunction WeekDaysRowComponent({ weekStartIndex, weekendIndices, layoutCalcs }: Props) {\n  // week days as per the start day of the week\n  const { order: weekDayOrder, map: weekDayMap } = useMemo(() => {\n    return getWeekDaysIndexToLabelMapForAStartOfTheWeek(weekStartIndex);\n  }, [weekStartIndex]);\n\n  const weekendIndicesMap: Record<WeekdayIndices, 1> = useMemo(() => {\n    return weekendIndices.reduce((acc, curr) => {\n      acc[curr] = 1;\n      return acc;\n    }, {} as Record<WeekdayIndices, 1>);\n  }, [weekendIndices]);\n\n  return (\n    <ul style={layoutCalcs.weekdaysRow.arc_view_weekdays} className='arc_view_weekdays'>\n      {weekDayOrder.map((weekDay, weekdayIndex) => (\n        <li\n          style={layoutCalcs.weekdaysRow.arc_view_weekdays_cell}\n          key={weekDay}\n          className={`arc_view_weekdays_cell${weekendIndicesMap[weekdayIndex as WeekdayIndices] ? ' arc_wknd' : ''}`}>\n          <div style={layoutCalcs.weekdaysRow.arc_view_weekdays_cell_value}>\n            <span>{weekDayMap[weekdayIndex as WeekdayIndices]}</span>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport const WeekDaysRow = memo(WeekDaysRowComponent);\n","import React, { memo, useCallback, useMemo, useState } from 'react';\nimport { CSSProps, Value } from '../../calendar';\n\nimport { DayOfMonthCell, MonthIndices, WeekdayIndices } from '../../types';\nimport { addDays, getDaysOfMonthViewMetrix, getNextDate, isBefore, isValid, toString } from '../../utils/date-utils';\n\ninterface Props {\n  onChangeViewingYear: (year: number) => any;\n  onChangeViewingMonth: (month: MonthIndices) => any;\n  onChangenNewSelectedRangeEnd: (date: Date | undefined) => any;\n  onChangenNewSelectedRangeStart: (date: Date | undefined) => any;\n  onChangenSelectedRangeStart: (date: Date | undefined) => any;\n  onChangenSelectedRangeEnd: (date: Date | undefined) => any;\n  onChangenSelectedMultiDates: (dates: Record<string, Date | undefined>) => any;\n  onChangenSelectedDate: (dates: Date) => any;\n  viewingMonth: MonthIndices;\n  allowFewerDatesThanRange: boolean;\n  skipDisabledDatesInRange: boolean;\n  skipWeekendsInRange: boolean;\n  viewingYear: number;\n  weekStartIndex: WeekdayIndices;\n  fixedRangeLength: number;\n  selectedDate: Date | undefined;\n  selectedRangeStart: Date | undefined;\n  selectedRangeEnd: Date | undefined;\n  newSelectedRangeStart: Date | undefined;\n  newSelectedRangeEnd: Date | undefined;\n  isRangeSelectorView: boolean;\n  isFixedRangeView: boolean;\n  weekendIndices: WeekdayIndices[];\n  selectedMultiDates: Record<string, Date | undefined>;\n  isMultiSelectorView: boolean;\n  isRangeSelectModeOn: boolean;\n  setIsRangeSelectModeOn: (on: boolean) => void;\n  disableFuture: boolean;\n  disablePast: boolean;\n  disableToday: boolean;\n  lockView: boolean;\n  maxAllowedDate?: Date;\n  minAllowedDate?: Date;\n  highlights: Date[];\n  isDisabled: (date: Date) => boolean;\n  checkIfWeekend: (date: Date) => boolean;\n  today: Date;\n  onChange?: (value: Value) => any | Promise<any>;\n  layoutCalcs: CSSProps;\n}\n\nfunction DayOfMonthSelectorComponent({\n  selectedDate,\n  selectedRangeStart,\n  selectedRangeEnd,\n  newSelectedRangeStart,\n  weekStartIndex,\n  onChangeViewingYear,\n  onChangeViewingMonth,\n  newSelectedRangeEnd,\n  isRangeSelectorView,\n  skipDisabledDatesInRange,\n  setIsRangeSelectModeOn,\n  fixedRangeLength,\n  isFixedRangeView,\n  isRangeSelectModeOn,\n  isDisabled,\n  onChangenSelectedMultiDates,\n  selectedMultiDates,\n  isMultiSelectorView,\n  today,\n  viewingMonth,\n  onChangenNewSelectedRangeEnd,\n  onChangenNewSelectedRangeStart,\n  onChangenSelectedRangeEnd,\n  onChangenSelectedRangeStart,\n  onChangenSelectedDate,\n  layoutCalcs,\n  weekendIndices,\n  onChange,\n  viewingYear,\n  allowFewerDatesThanRange,\n  disableFuture,\n  disablePast,\n  lockView,\n  checkIfWeekend,\n  highlights,\n  disableToday,\n}: Props) {\n  const [highlightsMap] = useState<Record<string, 1>>(() => {\n    if (Array.isArray(highlights)) {\n      return highlights\n        .filter((d) => isValid(d))\n        .reduce((acc, curr) => {\n          acc[toString(curr)] = 1;\n          return acc;\n        }, {} as Record<string, 1>);\n    }\n    return {};\n  });\n\n  const daysOfMMonthViewMatrix = useMemo(() => {\n    return getDaysOfMonthViewMetrix({\n      selectedDate: selectedDate,\n      selectedRangeStart: selectedRangeStart,\n      selectedRangeEnd: selectedRangeEnd,\n      newSelectedRangeStart: newSelectedRangeStart,\n      newSelectedRangeEnd: newSelectedRangeEnd,\n      checkIfWeekend,\n      isRangeView: isRangeSelectorView || isFixedRangeView,\n      isRangeSelectModeOn,\n      weekendIndexes: weekendIndices,\n      selectedMultiDates,\n      highlightsMap,\n      isSelectMultiDate: isMultiSelectorView,\n      yearInView: viewingYear,\n      monthInView: viewingMonth,\n      startOfTheWeek: weekStartIndex,\n      disableFuture,\n      disablePast,\n      disableToday,\n      isDisabled,\n    });\n  }, [\n    selectedDate,\n    selectedRangeStart,\n    selectedRangeEnd,\n    newSelectedRangeStart,\n    newSelectedRangeEnd,\n    isRangeSelectorView,\n    isFixedRangeView,\n    isRangeSelectModeOn,\n    checkIfWeekend,\n    weekendIndices,\n    selectedMultiDates,\n    highlightsMap,\n    isMultiSelectorView,\n    viewingYear,\n    viewingMonth,\n    weekStartIndex,\n    disableFuture,\n    disablePast,\n    disableToday,\n    isDisabled,\n  ]);\n\n  const onDateClicked = useCallback(\n    (cell: DayOfMonthCell) => {\n      const clickedDate = cell.date;\n\n      const cantSelectAsItsLocked = lockView && clickedDate.getMonth() !== viewingMonth;\n\n      if (cantSelectAsItsLocked) {\n        return;\n      }\n\n      if (isRangeSelectorView && !isFixedRangeView) {\n        if (isRangeSelectModeOn && newSelectedRangeStart) {\n          // check if it is the first click or seconds\n\n          const previouslySelectedDate = new Date(\n            newSelectedRangeStart.getFullYear(),\n            newSelectedRangeStart.getMonth(),\n            newSelectedRangeStart.getDate()\n          );\n\n          if (isBefore(previouslySelectedDate, clickedDate)) {\n            onChangenSelectedRangeStart(clickedDate);\n            onChangenSelectedRangeEnd(previouslySelectedDate);\n\n            const startDate = clickedDate;\n\n            const endDate = previouslySelectedDate;\n\n            onChange && onChange([startDate, endDate]);\n          } else {\n            onChangenSelectedRangeStart(previouslySelectedDate);\n\n            onChangenSelectedRangeEnd(clickedDate);\n\n            const startDate = previouslySelectedDate;\n\n            const endDate = clickedDate;\n\n            onChange && onChange([startDate, endDate]);\n          }\n\n          onChangenNewSelectedRangeEnd(undefined);\n\n          setIsRangeSelectModeOn(false);\n        } else {\n          // select first date\n          onChangenNewSelectedRangeStart(clickedDate);\n\n          onChangenNewSelectedRangeEnd(undefined);\n\n          setIsRangeSelectModeOn(true);\n        }\n      } else if (isFixedRangeView) {\n        onChangenSelectedRangeStart(clickedDate);\n        const { endDate, limitReached } = addDays(clickedDate, fixedRangeLength, {\n          isDisabled,\n          skipDisabledDatesInRange,\n          upperLimit: lockView\n            ? new Date(clickedDate.getFullYear(), clickedDate.getMonth() + 1, 1)\n            : disableFuture\n            ? getNextDate(today)\n            : undefined,\n        });\n\n        if (limitReached && !allowFewerDatesThanRange) {\n          onChangenSelectedRangeStart(undefined);\n          onChangenSelectedRangeEnd(undefined);\n        } else {\n          onChangenSelectedRangeEnd(endDate);\n          onChange && onChange([clickedDate, endDate]);\n        }\n      } else if (isMultiSelectorView) {\n        const stringkey = toString(clickedDate);\n        const newselectedMultiDates = { ...selectedMultiDates };\n\n        if (!!selectedMultiDates[stringkey]) {\n          newselectedMultiDates[stringkey] = undefined;\n        } else {\n          newselectedMultiDates[stringkey] = clickedDate;\n        }\n\n        onChangenSelectedMultiDates(newselectedMultiDates);\n\n        onChange &&\n          onChange(\n            Object.keys(newselectedMultiDates)\n              .filter((dk) => !!newselectedMultiDates[dk])\n              .map((dk) => newselectedMultiDates[dk] as Date)\n          );\n      } else {\n        onChangenSelectedDate(clickedDate);\n\n        onChange && onChange(clickedDate);\n      }\n\n      onChangeViewingMonth(cell.month);\n      onChangeViewingYear(cell.year);\n    },\n    [\n      lockView,\n      viewingMonth,\n      isRangeSelectorView,\n      isFixedRangeView,\n      isMultiSelectorView,\n      onChangeViewingMonth,\n      onChangeViewingYear,\n      isRangeSelectModeOn,\n      newSelectedRangeStart,\n      onChangenNewSelectedRangeEnd,\n      setIsRangeSelectModeOn,\n      onChangenSelectedRangeStart,\n      onChangenSelectedRangeEnd,\n      onChange,\n      onChangenNewSelectedRangeStart,\n      fixedRangeLength,\n      isDisabled,\n      skipDisabledDatesInRange,\n      disableFuture,\n      today,\n      allowFewerDatesThanRange,\n      selectedMultiDates,\n      onChangenSelectedMultiDates,\n      onChangenSelectedDate,\n    ]\n  );\n\n  return (\n    <div style={layoutCalcs.dayOfMonth['arc_view-days-of-month']} className='arc_view-days-of-month' role='grid'>\n      {daysOfMMonthViewMatrix.map((row, index) => (\n        <div style={layoutCalcs.dayOfMonth.arc_view_row} className='arc_view_row' key={index}>\n          {row.map((cell) => (\n            <div\n              style={layoutCalcs.dayOfMonth.arc_view_cell}\n              onMouseEnter={() => {\n                if (isRangeSelectorView) {\n                  if (isRangeSelectModeOn) {\n                    onChangenNewSelectedRangeEnd(new Date(cell.year, cell.month, cell.dayOfMonth));\n                  }\n                }\n              }}\n              key={cell.dayOfMonth}\n              className={`arc_view_cell${cell.activeMonthInView ? ' arc_active' : ''}${\n                cell.isWeekend ? ' arc_wknd' : ''\n              }${cell.isToday ? ' arc_today' : ''}${cell.isFirstRow ? ' arc_fr' : ''}${\n                cell.isToday ? ' arc_today' : ''\n              }${cell.isHighlight ? ' arc_highlight' : ''}${cell.isLastRow ? ' arc_lr' : ''}${\n                cell.isFirsColumn ? ' arc_fc' : ''\n              }${cell.isLastColumn ? ' arc_lc' : ''}${cell.isSelected && !isRangeSelectorView ? ' arc_selected' : ''}${\n                cell.isDisabled ? ' arc_disabled' : ''\n              }${cell.isInRange ? ' arc_in_range' : ''}${cell.isRangeStart ? ' arc_range_start' : ''}${\n                cell.isRangeEnd ? ' arc_range_end' : ''\n              }${isRangeSelectModeOn ? ' arc_range_mode' : ''}`}>\n              <div style={layoutCalcs.dayOfMonth.arc_view_cell_value} className='arc_view_cell_value'>\n                <button\n                  style={layoutCalcs.dayOfMonth.arc_view_cell_value_button}\n                  disabled={cell.isDisabled}\n                  tabIndex={cell.isDisabled ? -1 : 0}\n                  onClick={() => onDateClicked(cell)}>\n                  {cell.dayOfMonth}\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport const DayOfMonthSelector = memo(DayOfMonthSelectorComponent);\n","import React, { useCallback, useEffect, useMemo, useState, CSSProperties } from 'react';\n\nimport type { MonthIndices, WeekdayIndices } from './types';\n\nimport {\n  getStartOfRangeForAYear,\n  getPreviousYear,\n  getPreviousMonth,\n  getPreviousRangeStartingYear,\n  getNextYear,\n  getNextMonth,\n  getNextRangeStartingYear,\n  getYearRangeLimits,\n  getWeekendInfo,\n  isValid,\n  isBefore,\n  toString,\n  checkIfDateIsDisabledHOF,\n  checkIfWeekendHOF,\n  giveRangeDays,\n  validateAndReturnDateFormatter,\n} from './utils/date-utils';\n\nimport { Header } from './components/header/Header';\nimport { MonthSelector } from './components/month-selector/MonthSelector';\nimport { YearSelector } from './components/year-selector/YearSelector';\nimport { WeekDaysRow } from './components/week-days-row/WeekDaysRow';\nimport { DayOfMonthSelector } from './components/day-of-month-selector/DayOfMonthSelector';\n\nimport './calendar.css';\n\nexport type Value = Date | Date[] | [Date, Date];\n\ninterface Props {\n  /**\n   * Dark mode\n   */\n  useDarkMode?: boolean;\n  /**\n   * Custom classname\n   */\n  className?: string;\n  /**\n   * Width & Height of the calendar.\n   * Default is 276\n   */\n  size?: number;\n  /**\n   * Base font-size of calendar.\n   * Default is 16\n   */\n  fontSize?: number;\n  /**\n   * The initial month and year that will be shown to the user.\n   * By default it shows today's date month and year. If a date is selected it shows the selected\n   * date's month and year.\n   */\n  initialViewDate?: Date;\n  /**\n   * User can not change month/year\n   */\n  lockView?: boolean;\n  /**\n   * Value of a single date or an array of dates in ISO format.\n   * Only applicable if selectRange is false\n   */\n  value?: Value;\n  /**\n   * Renders a multiple dates selector view\n   */\n  isMultiSelector?: boolean;\n  /**\n   * Renders a range selector UI for the calendar\n   */\n  isRangeSelector?: boolean;\n  /**\n   * Skip disabled dates when doing fixed range selection\n   */\n  skipDisabledDatesInRange?: boolean;\n  /**\n   * Skip weekends\n   */\n  skipWeekendsInRange?: boolean;\n  /**\n   * Skip disabled dates when doing fixed range selection\n   */\n  allowFewerDatesThanRange?: boolean;\n  /**\n   * Always select n number of days starting from the user's selected date\n   */\n  fixedRange?: number;\n  /**\n   * Array of weekday number that are part of weekend.\n   * The weekday number depends on the start of the week if provided one.\n   * By default this is [6, 0] which Saturday, Sunday respectively as per the 0 based start of the week.\n   */\n  weekends?: WeekdayIndices[];\n  /**\n   * By default the calendar starts from Sun which is represented in JS as 0 index.\n   * You can provide the index for any other day that you want as start of the week.\n   */\n  startOfWeek?: WeekdayIndices;\n  /**\n   * A boolean flag to disable all past dates.\n   */\n  disablePast?: boolean;\n  /**\n   * A boolean flag to disable today's date.\n   */\n  disableToday?: boolean;\n  /**\n   * A boolean flag to disable all future dates.\n   */\n  disableFuture?: boolean;\n  /**\n   * A callback function that can be used to disable specific dates on the calendar.\n   */\n  isDisabled?: (date: Date) => boolean;\n  /**\n   * User will not be able to select past this date. This date will be selectable.\n   */\n  maxAllowedDate?: Date;\n  /**\n   * User will not be able to select before this date. This date will be selectable.\n   */\n  minAllowedDate?: Date;\n  /**\n   * These dates will be highlighted\n   */\n  highlights?: Date[];\n  /**\n   * OnChange callback functionn.\n   */\n  onChange?: (value: Value) => any | Promise<any>;\n}\n\n// const getStyles: (size: number) => ComputedStyles = (size: number) => ({\n//   appliedWidth: `${size!}px`,\n//   appliedHeight: `${size!}px`,\n//   headerHeightPercent: '14.65%',\n//   bodyHeightPercent: '85.35%',\n//   weekdaysRowBottomMarginPercent: '3.26%',\n//   weekdayColumnCellLeftMarginPercent: '2.17%',\n//   weekdayColumnCellWidthPercent: '12.736%',\n//   dayOfMonthViewHeightPercent: '82.179%',\n//   weekdaysRowHeightPercent: '14.001%',\n//   dayOfMonthRowHeightPercent: '16.664%',\n//   dayOfMonthColumnWidthPercent: '14.286%',\n//   monthRowHeightPercent: '24.9%',\n//   monthColumnWidthPercent: '33.33%',\n//   yearRowHeightPercent: '24.9%',\n//   yearColumnWidthPercent: '20%',\n// });\n\nconst getStyles: (size: number, fontSize: number) => CSSProps = (size, fontSize) => ({\n  root: {\n    arc: {\n      width: `${size!}px`,\n      height: `${size!}px`,\n      fontSize: `${fontSize}px`,\n      display: 'flex',\n      alignItems: 'flex-start',\n      flexDirection: 'column',\n      boxSizing: 'border-box',\n    },\n    arc_view: { height: '85.35%', width: '100%' },\n    'arc_view-months': { height: '100%' },\n    'arc_view-years': { height: '100%' },\n    arc_header: { height: '14.65%', padding: '2.50%', display: 'flex', alignTtems: 'center', width: '100%' },\n  },\n  weekdaysRow: {\n    arc_view_weekdays: {\n      height: '14.001%',\n      margin: '0 0 3.26% 0',\n      padding: 0,\n      display: 'flex',\n      width: '100%',\n      listStyle: 'none',\n    },\n    arc_view_weekdays_cell: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%',\n      flexBasis: '14.286%',\n      maxWidth: '14.286%',\n    },\n    arc_view_weekdays_cell_value: {\n      width: '65.95%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  },\n  dayOfMonth: {\n    'arc_view-days-of-month': {\n      height: '82.179%',\n    },\n    arc_view_row: { height: '16.664%', display: 'flex', width: '100%', alignItems: 'center' },\n    arc_view_cell: {\n      flexBasis: '14.286%',\n      maxWidth: '14.286%',\n      height: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    arc_view_cell_value: {\n      width: '65.95%',\n      height: '80.5%',\n    },\n    arc_view_cell_value_button: {\n      width: '100%',\n      height: '100%',\n    },\n  },\n  months: {\n    arc_view_row: { height: '24.9%', display: 'flex', width: '100%' },\n    arc_view_cell: {\n      flexBasis: '33.33%',\n      maxWidth: '33.33%',\n      height: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    arc_view_cell_value_button: {\n      width: '78px',\n      height: '28px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  },\n  years: {\n    arc_view_row: { height: '24.9%', display: 'flex', width: '100%' },\n    arc_view_cell: { width: '20%', height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' },\n    arc_view_cell_value_button: {\n      width: '48px',\n      height: '26px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  },\n  header: {\n    arc_header_nav: { width: '10.14%', height: '100%', flex: '0 0 auto' },\n    arch_header_label: {\n      width: '65.21%',\n      height: '100%',\n      margin: '0 4.34%',\n      flex: '1 1 auto',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  },\n});\n\n// Add an option to freeze ui if date is invalid\n// Add a isEditable option\n// Change is in range to could be in range as a class rather than hover\n// dont show range hover on diabalbed\n\nfunction Calendar({\n  value,\n  isMultiSelector,\n  className = '',\n  isRangeSelector,\n  useDarkMode = false,\n  weekends,\n  highlights = [],\n  skipWeekendsInRange = false,\n  initialViewDate,\n  allowFewerDatesThanRange = false,\n  startOfWeek = 1,\n  maxAllowedDate,\n  skipDisabledDatesInRange = false,\n  minAllowedDate,\n  fixedRange,\n  isDisabled,\n  onChange,\n  lockView = false,\n  disableFuture = false,\n  size = 276,\n  fontSize = 16,\n  disablePast = false,\n  disableToday = false,\n}: Props) {\n  const styles = useMemo(() => getStyles(size, fontSize), [size, fontSize]);\n\n  const [today] = useState(new Date());\n\n  const [isRangeSelectorView] = useState(!!isRangeSelector);\n\n  const [isMultiSelectorView] = useState(!isRangeSelectorView && !!isMultiSelector);\n\n  const [isFixedRangeView] = useState(\n    isRangeSelectorView && typeof fixedRange === 'number' && fixedRange > 0 ? true : false\n  );\n\n  const [isNormalView] = useState(!isRangeSelectorView && !isMultiSelectorView);\n\n  // is range select mode on\n  const [isRangeSelectModeOn, setIsRangeSelectModeOn] = useState(false);\n\n  if (isNormalView && Array.isArray(value)) {\n    throw new Error('`value` should an instance of the Date class. Provided value is an Array.');\n  }\n\n  const [fixedRangeLength] = useState(isFixedRangeView ? (fixedRange as number) : 1);\n\n  // start day of the week\n  const [startOfTheWeek] = useState(startOfWeek);\n\n  const [weekendIndexes] = useState(() => {\n    return Array.isArray(weekends) && (weekends.every((num) => typeof num === 'number') || weekends.length === 0)\n      ? weekends\n      : getWeekendInfo(startOfTheWeek);\n  });\n\n  // selected single date\n  const [selectedDate, setSelectedDate] = useState(() => {\n    if (isNormalView && isValid(value as Date)) {\n      const year = (value as Date).getFullYear();\n      const month = (value as Date).getMonth();\n      const dateOfMonth = (value as Date).getDate();\n      return new Date(year, month, dateOfMonth);\n    } else {\n      return undefined;\n    }\n  });\n\n  // selected multi dates\n  const [selectedMultiDates, setSelectedMultiDates] = useState<Record<string, Date | undefined>>(() => {\n    if (isMultiSelectorView && Array.isArray(value) && value.every(isValid)) {\n      return value.reduce((acc, currDate) => {\n        if (isValid(currDate)) {\n          acc[toString(currDate)] = currDate;\n        }\n        return acc;\n      }, {} as Record<string, Date | undefined>);\n    } else {\n      return {} as Record<string, Date | undefined>;\n    }\n  });\n\n  // selected range start date\n  const [selectedRangeStart, setSelectedRangeStart] = useState(() => {\n    if (isRangeSelectorView && Array.isArray(value) && isValid(value[0])) {\n      const year = value[0].getFullYear();\n      const month = value[0].getMonth();\n      const date = value[0].getDate();\n      return new Date(year, month, date);\n    } else {\n      return undefined;\n    }\n  });\n\n  const [selectedRangeEnd, setSelectedRangeEnd] = useState(() => {\n    if (\n      isRangeSelectorView &&\n      selectedRangeStart &&\n      Array.isArray(value) &&\n      isValid(value[1]) &&\n      isBefore(value[1], selectedRangeStart)\n    ) {\n      const year = value[1].getFullYear();\n      const month = value[1].getMonth();\n      const date = value[1].getDate();\n      return new Date(year, month, date);\n    } else {\n      // TODO read from user's value prop\n      return undefined;\n    }\n  });\n\n  const [newSelectedRangeStart, setNewSelectedRangeStart] = useState<Date | undefined>(selectedRangeStart);\n\n  const [newSelectedRangeEnd, setNewSelectedRangeEnd] = useState<Date | undefined>(selectedRangeEnd);\n\n  // View States\n  const [view, setView] = useState<'years' | 'months' | 'month_dates'>('month_dates');\n\n  const [monthInView, setMonthInView] = useState<MonthIndices>(\n    (isValid(initialViewDate)\n      ? initialViewDate.getMonth()\n      : isNormalView && isValid(value as Date)\n      ? (value as Date).getMonth()\n      : isRangeSelectorView && selectedRangeStart\n      ? selectedRangeStart.getMonth()\n      : isMultiSelectorView && Array.isArray(value) && isValid(value[0])\n      ? value[0].getMonth()\n      : today.getMonth()) as MonthIndices\n  );\n\n  const [yearInView, setYearInView] = useState(\n    isValid(initialViewDate)\n      ? initialViewDate.getFullYear()\n      : isNormalView && isValid(value as Date)\n      ? (value as Date).getFullYear()\n      : isRangeSelectorView && selectedRangeStart\n      ? selectedRangeStart.getFullYear()\n      : isMultiSelectorView && Array.isArray(value) && isValid(value[0])\n      ? value[0].getFullYear()\n      : today.getFullYear()\n  );\n\n  const changeMonthInView = useCallback(\n    (month: MonthIndices) => {\n      !lockView && setMonthInView(month);\n    },\n    [lockView, setMonthInView]\n  );\n\n  const changeYearInView = useCallback(\n    (year: number) => {\n      !lockView && setYearInView(year);\n    },\n    [lockView, setYearInView]\n  );\n\n  const changeView = useCallback(\n    (view: 'years' | 'months' | 'month_dates') => {\n      !lockView && setView(view);\n    },\n    [lockView, setView]\n  );\n\n  const [startingYearForCurrRange, setStartingYearForCurrRange] = useState(getStartOfRangeForAYear(yearInView));\n\n  useEffect(() => {\n    setStartingYearForCurrRange(getStartOfRangeForAYear(yearInView));\n  }, [yearInView, setStartingYearForCurrRange]);\n\n  // 1 - 20, 21 - 40\n  const [yearMatrixRangeStart, yearMatrixRangeEnd] = useMemo(() => {\n    return getYearRangeLimits(startingYearForCurrRange);\n  }, [startingYearForCurrRange]);\n\n  // callback handlers\n  const onPrevClick = useCallback(\n    (e) => {\n      if (view === 'month_dates') {\n        const isPrevMonthFromLastYear = monthInView === 0;\n        if (isPrevMonthFromLastYear) {\n          setYearInView(getPreviousYear(yearInView));\n        }\n        changeMonthInView(getPreviousMonth(monthInView));\n      }\n      if (view === 'years') {\n        setStartingYearForCurrRange(getPreviousRangeStartingYear(startingYearForCurrRange));\n      }\n      if (view === 'months') {\n        changeYearInView(yearInView !== 1 ? yearInView - 1 : 1);\n      }\n    },\n    [\n      changeMonthInView,\n      monthInView,\n      changeYearInView,\n      yearInView,\n      view,\n      setStartingYearForCurrRange,\n      startingYearForCurrRange,\n    ]\n  );\n\n  const onNextClick = useCallback(\n    (e) => {\n      if (view === 'month_dates') {\n        const isCurrentMonthLast = monthInView === 11;\n        if (isCurrentMonthLast) {\n          changeYearInView(getNextYear(yearInView));\n        }\n        changeMonthInView(getNextMonth(monthInView));\n      }\n      if (view === 'years') {\n        setStartingYearForCurrRange(getNextRangeStartingYear(startingYearForCurrRange));\n      }\n\n      if (view === 'months') {\n        changeYearInView(getNextYear(yearInView));\n      }\n    },\n    [\n      changeMonthInView,\n      monthInView,\n      changeYearInView,\n      yearInView,\n      view,\n      setStartingYearForCurrRange,\n      startingYearForCurrRange,\n    ]\n  );\n\n  const computedClass = useMemo(\n    () =>\n      typeof className === 'string'\n        ? `arc ${useDarkMode ? 'dark' : ''} ` + className\n        : `arc ${useDarkMode ? 'dark' : ''}`,\n    [className, useDarkMode]\n  );\n\n  // max allowed Date\n  const [maxDate] = useState(() => {\n    return isValid(maxAllowedDate) ? maxAllowedDate : today;\n  });\n\n  // min allowed Date\n  const [minDate] = useState(() => {\n    return isValid(minAllowedDate) ? minAllowedDate : today;\n  });\n\n  const [applyMaxConstraint] = useState(() => {\n    return isValid(maxAllowedDate)\n      ? isValid(minAllowedDate)\n        ? isBefore(maxAllowedDate, minAllowedDate)\n        : true\n      : false;\n  });\n\n  const [applyminConstraint] = useState(() => {\n    return isValid(minAllowedDate)\n      ? isValid(maxAllowedDate)\n        ? isBefore(maxAllowedDate, minAllowedDate)\n        : true\n      : false;\n  });\n\n  const checkDisabledForADate = useMemo(\n    () =>\n      checkIfDateIsDisabledHOF({\n        disablePast,\n        disableToday,\n        disableFuture,\n        customDisabledCheck: isDisabled,\n        maxDate,\n        minDate,\n        applyMax: applyMaxConstraint,\n        applyMin: applyminConstraint,\n      }),\n    [applyMaxConstraint, applyminConstraint, disableFuture, disablePast, disableToday, isDisabled, maxDate, minDate]\n  );\n\n  const checkIfWeekend = useMemo(\n    () => checkIfWeekendHOF(weekendIndexes, startOfTheWeek),\n    [startOfTheWeek, weekendIndexes]\n  );\n\n  return (\n    <section style={styles.root.arc} className={computedClass}>\n      <Header\n        layoutCalcs={styles}\n        onClickPrev={onPrevClick}\n        onClickNext={onNextClick}\n        onChangeViewType={changeView}\n        viewType={view}\n        viewingMonth={monthInView}\n        viewingYear={yearInView}\n        yearMatrixStart={yearMatrixRangeStart}\n        yearMatrixEnd={yearMatrixRangeEnd}\n      />\n      <main style={styles.root.arc_view} className='arc_view'>\n        {view === 'months' && (\n          <MonthSelector layoutCalcs={styles} onChangeViewType={changeView} onChangeViewingMonth={changeMonthInView} />\n        )}\n        {view === 'years' && (\n          <YearSelector\n            layoutCalcs={styles}\n            onChangeViewType={changeView}\n            onChangeViewingYear={changeYearInView}\n            yearMatrixStart={yearMatrixRangeStart}\n            yearMatrixEnd={yearMatrixRangeEnd}\n          />\n        )}\n        {view === 'month_dates' && (\n          <>\n            <WeekDaysRow layoutCalcs={styles} weekStartIndex={startOfTheWeek} weekendIndices={weekendIndexes} />\n            <DayOfMonthSelector\n              isRangeSelectModeOn={isRangeSelectModeOn}\n              setIsRangeSelectModeOn={setIsRangeSelectModeOn}\n              layoutCalcs={styles}\n              skipDisabledDatesInRange={!!skipDisabledDatesInRange}\n              allowFewerDatesThanRange={!!allowFewerDatesThanRange}\n              selectedDate={selectedDate}\n              selectedRangeStart={selectedRangeStart}\n              selectedRangeEnd={selectedRangeEnd}\n              lockView={!!lockView}\n              newSelectedRangeStart={newSelectedRangeStart}\n              weekStartIndex={startOfTheWeek}\n              onChangeViewingYear={changeYearInView}\n              onChangeViewingMonth={changeMonthInView}\n              onChangenSelectedMultiDates={setSelectedMultiDates}\n              onChangenNewSelectedRangeEnd={setNewSelectedRangeEnd}\n              onChangenNewSelectedRangeStart={setNewSelectedRangeStart}\n              onChangenSelectedRangeEnd={setSelectedRangeEnd}\n              onChangenSelectedRangeStart={setSelectedRangeStart}\n              onChangenSelectedDate={setSelectedDate}\n              newSelectedRangeEnd={newSelectedRangeEnd}\n              isRangeSelectorView={isRangeSelectorView}\n              fixedRangeLength={fixedRangeLength}\n              isFixedRangeView={isFixedRangeView}\n              isDisabled={checkDisabledForADate}\n              checkIfWeekend={checkIfWeekend}\n              selectedMultiDates={selectedMultiDates}\n              isMultiSelectorView={isMultiSelectorView}\n              viewingMonth={monthInView}\n              today={today}\n              maxAllowedDate={maxAllowedDate}\n              minAllowedDate={minAllowedDate}\n              weekendIndices={weekendIndexes}\n              skipWeekendsInRange={!!skipWeekendsInRange}\n              onChange={onChange}\n              viewingYear={yearInView}\n              disableFuture={disableFuture}\n              disablePast={disablePast}\n              highlights={highlights}\n              disableToday={disableToday}\n            />\n          </>\n        )}\n      </main>\n    </section>\n  );\n}\n\nexport default Calendar;\n\nexport const giveDaysInRange = giveRangeDays;\n\n/**\n * A combination of YYYY-MM-DD.\n * Eg. MM-DD-YYYY, DD-MM-YYYY etc.\n * Default is '-' i.e 'DD-MM-YYYY'\n */\nexport const giveFormatter = (format: string) => validateAndReturnDateFormatter(format || 'DD-MM-YYYY');\n\nexport interface CSSProps {\n  root: {\n    arc: CSSProperties;\n    arc_view: CSSProperties;\n    arc_header: CSSProperties;\n    'arc_view-months': CSSProperties;\n    'arc_view-years': CSSProperties;\n  };\n  weekdaysRow: {\n    arc_view_weekdays: CSSProperties;\n    arc_view_weekdays_cell: CSSProperties;\n    arc_view_weekdays_cell_value: CSSProperties;\n  };\n  dayOfMonth: {\n    'arc_view-days-of-month': CSSProperties;\n    arc_view_row: CSSProperties;\n    arc_view_cell: CSSProperties;\n    arc_view_cell_value: CSSProperties;\n    arc_view_cell_value_button: CSSProperties;\n  };\n  months: {\n    arc_view_row: CSSProperties;\n    arc_view_cell: CSSProperties;\n    arc_view_cell_value_button: CSSProperties;\n  };\n  years: {\n    arc_view_row: CSSProperties;\n    arc_view_cell: CSSProperties;\n    arc_view_cell_value_button: CSSProperties;\n  };\n  header: {\n    arc_header_nav: CSSProperties;\n    arch_header_label: CSSProperties;\n  };\n}\n","import React, { useCallback, useState } from 'react';\nimport ReactJson from 'react-json-view';\nimport ReactDOMServer from 'react-dom/server';\n\nimport Calendar, { giveDaysInRange, giveFormatter } from './awesome-react-calendar/calendar';\n\nimport './App.css';\nimport { Popover } from 'react-tiny-popover';\n\nfunction App() {\n  const [isPopoverOpen, setIsPopoverOpen] = useState<boolean>(false);\n  const [one, setOne] = useState<object>({});\n\n  const onChangeone = useCallback(\n    (value) => {\n      setOne(value);\n    },\n    [setOne]\n  );\n\n  const [two, setTwo] = useState<object>({});\n\n  const onChangetwo = useCallback(\n    (value) => {\n      setTwo(value);\n    },\n    [setTwo]\n  );\n\n  const [three, setThree] = useState<object>({});\n\n  const onChangethree = useCallback(\n    (value) => {\n      setThree(value);\n    },\n    [setThree]\n  );\n\n  const [four, setFour] = useState<object>({});\n\n  const onChangefour = useCallback(\n    (value) => {\n      setFour(value);\n    },\n    [setFour]\n  );\n\n  const [five, setFive] = useState<object>({});\n\n  const onChangefive = useCallback(\n    (value) => {\n      setFive(value);\n    },\n    [setFive]\n  );\n\n  const [six, setSix] = useState<object>({});\n\n  const onChangesix = useCallback(\n    (value) => {\n      setSix(value);\n    },\n    [setSix]\n  );\n\n  const [seven, setSeven] = useState<object>({});\n\n  const onChangeseven = useCallback(\n    (value) => {\n      setSeven(value);\n    },\n    [setSeven]\n  );\n\n  const [eight, setEight] = useState<object>({});\n\n  const onChangeeight = useCallback(\n    (value) => {\n      setEight(value);\n    },\n    [setEight]\n  );\n\n  const [nine, setNine] = useState<object>({});\n\n  const onChangenine = useCallback(\n    (value) => {\n      setNine(value);\n    },\n    [setNine]\n  );\n\n  const [ten, setTen] = useState<object>({});\n\n  const onChangeTen = useCallback(\n    (value) => {\n      setTen(value);\n    },\n    [setTen]\n  );\n\n  const [eleven, setEleven] = useState<object>({});\n\n  const onChangeEleven = useCallback(\n    (value) => {\n      setEleven(value);\n    },\n    [setEleven]\n  );\n\n  const [tweleve, setTweleve] = useState<object>({});\n\n  const onChangeTweleve = useCallback(\n    (value) => {\n      setTweleve(value);\n    },\n    [setTweleve]\n  );\n\n  const [thirteen, setThirteen] = useState<object>([]);\n\n  const onChangeThirteen = useCallback(\n    (value) => {\n      setThirteen(value);\n    },\n    [setThirteen]\n  );\n\n  const [fourteen, setFourteen] = useState<object>({});\n\n  const onChangeFourteen = useCallback(\n    (value) => {\n      setFourteen(value);\n    },\n    [setFourteen]\n  );\n\n  const [fiveteen, setFiveteen] = useState<object>({});\n\n  const onChangeFiveteen = useCallback(\n    (value) => {\n      setFiveteen(value);\n    },\n    [setFiveteen]\n  );\n\n  const maxDate = new Date(2021, 7, 28);\n  const minDate = new Date(2021, 7, 4);\n\n  console.log(giveDaysInRange(thirteen as [Date, Date]));\n  return (\n    <div className='demo'>\n      <div>\n        <div>\n          <p>Default</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar onChange={onChangenine} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={{ output: nine }} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div className='desc'>\n          <p>Multiple Dates View</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar\n              value={[new Date(2021, 6, 22), new Date(2021, 6, 25), new Date(2021, 6, 9)]}\n              isMultiSelector\n              disableToday\n              onChange={onChangeone}\n            />\n          </div>\n\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={{ output: one }} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Range Select View</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar\n              isRangeSelector\n              disableToday\n              value={[new Date(2021, 0, 8), new Date(2021, 0, 20)]}\n              onChange={onChangethree}\n            />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={{ output: three }} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Range Select View With Min-Max Allowed Dates</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar\n              initialViewDate={new Date(2021, 7, 10)}\n              isRangeSelector\n              maxAllowedDate={maxDate}\n              minAllowedDate={minDate}\n              disableToday\n              onChange={onChangetwo}\n              // startOfWeek={2}\n            />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={{ output: two }} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Fixed Range View (6 Days)</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar isRangeSelector fixedRange={6} onChange={onChangeThirteen} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={{ output: thirteen }} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Highlight Custom Dates</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar\n              initialViewDate={new Date(2020, 5, 6)}\n              highlights={[new Date(2020, 5, 6), new Date(2020, 5, 12), new Date(2020, 5, 16), new Date(2020, 5, 24)]}\n              onChange={onChangeFourteen}\n            />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={{ output: fourteen }} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can disable custom dates (here disabled if (date % 4 === 0))</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar\n              isDisabled={(date) => {\n                return date.getDate() % 4 === 0;\n              }}\n              onChange={onChangeFiveteen}\n            />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={{ output: fiveteen }} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can enable skipping disabled dates when doing fixed range(5 here) selections</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar\n              isRangeSelector\n              fixedRange={5}\n              skipDisabledDatesInRange\n              isDisabled={(date) => {\n                return date.getDate() % 3 === 0;\n              }}\n              onChange={onChangeseven}\n            />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={{ output: seven }} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can enable/disable selecting fewer dates than range if dates are not available</p>\n          <small>\n            Normally it will select 4 dates after the first one but when future dates are disabled then it can even\n            select lesser than 4 dates. This behaviour can be disabled.\n          </small>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar\n              allowFewerDatesThanRange\n              disableFuture\n              isRangeSelector\n              fixedRange={4}\n              onChange={onChangeThirteen}\n            />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={{ output: thirteen }} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can change start day of the week (Wed here)</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar startOfWeek={3} onChange={onChangefour} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={{ output: four }} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can specify weekend days (Fri, Sat, Sun here)</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar weekends={[4, 5, 6]} onChange={onChangefive} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={{ output: five }} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can disable highlighting Weekends</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar weekends={[]} onChange={onChangefive} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={{ output: five }} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can set if past,today,future is disabled by simple props</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar disablePast onChange={onChangesix} />\n          </div>\n          <div className='calendar'>\n            <Calendar\n              disableToday\n              value={new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() + 1)}\n              onChange={onChangeseven}\n            />\n          </div>\n          <div className='calendar'>\n            <Calendar disableFuture onChange={onChangeeight} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can lock the calendar to a specific month/year</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar lockView onChange={onChangesix} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={{ output: six }} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can set output date format (YYYY-DD-MM here)</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar onChange={onChangeTen} />\n          </div>\n          <div className='json'>{giveFormatter('YYYY-DD-MM')(ten, '-')}</div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can set output date separator (# here)</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar onChange={onChangeEleven} />\n          </div>\n          <div className='json'>\n            <div className='json'>{giveFormatter('YYYY-DD-MM')(eleven, '#')}</div>\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can be rendered inside a popover</p>\n        </div>\n        <div style={{ justifyContent: 'flex-start' }}>\n          <div className='input'>\n            <input value={(ten as any).formatted as string} />\n            <Popover\n              isOpen={isPopoverOpen}\n              padding={6}\n              positions={['bottom', 'top', 'left', 'right']}\n              content={\n                <Calendar\n                  value={(ten as any).value as Date}\n                  onChange={(value) => {\n                    setTen(value);\n                    setIsPopoverOpen(false);\n                  }}\n                />\n              }>\n              <div onClick={() => setIsPopoverOpen(!isPopoverOpen)}>🗓</div>\n            </Popover>\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can Set Initial Month&Date View To Show (Sept, 2020 here)</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar initialViewDate={new Date(2020, 8, 9)} onChange={onChangeTweleve} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={{ output: tweleve }} />\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div>\n          <p>Easy to theme using CSS variables</p>\n        </div>\n        <div>\n          <div>\n            <Calendar className='green' isRangeSelector />\n          </div>\n          <div>\n            <Calendar className='brown' />\n          </div>\n          <div>\n            <Calendar className='violet' isRangeSelector fixedRange={4} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>In-built and customizable dark mode</p>\n        </div>\n        <div>\n          <div>\n            <Calendar useDarkMode isRangeSelector />\n          </div>\n          <div>\n            <Calendar useDarkMode />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can easily adjust scale</p>\n        </div>\n        <div>\n          <div>\n            <Calendar fontSize={20} size={600} isRangeSelector />\n          </div>\n          <div>\n            <Calendar fontSize={17} size={400} isMultiSelector />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can be rendered on the server-side</p>\n          <small>The following markup is created using ReactDomServer.renderToStaticMarkup() method</small>\n        </div>\n        <div\n          dangerouslySetInnerHTML={{\n            __html: ReactDOMServer.renderToStaticMarkup(\n              <Calendar\n                value={[new Date(2021, 6, 22), new Date(2021, 6, 25), new Date(2021, 6, 9)]}\n                isMultiSelector\n                disableToday\n                onChange={onChangeone}\n              />\n            ),\n          }}></div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}