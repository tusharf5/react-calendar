{"version":3,"sources":["awesome-react-calendar/utils/constants.ts","awesome-react-calendar/utils/date-utils.ts","awesome-react-calendar/components/header/Header.tsx","awesome-react-calendar/components/month-selector/MonthSelector.tsx","awesome-react-calendar/components/year-selector/YearSelector.tsx","awesome-react-calendar/components/week-days-row/WeekDaysRow.tsx","awesome-react-calendar/components/day-of-month-selector/DayOfMonthSelector.tsx","awesome-react-calendar/calendar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NATIVE_INDEX_TO_LABEL_WEEKDAY_MAP","0","1","2","3","4","5","6","NATIVE_INDEX_TO_LABEL_MONTHS_MAP","7","8","9","10","11","toString","date","getFullYear","getMonth","getDate","isBefore","toCheckDate","isValid","isNaN","Date","getTime","isEqual","first","second","isPartOfRange","rangeStart","rangeEnd","isALeapYear","year","getNumberOfDaysInAMonth","month","isLastDayOfMonth","getPreviousMonth","getNextMonth","getPreviousYear","getNextYear","getNextDate","isLastDayOfYear","getNativeWeekDayIndexFromAStartDayInfluencedIndex","weekdayAsPerChangedIndex","startOfTheWeek","diversion","getStartOfRangeForAYear","Number","toFixed","getDaysOfMonthViewMetrix","params","isRangeSelectModeOn","isRangeView","selectedDate","selectedRangeStart","selectedRangeEnd","highlightsMap","newSelectedRangeStart","newSelectedRangeEnd","isSelectMultiDate","selectedMultiDates","weekendIndexes","yearInView","monthInView","isDisabled","matrix","currentMonthDatesStartIndex","setDate","setMonth","setFullYear","weekdayAsPerNativeIndex","getInfluencedWeekDayIndexAsPerAStartDay","getDay","getInfluencedWeekDayIndexOnFirstDateOfMonth","weekends","today","todaysDate","todaysMonth","todaysYear","totalDaysInCurrentMonth","isPrevMonthFromLastYear","isCurrentMonthLast","totalDaysInPrevMonth","row","weekColumn","dayOfMonth","currMonth","currYear","currDate","push","activeMonthInView","isHighlight","isInRange","isRangeStart","isRangeEnd","isWeekend","find","c","dayOfWeek","isToday","isFirstRow","isLastRow","isFirsColumn","isLastColumn","isSelected","length","HeaderComponent","onClickPrev","onChangeViewType","onClickNext","viewType","viewingMonth","viewingYear","yearMatrixEnd","yearMatrixStart","layoutCalcs","style","root","arc_header","className","header","arc_header_nav","onClick","arch_header_label","Header","memo","MonthSelectorComponent","onChangeViewingMonth","monthsViewMatrix","useMemo","selectedMonth","months","Array","from","v","k","isCurrentMonth","isSelectedMonth","slice","getMonthViewMetrix","map","index","arc_view_row","cell","arc_view_cell","arc_view_cell_value_button","MonthSelector","YearSelectorComponent","onChangeViewingYear","yearsMatrix","rangeStartYear","selectedYearMap","years","isCurrentYear","isSelectedYear","getYearsViewMetrix","YearSelector","WeekDaysRowComponent","weekStartIndex","weekendIndices","order","Object","keys","concat","reduce","acc","weekdayIndex","getWeekDaysIndexToLabelMapForAStartOfTheWeek","weekDayOrder","weekDayMap","weekendIndicesMap","curr","weekdaysRow","arc_view_weekdays","weekDay","arc_view_weekdays_cell","arc_view_weekdays_cell_value","WeekDaysRow","DayOfMonthSelectorComponent","isRangeSelectorView","skipDisabledDatesInRange","setIsRangeSelectModeOn","fixedRangeLength","isFixedRangeView","onChangenSelectedMultiDates","isMultiSelectorView","format","onChangenNewSelectedRangeEnd","onChangenNewSelectedRangeStart","onChangenSelectedRangeEnd","onChangenSelectedRangeStart","onChangenSelectedDate","onChange","disableFuture","disablePast","lockView","separator","highlights","disableToday","useState","isArray","filter","d","formatter","partsMap","YYYY","MM","DD","parts","split","Error","every","part","string","forEach","validateAndReturnDateFormatter","daysOfMMonthViewMatrix","onDateClicked","useCallback","clickedDate","previouslySelectedDate","startDate","endDate","value","formatted","undefined","numberOfDaysToAdd","daysLeftToAdd","newDate","nextCouldBeDate","addDays","stringkey","newselectedMultiDates","dk","role","onMouseEnter","arc_view_cell_value","disabled","tabIndex","DayOfMonthSelector","Calendar","isMultiSelector","isRangeSelector","useDarkMode","rangeStartValue","initialViewDate","rangeEndValue","startOfWeek","maxAllowedDate","minAllowedDate","fixedRange","size","fontSize","styles","arc","width","height","display","alignItems","flexDirection","boxSizing","arc_view","padding","alignTtems","margin","listStyle","justifyContent","flexBasis","maxWidth","flex","getStyles","isNormalView","num","getWeekendInfo","dateOfMonth","setSelectedDate","setSelectedMultiDates","setSelectedRangeStart","setSelectedRangeEnd","setNewSelectedRangeStart","setNewSelectedRangeEnd","view","setView","setMonthInView","setYearInView","changeMonthInView","changeYearInView","changeView","startingYearForCurrRange","setStartingYearForCurrRange","useEffect","yearMatrixRangeStart","yearMatrixRangeEnd","onPrevClick","e","onNextClick","computedClass","maxDate","minDate","applyMaxConstraint","checkDisabledForADate","customDisabledCheck","applyMax","applyMin","currentYear","currentMonth","dateToCheck","checkIfDateIsDisabledHOF","App","isPopoverOpen","setIsPopoverOpen","one","setOne","onChangeone","two","setTwo","onChangetwo","three","setThree","onChangethree","four","setFour","onChangefour","five","setFive","onChangefive","six","setSix","onChangesix","seven","setSeven","onChangeseven","setEight","onChangeeight","nine","setNine","onChangenine","ten","setTen","onChangeTen","eleven","setEleven","onChangeEleven","tweleve","setTweleve","onChangeTweleve","thirteen","setThirteen","onChangeThirteen","fourteen","setFourteen","onChangeFourteen","fiveteen","setFiveteen","onChangeFiveteen","name","enableClipboard","src","Popover","isOpen","positions","content","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68036116.chunk.js","sourcesContent":["import type { MonthIndices, WeekdayIndices } from '../types';\n\n/**\n * This weekday index-to-label map is what is used by the Date object\n */\nexport const NATIVE_INDEX_TO_LABEL_WEEKDAY_MAP: Record<WeekdayIndices, string> = {\n  0: 'Su',\n  1: 'Mo',\n  2: 'Tu',\n  3: 'We',\n  4: 'Th',\n  5: 'Fr',\n  6: 'Sa',\n};\n\nexport const NATIVE_INDEX_TO_LABEL_MONTHS_MAP: Record<MonthIndices, string> = {\n  0: 'January',\n  1: 'February',\n  2: 'March',\n  3: 'April',\n  4: 'May',\n  5: 'June',\n  6: 'July',\n  7: 'August',\n  8: 'September',\n  9: 'October',\n  10: 'November',\n  11: 'December',\n};\n","/* eslint-disable no-loop-func */\nimport type {\n  MonthIndices,\n  WeekdayIndices,\n  MonthCell,\n  YearCell,\n  DayOfMonthCell,\n  GetDaysOfMonthViewMetrixParams,\n  CheckIfDateIsDisabledHOFParams,\n} from '../types';\n\nimport { NATIVE_INDEX_TO_LABEL_WEEKDAY_MAP } from './constants';\n\n/**\n * Add number of days to a month.\n */\nexport function addDays(\n  date: Date,\n  numberOfDaysToAdd: number,\n  isDisabled: (arg: Date) => boolean,\n  skipDisabledDatesInRange: boolean\n): Date {\n  let daysLeftToAdd = numberOfDaysToAdd;\n  let newDate = date;\n\n  while (daysLeftToAdd > 0) {\n    const nextCouldBeDate = getNextDate(newDate);\n    newDate = nextCouldBeDate;\n    if (skipDisabledDatesInRange) {\n      if (!isDisabled(nextCouldBeDate)) {\n        // if skipping is enabled and date is not disabled then decrement\n        daysLeftToAdd--;\n      }\n    } else {\n      // if skipping is disabled then just decrement\n      daysLeftToAdd--;\n    }\n  }\n\n  return newDate;\n}\n\n/**\n * Converts a date to string\n */\nexport function toString(date: Date) {\n  return `${date.getFullYear()}${date.getMonth()}${date.getDate()}`;\n}\n\n/**\n * Returns true if toCheck date is before the date\n */\nexport function isBefore(date: Date, toCheckDate: Date): boolean {\n  if (toCheckDate.getFullYear() < date.getFullYear()) {\n    return true;\n  }\n\n  if (toCheckDate.getFullYear() === date.getFullYear()) {\n    if (toCheckDate.getMonth() < date.getMonth()) {\n      return true;\n    }\n\n    if (toCheckDate.getMonth() === date.getMonth()) {\n      if (toCheckDate.getDate() < date.getDate()) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the given date is valid\n */\nexport function isValid(date: undefined | Date): date is Date {\n  return typeof date !== 'undefined' && date !== null && !isNaN(new Date(date as Date).getTime());\n}\n\n/**\n * Returns true if the given dates are equal\n */\nexport function isEqual(first: Date, second: Date): boolean {\n  return (\n    first.getFullYear() === second.getFullYear() &&\n    first.getMonth() === second.getMonth() &&\n    first.getDate() === second.getDate()\n  );\n}\n\n/**\n * Returns true if the given date falls inside the range\n */\nexport function isPartOfRange(rangeStart: Date, rangeEnd: Date, date: Date): boolean {\n  // if date lies in between the year\n  if (rangeStart.getFullYear() <= date.getFullYear() && date.getFullYear() <= rangeEnd.getFullYear()) {\n    // if year is in-between range year start and year end\n    if (rangeStart.getFullYear() < date.getFullYear() && date.getFullYear() < rangeEnd.getFullYear()) {\n      return true;\n    }\n\n    // if start year and end year are same\n    if (rangeStart.getFullYear() === rangeEnd.getFullYear()) {\n      if (rangeStart.getMonth() <= date.getMonth() && date.getMonth() <= rangeEnd.getMonth()) {\n        // if month is in-between month start and and moth end\n        if (rangeStart.getMonth() < date.getMonth() && date.getMonth() < rangeEnd.getMonth()) {\n          return true;\n        }\n\n        // if month start and month end are same\n        if (rangeStart.getMonth() === rangeEnd.getMonth()) {\n          if (\n            rangeStart.getDate() <= date.getDate() &&\n            date.getDate() <= rangeEnd.getDate() &&\n            date.getMonth() === rangeEnd.getMonth()\n          ) {\n            return true;\n          }\n          return false;\n        }\n\n        // if date is in start month\n        if (rangeStart.getMonth() === date.getMonth()) {\n          if (rangeStart.getDate() <= date.getDate()) {\n            return true;\n          }\n          return false;\n        }\n\n        // if date is in end month\n        if (rangeEnd.getMonth() === date.getMonth()) {\n          if (date.getDate() <= rangeEnd.getDate()) {\n            return true;\n          }\n          return false;\n        }\n\n        return false;\n      }\n      return false;\n    }\n\n    // if year is same as start year\n    if (rangeStart.getFullYear() === date.getFullYear()) {\n      // if month is greater than start month\n      if (date.getMonth() > rangeStart.getMonth()) {\n        return true;\n      }\n\n      // if month is same as start month\n      if (date.getMonth() === rangeStart.getMonth()) {\n        // if date is greater than range start date\n        if (date.getDate() >= rangeStart.getDate()) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    // if year is same as end year\n    if (rangeEnd.getFullYear() === date.getFullYear()) {\n      // if month is smaller than end month\n      if (date.getMonth() < rangeEnd.getMonth()) {\n        return true;\n      }\n\n      // if month is same as end month\n      if (date.getMonth() === rangeEnd.getMonth()) {\n        // if date is smaller than range end date\n        if (date.getDate() <= rangeEnd.getDate()) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    return false;\n  }\n  return false;\n}\n\n/**\n * Returns true if the given year is a leap year.\n * @param {number} year\n */\nexport function isALeapYear(year: number) {\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n/**\n * Returns the number of days in the given month of the given year.\n * @param {number} year\n * @param {number} month\n */\nexport function getNumberOfDaysInAMonth(year: number, month: MonthIndices) {\n  const map: Record<MonthIndices, number> = {\n    0: 31,\n    1: isALeapYear(year) ? 29 : 28,\n    2: 31,\n    3: 30,\n    4: 31,\n    5: 30,\n    6: 31,\n    7: 31,\n    8: 30,\n    9: 31,\n    10: 30,\n    11: 31,\n  };\n\n  return map[month];\n}\n\nfunction isLastDayOfMonth(date: Date): boolean {\n  return getNumberOfDaysInAMonth(date.getFullYear(), date.getMonth() as MonthIndices) === date.getDate();\n}\n\nfunction isLastDayOfYear(date: Date): boolean {\n  return (date.getMonth() as MonthIndices) === 11 && isLastDayOfMonth(date);\n}\n\nexport function getPreviousMonth(month: MonthIndices): MonthIndices {\n  return month === 0 ? 11 : ((month - 1) as MonthIndices);\n}\n\nexport function getNextMonth(month: MonthIndices): MonthIndices {\n  return month === 11 ? 0 : ((month + 1) as MonthIndices);\n}\n\nexport function getPreviousYear(year: number): number {\n  return year === 1 ? 1 : year - 1;\n}\n\nexport function getNextYear(year: number): number {\n  return year + 1;\n}\n\nexport function getNextDate(date: Date): Date {\n  if (isLastDayOfYear(date)) {\n    return new Date(date.getFullYear() + 1, 0, 1);\n  } else if (isLastDayOfMonth(date)) {\n    return new Date(date.getFullYear(), date.getMonth() + 1, 1);\n  } else {\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate() + 1);\n  }\n}\n\n// WEEKDAY UTILS\n\n/**\n * Creates and return a new weekday index-label map as per the **start**\n * parameter. By default this will return the same weekday index-label map\n * used by the Date object.\n * 0 means Sun - if we follow the native Date convention\n * Now if someone wants to start their week from Mon, then 0 would mean Monday which is different from\n * the convention used by the Date methods.\n * @param startOfTheWeek index of the day to be considered as start of the week\n */\nexport function getWeekDaysIndexToLabelMapForAStartOfTheWeek(startOfTheWeek = 0): {\n  map: Record<WeekdayIndices, string>;\n  order: WeekdayIndices[];\n} {\n  // we break [0,1,2,3,4,5,6] in two parts, startOfTheWeek = 3\n  // [startOfTheWeek,4,5,6] and [0,1,2] and join them with their labels\n  // this is just to re-order the label in the **correct order**\n  // i.e 0 becomes Wed although in native order 0 is Sunday\n  const order = Object.keys(NATIVE_INDEX_TO_LABEL_WEEKDAY_MAP)\n    .slice(startOfTheWeek, 7)\n    .concat(Object.keys(NATIVE_INDEX_TO_LABEL_WEEKDAY_MAP).slice(0, startOfTheWeek)) as unknown as WeekdayIndices[];\n\n  const map = order.reduce((acc, weekdayIndex, index) => {\n    // acc[0] = DEFAULT_WEEKDAY_INDEX[3]\n    acc[Number(index) as WeekdayIndices] = NATIVE_INDEX_TO_LABEL_WEEKDAY_MAP[Number(weekdayIndex) as WeekdayIndices];\n    return acc;\n  }, {} as Record<WeekdayIndices, string>);\n\n  return { map, order };\n}\n\n/**\n * So if the Date object says that some date has 3 day-of-the-week. No this 3 means Wednesday as per the native index for week days.\n * But if a calendar starts from Monday, then wednesday will not be at 3 but it will be at some other index which is according to a different index-label map.\n * So this method returns that index for wednesday.\n * @param weekdayAsPerNativeIndex day-of-the-week as per the Date object\n * @param startOfTheWeek index of the day to be considered as start of the week\n */\nfunction getInfluencedWeekDayIndexAsPerAStartDay(weekdayAsPerNativeIndex: number, startOfTheWeek = 0): WeekdayIndices {\n  return (\n    weekdayAsPerNativeIndex >= startOfTheWeek\n      ? weekdayAsPerNativeIndex - startOfTheWeek\n      : 6 - startOfTheWeek + 1 + weekdayAsPerNativeIndex\n  ) as WeekdayIndices;\n}\n\n// {\n//   0: 'Mo',\n//   1: 'Tu',\n//   2: 'We',\n//   3: 'Th',\n//   4: 'Fr',\n//   5: 'Sa',\n//   6: 'Su'\n// };\n// start = 1\n// 6 - 1 = 5\n// influencedIndex = 3 (Thu)\n// 3 <= 5 so 3 + 1 = 4 (Thu) (native)\n// influencedIndex = 2 (Wed)\n// 2 <= 5 so 2 + 1 = 3 (Wed) (native)\n// influencedIndex = 5 (Sa)\n// 5 <= 5 so 5 + 1 = 6 (Sa) (native)\n// influencedIndex = 6 (Su)\n// 6 > 5 so ((6 - 5) - 1) = 0 (su) (native)\n\n// {\n//   0: 'Tu',\n//   1: 'We',\n//   2: 'Th',\n//   3: 'Fr',\n//   4: 'Sa',\n//   5: 'Su',\n//   6: 'Mo'\n// };\n// start = 2\n// 6 - 2 = 4\n// influencedIndex = 3 (Fr)\n// 3 <= 4 so 3 + 2 = 5 (Fr) (native)\n// influencedIndex = 2 (Th)\n// 2 <= 4 so 2 + 2 = 4 (Th) (native)\n// influencedIndex = 5 (Su)\n// 5 > 4 so ((5 - 4) - 1) = 0 (Su) (native)\n// influencedIndex = 6 (Mo)\n// 6 > 4 so ((6 - 4) - 1) = 1 (Mo) (native)\nfunction getNativeWeekDayIndexFromAStartDayInfluencedIndex(\n  weekdayAsPerChangedIndex: number,\n  startOfTheWeek: number\n): WeekdayIndices {\n  const diversion = 6 - startOfTheWeek;\n  return (\n    weekdayAsPerChangedIndex <= diversion\n      ? weekdayAsPerChangedIndex + startOfTheWeek\n      : weekdayAsPerChangedIndex - diversion - 1\n  ) as WeekdayIndices;\n}\n\n/**\n * Gives the index of day-of-the-week on the 1st of the provided month-year.\n * @param year Specify a year\n * @param month Specify a month\n * @param startOfTheWeek index of the day to be considered as start of the week\n */\nfunction getInfluencedWeekDayIndexOnFirstDateOfMonth(\n  year: number,\n  month: number,\n  startOfTheWeek: number\n): WeekdayIndices {\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  return getInfluencedWeekDayIndexAsPerAStartDay(date.getDay(), startOfTheWeek) as WeekdayIndices;\n}\n\n/**\n * Returns info about what indexes are weekend\n * @param startOfTheWeek index of the day to be considered as start of the week\n */\nexport function getWeekendInfo(startOfTheWeek: number): WeekdayIndices[] {\n  if (startOfTheWeek === 0) {\n    return [6, 0];\n  } else if (startOfTheWeek === 1) {\n    return [5, 6];\n  } else if (startOfTheWeek === 2) {\n    return [4, 5];\n  } else if (startOfTheWeek === 3) {\n    return [3, 4];\n  } else if (startOfTheWeek === 4) {\n    return [2, 3];\n  } else if (startOfTheWeek === 5) {\n    return [1, 2];\n  } else {\n    return [0, 1];\n  }\n}\n\n// 1 - 20 (20 years in one range block)\n// 21 - 40\n// so if you provide 3 then the start of raange for 3 would be\n// 1 since it belongs to the 1-20 year range.\nexport function getStartOfRangeForAYear(year: number) {\n  // last cell will always be a perfect multiple of 20\n  // take 2016 as an example\n  if (year % 20 === 0) {\n    return 20 * (year / 20 - 1) + 1;\n  }\n  // logic derived from a few examples like 2021, 1981, 1973\n  return 20 * Number((year / 20).toFixed(0)) + 1;\n}\n\n/**\n * Returns matrix for the month select view.\n * @param selectedMonth\n */\nexport function getMonthViewMetrix(selectedMonth: Record<number, 1>): Array<MonthCell>[] {\n  const months = Array.from({ length: 12 }, (v, k) => {\n    return {\n      month: k as MonthIndices,\n      isCurrentMonth: new Date().getMonth() === k,\n      isSelectedMonth: selectedMonth[k] === 1,\n    };\n  });\n  return [months.slice(0, 3), months.slice(3, 6), months.slice(6, 9), months.slice(9, 12)];\n}\n\nexport function getPreviousRangeStartingYear(rangeStartYear: number) {\n  if (rangeStartYear === 1) {\n    return 1;\n  }\n  return getStartOfRangeForAYear(rangeStartYear - 1);\n}\n\nexport function getNextRangeStartingYear(rangeStartYear: number) {\n  return getStartOfRangeForAYear(rangeStartYear + 20);\n}\n\nexport function getYearRangeLimits(rangeStartYear: number) {\n  return [rangeStartYear, rangeStartYear + 19];\n}\n\nexport function getYearsViewMetrix(rangeStartYear: number, selectedYearMap: Record<number, 1>): Array<YearCell>[] {\n  const years = Array.from({ length: 20 }, (v, index) => {\n    return {\n      year: rangeStartYear + index,\n      isCurrentYear: new Date().getFullYear() === rangeStartYear + index,\n      isSelectedYear: selectedYearMap[rangeStartYear + index] === 1,\n    };\n  });\n  return [years.slice(0, 5), years.slice(5, 10), years.slice(10, 15), years.slice(15, 20)];\n}\n\nexport function validateAndReturnDateFormatter(format: string) {\n  const partsMap: Record<'YYYY' | 'MM' | 'DD', boolean> = { YYYY: true, MM: true, DD: true };\n  const parts = format.split('-') as ('YYYY' | 'MM' | 'DD')[];\n  if (parts.length !== 3) {\n    throw new Error('Date format is invalid.');\n  }\n  if (!parts.every((part) => partsMap[part])) {\n    throw new Error('Date format uses unknown parts.');\n  }\n  return (year: number, month: number, date: number, separator: string): string => {\n    let string = '';\n    parts.forEach((part, index) => {\n      if (part === 'YYYY') {\n        string += year;\n      }\n      if (part === 'MM') {\n        string += month;\n      }\n      if (part === 'DD') {\n        string += date;\n      }\n      if (index !== 2) {\n        string += separator;\n      }\n    });\n    return string;\n  };\n}\n\nexport function checkIfDateIsDisabledHOF(params: CheckIfDateIsDisabledHOFParams) {\n  const { disablePast, disableToday, disableFuture, customDisabledCheck, maxDate, minDate, applyMax, applyMin } =\n    params;\n\n  const today = new Date();\n  const currentYear = today.getFullYear();\n  const currentMonth = today.getMonth();\n  const currDate = today.getDate();\n\n  return function checkIfDateIsDisabled(dateToCheck: Date) {\n    if (disablePast) {\n      if (dateToCheck.getFullYear() < currentYear) {\n        return true;\n      }\n\n      if (dateToCheck.getFullYear() === currentYear && dateToCheck.getMonth() < currentMonth) {\n        return true;\n      }\n\n      if (\n        dateToCheck.getFullYear() === currentYear &&\n        dateToCheck.getMonth() === currentMonth &&\n        dateToCheck.getDate() < currDate\n      ) {\n        return true;\n      }\n    }\n    if (disableToday) {\n      if (\n        dateToCheck.getFullYear() === currentYear &&\n        dateToCheck.getMonth() === currentMonth &&\n        dateToCheck.getDate() === currDate\n      ) {\n        return true;\n      }\n    }\n    if (disableFuture) {\n      if (dateToCheck.getFullYear() > currentYear) {\n        return true;\n      }\n\n      if (dateToCheck.getFullYear() === currentYear && dateToCheck.getMonth() > currentMonth) {\n        return true;\n      }\n\n      if (\n        dateToCheck.getFullYear() === currentYear &&\n        dateToCheck.getMonth() === currentMonth &&\n        dateToCheck.getDate() > currDate\n      ) {\n        return true;\n      }\n    }\n\n    if (applyMax) {\n      if (isBefore(dateToCheck, maxDate)) {\n        return true;\n      }\n    }\n\n    if (applyMin) {\n      if (isBefore(minDate, dateToCheck)) {\n        return true;\n      }\n    }\n\n    if (typeof customDisabledCheck === 'function') {\n      return customDisabledCheck(dateToCheck);\n    }\n\n    return false;\n  };\n}\n\nexport function getDaysOfMonthViewMetrix(params: GetDaysOfMonthViewMetrixParams): Array<DayOfMonthCell>[] {\n  const {\n    isRangeSelectModeOn,\n    isRangeView,\n    selectedDate,\n    selectedRangeStart,\n    selectedRangeEnd,\n    highlightsMap,\n    newSelectedRangeStart,\n    newSelectedRangeEnd,\n    isSelectMultiDate,\n    selectedMultiDates,\n    weekendIndexes,\n    yearInView,\n    monthInView,\n    startOfTheWeek,\n    isDisabled,\n  } = params;\n\n  const matrix: Array<DayOfMonthCell>[] = [[], [], [], [], [], []];\n\n  const currentMonthDatesStartIndex = getInfluencedWeekDayIndexOnFirstDateOfMonth(\n    yearInView,\n    monthInView,\n    startOfTheWeek\n  );\n\n  const weekends = weekendIndexes;\n\n  const today = new Date();\n  const todaysDate = today.getDate();\n  const todaysMonth = today.getMonth();\n  const todaysYear = today.getFullYear();\n  const totalDaysInCurrentMonth = getNumberOfDaysInAMonth(yearInView, monthInView);\n\n  const isPrevMonthFromLastYear = monthInView === 0;\n  const isCurrentMonthLast = monthInView === 11;\n\n  const totalDaysInPrevMonth = getNumberOfDaysInAMonth(\n    isPrevMonthFromLastYear ? getPreviousYear(yearInView) : yearInView,\n    getPreviousMonth(monthInView)\n  );\n\n  // calendar has 6 rows (0 - 5)\n  let row = 0;\n  let weekColumn: WeekdayIndices = 0;\n\n  //  31 - (6 - 1) === 26\n  const lastMonthDateStartFrom = totalDaysInPrevMonth - (currentMonthDatesStartIndex - 1);\n\n  // first loop to fill cell values of last month\n  for (let dayOfMonth = lastMonthDateStartFrom; dayOfMonth <= totalDaysInPrevMonth; dayOfMonth++) {\n    if (weekColumn === 7) {\n      weekColumn = 0;\n      row++;\n    }\n    const currMonth = getPreviousMonth(monthInView);\n    const currYear = isPrevMonthFromLastYear ? getPreviousYear(yearInView) : yearInView;\n\n    const currDate = new Date(currYear, currMonth, dayOfMonth);\n\n    // if new range dates are VALID\n    // then use them to compute in range values\n\n    matrix[row].push({\n      date: currDate,\n      dayOfMonth: dayOfMonth,\n      month: currMonth,\n      activeMonthInView: false,\n      isHighlight: highlightsMap[toString(currDate)] === 1,\n      isInRange: isRangeView\n        ? isRangeSelectModeOn\n          ? isValid(newSelectedRangeStart) && isValid(newSelectedRangeEnd)\n            ? isBefore(newSelectedRangeEnd, newSelectedRangeStart)\n              ? isPartOfRange(newSelectedRangeStart, newSelectedRangeEnd, currDate)\n              : isPartOfRange(newSelectedRangeEnd, newSelectedRangeStart, currDate)\n            : false\n          : !!selectedRangeStart && !!selectedRangeEnd && isPartOfRange(selectedRangeStart, selectedRangeEnd, currDate)\n        : false,\n      isRangeStart: isRangeView\n        ? isRangeSelectModeOn\n          ? isValid(newSelectedRangeStart)\n            ? isEqual(newSelectedRangeStart, currDate)\n            : false\n          : !!selectedRangeStart && isEqual(selectedRangeStart, currDate)\n        : false,\n      isRangeEnd: isRangeView\n        ? isRangeSelectModeOn\n          ? false\n          : !!selectedRangeEnd && isEqual(selectedRangeEnd, currDate)\n        : false,\n      year: currYear,\n      isWeekend: typeof weekends.find((c) => c === weekColumn) === 'number' ? true : false,\n      dayOfWeek: getNativeWeekDayIndexFromAStartDayInfluencedIndex(weekColumn, startOfTheWeek),\n      isToday: dayOfMonth === todaysDate && currMonth === todaysMonth && currYear === todaysYear,\n      isFirstRow: row === 0,\n      isLastRow: row === 5,\n      isFirsColumn: weekColumn === 0,\n      isLastColumn: weekColumn === 6,\n      isSelected: isSelectMultiDate\n        ? !!selectedMultiDates[toString(currDate)]\n        : isRangeView\n        ? false\n        : selectedDate\n        ? currMonth === selectedDate.getMonth() &&\n          currYear === selectedDate.getFullYear() &&\n          dayOfMonth === selectedDate.getDate()\n        : false,\n      // not modified\n      isDisabled: isDisabled(currDate),\n    });\n    weekColumn++;\n  }\n\n  // second loop to fill cell values of current month\n  for (let dayOfMonth = 1; dayOfMonth <= totalDaysInCurrentMonth; dayOfMonth++) {\n    if (weekColumn === 7) {\n      weekColumn = 0;\n      row++;\n    }\n    const currMonth = monthInView;\n    const currYear = yearInView;\n    const isToday = dayOfMonth === todaysDate && monthInView === todaysMonth && yearInView === todaysYear;\n\n    const currDate = new Date(currYear, currMonth, dayOfMonth);\n\n    matrix[row].push({\n      date: currDate,\n      dayOfMonth: dayOfMonth,\n      month: currMonth,\n      activeMonthInView: true,\n      isHighlight: highlightsMap[toString(currDate)] === 1,\n      isInRange: isRangeView\n        ? isRangeSelectModeOn\n          ? isValid(newSelectedRangeStart) && isValid(newSelectedRangeEnd)\n            ? isBefore(newSelectedRangeEnd, newSelectedRangeStart)\n              ? isPartOfRange(newSelectedRangeStart, newSelectedRangeEnd, currDate)\n              : isPartOfRange(newSelectedRangeEnd, newSelectedRangeStart, currDate)\n            : false\n          : !!selectedRangeStart && !!selectedRangeEnd && isPartOfRange(selectedRangeStart, selectedRangeEnd, currDate)\n        : false,\n      isRangeStart: isRangeView\n        ? isRangeSelectModeOn\n          ? isValid(newSelectedRangeStart)\n            ? isEqual(newSelectedRangeStart, currDate)\n            : false\n          : !!selectedRangeStart && isEqual(selectedRangeStart, currDate)\n        : false,\n      isRangeEnd: isRangeView\n        ? isRangeSelectModeOn\n          ? false\n          : !!selectedRangeEnd && isEqual(selectedRangeEnd, currDate)\n        : false,\n      year: currYear,\n      dayOfWeek: getNativeWeekDayIndexFromAStartDayInfluencedIndex(weekColumn, startOfTheWeek),\n      isWeekend: typeof weekends.find((c) => c === weekColumn) === 'number' ? true : false,\n      isToday: isToday,\n      isFirstRow: row === 0,\n      isLastRow: row === 5,\n      isFirsColumn: weekColumn === 0,\n      isLastColumn: weekColumn === 6,\n      isSelected: isSelectMultiDate\n        ? !!selectedMultiDates[toString(currDate)]\n        : isRangeView\n        ? false\n        : selectedDate\n        ? currMonth === selectedDate.getMonth() &&\n          currYear === selectedDate.getFullYear() &&\n          dayOfMonth === selectedDate.getDate()\n        : false,\n      isDisabled: isDisabled(currDate),\n    });\n    weekColumn++;\n  }\n\n  let dayOfMonth = 1;\n  // last loop to fill cell values of next month\n\n  while (matrix[5].length < 7) {\n    if (weekColumn === 7) {\n      weekColumn = 0;\n      row++;\n    }\n    const currMonth = getNextMonth(monthInView);\n    const currYear = isCurrentMonthLast ? yearInView + 1 : yearInView;\n\n    const currDate = new Date(currYear, currMonth, dayOfMonth);\n\n    matrix[row].push({\n      date: currDate,\n      dayOfMonth: dayOfMonth,\n      month: currMonth,\n      activeMonthInView: false,\n      isHighlight: highlightsMap[toString(currDate)] === 1,\n      isInRange: isRangeView\n        ? isRangeSelectModeOn\n          ? isValid(newSelectedRangeStart) && isValid(newSelectedRangeEnd)\n            ? isBefore(newSelectedRangeEnd, newSelectedRangeStart)\n              ? isPartOfRange(newSelectedRangeStart, newSelectedRangeEnd, currDate)\n              : isPartOfRange(newSelectedRangeEnd, newSelectedRangeStart, currDate)\n            : false\n          : !!selectedRangeStart && !!selectedRangeEnd && isPartOfRange(selectedRangeStart, selectedRangeEnd, currDate)\n        : false,\n      isRangeStart: isRangeView\n        ? isRangeSelectModeOn\n          ? isValid(newSelectedRangeStart)\n            ? isEqual(newSelectedRangeStart, currDate)\n            : false\n          : !!selectedRangeStart && isEqual(selectedRangeStart, currDate)\n        : false,\n      isRangeEnd: isRangeView\n        ? isRangeSelectModeOn\n          ? false\n          : !!selectedRangeEnd && isEqual(selectedRangeEnd, currDate)\n        : false,\n      year: currYear,\n      dayOfWeek: getNativeWeekDayIndexFromAStartDayInfluencedIndex(weekColumn, startOfTheWeek),\n      isWeekend: typeof weekends.find((c) => c === weekColumn) === 'number' ? true : false,\n      isToday: dayOfMonth === todaysDate && currMonth === todaysMonth && currYear === todaysYear,\n      isFirstRow: row === 0,\n      isLastRow: row === 5,\n      isFirsColumn: weekColumn === 0,\n      isLastColumn: weekColumn === 6,\n      isSelected: isSelectMultiDate\n        ? !!selectedMultiDates[toString(currDate)]\n        : isRangeView\n        ? false\n        : selectedDate\n        ? currMonth === selectedDate.getMonth() &&\n          currYear === selectedDate.getFullYear() &&\n          dayOfMonth === selectedDate.getDate()\n        : false,\n      isDisabled: isDisabled(currDate),\n    });\n    weekColumn++;\n    dayOfMonth++;\n  }\n\n  return matrix;\n}\n","import React, { memo } from 'react';\nimport { CSSProps } from '../../calendar';\n\nimport { MonthIndices } from '../../types';\n\nimport { NATIVE_INDEX_TO_LABEL_MONTHS_MAP } from '../../utils/constants';\n\ninterface Props {\n  onClickPrev: (e: any) => any;\n  onClickNext: (e: any) => any;\n  onChangeViewType: (view: 'month_dates' | 'months' | 'years') => any;\n  viewType: 'month_dates' | 'months' | 'years';\n  viewingMonth: MonthIndices;\n  viewingYear: number;\n  yearMatrixStart: number;\n  yearMatrixEnd: number;\n  layoutCalcs: CSSProps;\n}\n\nfunction HeaderComponent({\n  onClickPrev,\n  onChangeViewType,\n  onClickNext,\n  viewType,\n  viewingMonth,\n  viewingYear,\n  yearMatrixEnd,\n  yearMatrixStart,\n  layoutCalcs,\n}: Props) {\n  return (\n    <header style={layoutCalcs.root.arc_header} className='arc_header'>\n      <button\n        style={layoutCalcs.header.arc_header_nav}\n        className='arc_header_nav arc_header_nav-prev'\n        onClick={onClickPrev}>\n        <span>←</span>\n      </button>\n      {viewType === 'month_dates' ? (\n        <button\n          style={layoutCalcs.header.arch_header_label}\n          className='arc_header_label arc_header_label-days-of-month'\n          onClick={() => onChangeViewType('years')}>\n          <div>\n            <span>{NATIVE_INDEX_TO_LABEL_MONTHS_MAP[viewingMonth]}</span>\n          </div>\n          <div>\n            <span>{viewingYear}</span>\n          </div>\n        </button>\n      ) : viewType === 'months' ? (\n        <button style={layoutCalcs.header.arch_header_label} className='arc_header_label arc_header_label-months'>\n          <div onClick={() => onChangeViewType('years')}>\n            <span>{viewingYear}</span>\n          </div>\n        </button>\n      ) : (\n        <button\n          style={layoutCalcs.header.arch_header_label}\n          className='arc_header_label arc_header_label-years'\n          onClick={() => onChangeViewType('month_dates')}>\n          <div>\n            <span>\n              {yearMatrixStart}-{yearMatrixEnd}\n            </span>\n          </div>\n        </button>\n      )}\n      <button\n        style={layoutCalcs.header.arc_header_nav}\n        className='arc_header_nav arc_header_nav-next'\n        onClick={onClickNext}>\n        <span>→</span>\n      </button>\n    </header>\n  );\n}\n\nexport const Header = memo(HeaderComponent);\n","import React, { memo, useMemo } from 'react';\n\nimport { MonthCell, MonthIndices } from '../../types';\n\nimport { getMonthViewMetrix } from '../../utils/date-utils';\nimport { NATIVE_INDEX_TO_LABEL_MONTHS_MAP } from '../../utils/constants';\nimport { CSSProps } from '../../calendar';\n\ninterface Props {\n  onChangeViewType: (view: 'month_dates' | 'months' | 'years') => any;\n  onChangeViewingMonth: (month: MonthIndices) => any;\n  layoutCalcs: CSSProps;\n}\n\nfunction MonthSelectorComponent({ onChangeViewingMonth, onChangeViewType, layoutCalcs }: Props) {\n  const monthsViewMatrix = useMemo<MonthCell[][]>(() => {\n    return getMonthViewMetrix({});\n  }, []);\n\n  return (\n    <div style={layoutCalcs.root['arc_view-months']} className='arc_view-months'>\n      {monthsViewMatrix.map((row, index) => (\n        <div style={layoutCalcs.months.arc_view_row} className='arc_view_row' key={index}>\n          {row.map((cell) => (\n            <div\n              style={layoutCalcs.months.arc_view_cell}\n              className={`arc_view_cell${cell.isCurrentMonth ? ' arc_this_month' : ''}`}\n              key={cell.month}>\n              <button\n                style={layoutCalcs.months.arc_view_cell_value_button}\n                onClick={() => {\n                  onChangeViewingMonth(cell.month);\n                  onChangeViewType('month_dates');\n                }}>\n                {NATIVE_INDEX_TO_LABEL_MONTHS_MAP[cell.month]}\n              </button>\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport const MonthSelector = memo(MonthSelectorComponent);\n","import React, { memo, useMemo } from 'react';\nimport { CSSProps } from '../../calendar';\n\nimport { YearCell } from '../../types';\n\nimport { getYearsViewMetrix } from '../../utils/date-utils';\n\ninterface Props {\n  onChangeViewType: (view: 'month_dates' | 'months' | 'years') => any;\n  onChangeViewingYear: (year: number) => any;\n  yearMatrixStart: number;\n  yearMatrixEnd: number;\n  layoutCalcs: CSSProps;\n}\n\nfunction YearSelectorComponent({\n  onChangeViewType,\n  onChangeViewingYear,\n  yearMatrixStart,\n  yearMatrixEnd,\n  layoutCalcs,\n}: Props) {\n  // TODO add highlight slected dates years\n  const yearsMatrix = useMemo<YearCell[][]>(() => {\n    return getYearsViewMetrix(yearMatrixStart, {});\n  }, [yearMatrixStart]);\n\n  return (\n    <div style={layoutCalcs.root['arc_view-years']} className='arc_view-years'>\n      {yearsMatrix.map((row, index) => (\n        <div style={layoutCalcs.years.arc_view_row} className='arc_view_row' key={index}>\n          {row.map((cell) => (\n            <div\n              style={layoutCalcs.years.arc_view_cell}\n              className={`arc_view_cell${cell.isCurrentYear ? ' arc_this_year' : ''}`}\n              key={cell.year}>\n              <button\n                style={layoutCalcs.months.arc_view_cell_value_button}\n                onClick={() => {\n                  onChangeViewingYear(cell.year);\n                  onChangeViewType('months');\n                }}>\n                {cell.year}\n              </button>\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport const YearSelector = memo(YearSelectorComponent);\n","import React, { memo, useMemo } from 'react';\nimport { CSSProps } from '../../calendar';\n\nimport { WeekdayIndices } from '../../types';\n\nimport { getWeekDaysIndexToLabelMapForAStartOfTheWeek } from '../../utils/date-utils';\n\ninterface Props {\n  weekStartIndex: WeekdayIndices;\n  weekendIndices: WeekdayIndices[];\n  layoutCalcs: CSSProps;\n}\n\nfunction WeekDaysRowComponent({ weekStartIndex, weekendIndices, layoutCalcs }: Props) {\n  // week days as per the start day of the week\n  const { order: weekDayOrder, map: weekDayMap } = useMemo(() => {\n    return getWeekDaysIndexToLabelMapForAStartOfTheWeek(weekStartIndex);\n  }, [weekStartIndex]);\n\n  const weekendIndicesMap: Record<WeekdayIndices, 1> = useMemo(() => {\n    return weekendIndices.reduce((acc, curr) => {\n      acc[curr] = 1;\n      return acc;\n    }, {} as Record<WeekdayIndices, 1>);\n  }, [weekendIndices]);\n\n  return (\n    <ul style={layoutCalcs.weekdaysRow.arc_view_weekdays} className='arc_view_weekdays'>\n      {weekDayOrder.map((weekDay, weekdayIndex) => (\n        <li\n          style={layoutCalcs.weekdaysRow.arc_view_weekdays_cell}\n          key={weekDay}\n          className={`arc_view_weekdays_cell${weekendIndicesMap[weekdayIndex as WeekdayIndices] ? ' arc_wknd' : ''}`}>\n          <div style={layoutCalcs.weekdaysRow.arc_view_weekdays_cell_value}>\n            <span>{weekDayMap[weekdayIndex as WeekdayIndices]}</span>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport const WeekDaysRow = memo(WeekDaysRowComponent);\n","import React, { memo, useCallback, useMemo, useState } from 'react';\nimport { CSSProps } from '../../calendar';\n\nimport { DayOfMonthCell, MonthIndices, WeekdayIndices } from '../../types';\nimport {\n  addDays,\n  getDaysOfMonthViewMetrix,\n  isBefore,\n  isValid,\n  toString,\n  validateAndReturnDateFormatter,\n} from '../../utils/date-utils';\n\ninterface Value {\n  value: Date;\n  formatted: string;\n}\n\ntype RangeValue = [Value, Value];\ntype MultiValue = Value[];\n\ninterface Props {\n  onChangeViewingYear: (year: number) => any;\n  onChangeViewingMonth: (month: MonthIndices) => any;\n  onChangenNewSelectedRangeEnd: (date: Date | undefined) => any;\n  onChangenNewSelectedRangeStart: (date: Date | undefined) => any;\n  onChangenSelectedRangeStart: (date: Date) => any;\n  onChangenSelectedRangeEnd: (date: Date) => any;\n  onChangenSelectedMultiDates: (dates: Record<string, Date | undefined>) => any;\n  onChangenSelectedDate: (dates: Date) => any;\n  viewingMonth: MonthIndices;\n  skipDisabledDatesInRange: boolean;\n  viewingYear: number;\n  weekStartIndex: WeekdayIndices;\n  fixedRangeLength: number;\n  selectedDate: Date | undefined;\n  selectedRangeStart: Date | undefined;\n  selectedRangeEnd: Date | undefined;\n  newSelectedRangeStart: Date | undefined;\n  newSelectedRangeEnd: Date | undefined;\n  isRangeSelectorView: boolean;\n  isFixedRangeView: boolean;\n  weekendIndices: WeekdayIndices[];\n  selectedMultiDates: Record<string, Date | undefined>;\n  isMultiSelectorView: boolean;\n  isRangeSelectModeOn: boolean;\n  setIsRangeSelectModeOn: (on: boolean) => void;\n  disableFuture: boolean;\n  disablePast: boolean;\n  disableToday: boolean;\n  lockView: boolean;\n  maxAllowedDate?: Date;\n  minAllowedDate?: Date;\n  separator?: string;\n  highlights: Date[];\n  isDisabled: (date: Date) => boolean;\n  format?: string;\n  today: Date;\n  onChange?: (value: Value | MultiValue | RangeValue) => any | Promise<any>;\n  layoutCalcs: CSSProps;\n}\n\nfunction DayOfMonthSelectorComponent({\n  selectedDate,\n  selectedRangeStart,\n  selectedRangeEnd,\n  newSelectedRangeStart,\n  weekStartIndex,\n  onChangeViewingYear,\n  onChangeViewingMonth,\n  newSelectedRangeEnd,\n  isRangeSelectorView,\n  skipDisabledDatesInRange,\n  setIsRangeSelectModeOn,\n  fixedRangeLength,\n  isFixedRangeView,\n  isRangeSelectModeOn,\n  isDisabled,\n  onChangenSelectedMultiDates,\n  selectedMultiDates,\n  isMultiSelectorView,\n  viewingMonth,\n  format,\n  onChangenNewSelectedRangeEnd,\n  onChangenNewSelectedRangeStart,\n  onChangenSelectedRangeEnd,\n  onChangenSelectedRangeStart,\n  onChangenSelectedDate,\n  layoutCalcs,\n  weekendIndices,\n  onChange,\n  viewingYear,\n  disableFuture,\n  disablePast,\n  lockView,\n  separator = '-',\n  highlights,\n  disableToday,\n}: Props) {\n  const [highlightsMap] = useState<Record<string, 1>>(() => {\n    if (Array.isArray(highlights)) {\n      return highlights\n        .filter((d) => isValid(d))\n        .reduce((acc, curr) => {\n          acc[toString(curr)] = 1;\n          return acc;\n        }, {} as Record<string, 1>);\n    }\n    return {};\n  });\n\n  // date formatter\n  const formatter = useMemo(() => {\n    return validateAndReturnDateFormatter(format || 'DD-MM-YYYY');\n  }, [format]);\n\n  const daysOfMMonthViewMatrix = useMemo(() => {\n    return getDaysOfMonthViewMetrix({\n      selectedDate: selectedDate,\n      selectedRangeStart: selectedRangeStart,\n      selectedRangeEnd: selectedRangeEnd,\n      newSelectedRangeStart: newSelectedRangeStart,\n      newSelectedRangeEnd: newSelectedRangeEnd,\n      isRangeView: isRangeSelectorView || isFixedRangeView,\n      isRangeSelectModeOn,\n      weekendIndexes: weekendIndices,\n      selectedMultiDates,\n      highlightsMap,\n      isSelectMultiDate: isMultiSelectorView,\n      yearInView: viewingYear,\n      monthInView: viewingMonth,\n      startOfTheWeek: weekStartIndex,\n      disableFuture,\n      disablePast,\n      disableToday,\n      isDisabled,\n    });\n  }, [\n    selectedDate,\n    selectedRangeStart,\n    selectedRangeEnd,\n    newSelectedRangeStart,\n    newSelectedRangeEnd,\n    isRangeSelectorView,\n    isFixedRangeView,\n    isRangeSelectModeOn,\n    weekendIndices,\n    selectedMultiDates,\n    highlightsMap,\n    isMultiSelectorView,\n    viewingYear,\n    viewingMonth,\n    weekStartIndex,\n    disableFuture,\n    disablePast,\n    disableToday,\n    isDisabled,\n  ]);\n\n  const onDateClicked = useCallback(\n    (cell: DayOfMonthCell) => {\n      const clickedDate = cell.date;\n\n      const cantSelectAsItsLocked = lockView && clickedDate.getMonth() !== viewingMonth;\n\n      if (cantSelectAsItsLocked) {\n        return;\n      }\n\n      if (isRangeSelectorView && !isFixedRangeView) {\n        if (isRangeSelectModeOn && newSelectedRangeStart) {\n          // check if it is the first click or seconds\n\n          const previouslySelectedDate = new Date(\n            newSelectedRangeStart.getFullYear(),\n            newSelectedRangeStart.getMonth(),\n            newSelectedRangeStart.getDate()\n          );\n\n          if (isBefore(previouslySelectedDate, clickedDate)) {\n            onChangenSelectedRangeStart(clickedDate);\n            onChangenSelectedRangeEnd(previouslySelectedDate);\n\n            const startDate = clickedDate;\n\n            const endDate = previouslySelectedDate;\n\n            onChange &&\n              onChange([\n                {\n                  value: startDate,\n                  formatted: formatter(\n                    startDate.getFullYear(),\n                    startDate.getMonth() + 1,\n                    startDate.getDate(),\n                    separator\n                  ),\n                },\n                {\n                  value: endDate,\n                  formatted: formatter(endDate.getFullYear(), endDate.getMonth() + 1, endDate.getDate(), separator),\n                },\n              ]);\n          } else {\n            onChangenSelectedRangeStart(previouslySelectedDate);\n\n            onChangenSelectedRangeEnd(clickedDate);\n\n            const startDate = previouslySelectedDate;\n\n            const endDate = clickedDate;\n\n            onChange &&\n              onChange([\n                {\n                  value: startDate,\n                  formatted: formatter(\n                    startDate.getFullYear(),\n                    startDate.getMonth() + 1,\n                    startDate.getDate(),\n                    separator\n                  ),\n                },\n                {\n                  value: endDate,\n                  formatted: formatter(endDate.getFullYear(), endDate.getMonth() + 1, endDate.getDate(), separator),\n                },\n              ]);\n          }\n\n          onChangenNewSelectedRangeEnd(undefined);\n\n          setIsRangeSelectModeOn(false);\n        } else {\n          // select first date\n          onChangenNewSelectedRangeStart(clickedDate);\n\n          onChangenNewSelectedRangeEnd(undefined);\n\n          setIsRangeSelectModeOn(true);\n        }\n      } else if (isFixedRangeView) {\n        onChangenSelectedRangeStart(clickedDate);\n        const endDate = addDays(clickedDate, fixedRangeLength, isDisabled, skipDisabledDatesInRange);\n        onChangenSelectedRangeEnd(endDate);\n        onChange &&\n          onChange([\n            {\n              value: clickedDate,\n              formatted: formatter(\n                clickedDate.getFullYear(),\n                clickedDate.getMonth() + 1,\n                clickedDate.getDate(),\n                separator\n              ),\n            },\n            {\n              value: endDate,\n              formatted: formatter(endDate.getFullYear(), endDate.getMonth() + 1, endDate.getDate(), separator),\n            },\n          ]);\n      } else if (isMultiSelectorView) {\n        const stringkey = toString(clickedDate);\n        const newselectedMultiDates = { ...selectedMultiDates };\n\n        if (!!selectedMultiDates[stringkey]) {\n          newselectedMultiDates[stringkey] = undefined;\n        } else {\n          newselectedMultiDates[stringkey] = clickedDate;\n        }\n\n        onChangenSelectedMultiDates(newselectedMultiDates);\n\n        onChange &&\n          onChange(\n            Object.keys(newselectedMultiDates)\n              .filter((dk) => !!newselectedMultiDates[dk])\n              .map((dk) => ({\n                value: newselectedMultiDates[dk] as Date,\n                formatted: formatter(\n                  (newselectedMultiDates[dk] as Date).getFullYear(),\n                  (newselectedMultiDates[dk] as Date).getMonth() + 1,\n                  (newselectedMultiDates[dk] as Date).getDate(),\n                  separator\n                ),\n              }))\n          );\n      } else {\n        onChangenSelectedDate(clickedDate);\n\n        onChange &&\n          onChange({\n            value: clickedDate,\n            formatted: formatter(\n              clickedDate.getFullYear(),\n              clickedDate.getMonth() + 1,\n              clickedDate.getDate(),\n              separator\n            ),\n          });\n      }\n\n      onChangeViewingMonth(cell.month);\n      onChangeViewingYear(cell.year);\n    },\n    [\n      lockView,\n      viewingMonth,\n      isRangeSelectorView,\n      isFixedRangeView,\n      isMultiSelectorView,\n      onChangeViewingMonth,\n      onChangeViewingYear,\n      isRangeSelectModeOn,\n      newSelectedRangeStart,\n      onChangenNewSelectedRangeEnd,\n      setIsRangeSelectModeOn,\n      onChangenSelectedRangeStart,\n      onChangenSelectedRangeEnd,\n      onChange,\n      formatter,\n      separator,\n      onChangenNewSelectedRangeStart,\n      fixedRangeLength,\n      isDisabled,\n      skipDisabledDatesInRange,\n      selectedMultiDates,\n      onChangenSelectedMultiDates,\n      onChangenSelectedDate,\n    ]\n  );\n\n  return (\n    <div style={layoutCalcs.dayOfMonth['arc_view-days-of-month']} className='arc_view-days-of-month' role='grid'>\n      {daysOfMMonthViewMatrix.map((row, index) => (\n        <div style={layoutCalcs.dayOfMonth.arc_view_row} className='arc_view_row' key={index}>\n          {row.map((cell) => (\n            <div\n              style={layoutCalcs.dayOfMonth.arc_view_cell}\n              onMouseEnter={() => {\n                if (isRangeSelectorView) {\n                  if (isRangeSelectModeOn) {\n                    onChangenNewSelectedRangeEnd(new Date(cell.year, cell.month, cell.dayOfMonth));\n                  }\n                }\n              }}\n              key={cell.dayOfMonth}\n              className={`arc_view_cell${cell.activeMonthInView ? ' arc_active' : ''}${\n                cell.isWeekend ? ' arc_wknd' : ''\n              }${cell.isToday ? ' arc_today' : ''}${cell.isFirstRow ? ' arc_fr' : ''}${\n                cell.isToday ? ' arc_today' : ''\n              }${cell.isHighlight ? ' arc_highlight' : ''}${cell.isLastRow ? ' arc_lr' : ''}${\n                cell.isFirsColumn ? ' arc_fc' : ''\n              }${cell.isLastColumn ? ' arc_lc' : ''}${cell.isSelected && !isRangeSelectorView ? ' arc_selected' : ''}${\n                cell.isDisabled ? ' arc_disabled' : ''\n              }${cell.isInRange ? ' arc_in_range' : ''}${cell.isRangeStart ? ' arc_range_start' : ''}${\n                cell.isRangeEnd ? ' arc_range_end' : ''\n              }${isRangeSelectModeOn ? ' arc_range_mode' : ''}`}>\n              <div style={layoutCalcs.dayOfMonth.arc_view_cell_value} className='arc_view_cell_value'>\n                <button\n                  style={layoutCalcs.dayOfMonth.arc_view_cell_value_button}\n                  disabled={cell.isDisabled}\n                  tabIndex={cell.isDisabled ? -1 : 0}\n                  onClick={() => onDateClicked(cell)}>\n                  {cell.dayOfMonth}\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport const DayOfMonthSelector = memo(DayOfMonthSelectorComponent);\n","import React, { useCallback, useEffect, useMemo, useState, CSSProperties } from 'react';\n\nimport type { MonthIndices, WeekdayIndices } from './types';\n\nimport {\n  getStartOfRangeForAYear,\n  getPreviousYear,\n  getPreviousMonth,\n  getPreviousRangeStartingYear,\n  getNextYear,\n  getNextMonth,\n  getNextRangeStartingYear,\n  getYearRangeLimits,\n  getWeekendInfo,\n  isValid,\n  isBefore,\n  toString,\n  checkIfDateIsDisabledHOF,\n} from './utils/date-utils';\n\nimport { Header } from './components/header/Header';\nimport { MonthSelector } from './components/month-selector/MonthSelector';\nimport { YearSelector } from './components/year-selector/YearSelector';\nimport { WeekDaysRow } from './components/week-days-row/WeekDaysRow';\nimport { DayOfMonthSelector } from './components/day-of-month-selector/DayOfMonthSelector';\n\nimport './calendar.css';\n\ninterface Value {\n  value: Date;\n  formatted: string;\n}\n\ntype RangeValue = [Value, Value];\ntype MultiValue = Value[];\n\ninterface Props {\n  /**\n   * Dark mode\n   */\n  useDarkMode?: boolean;\n  /**\n   * Custom classname\n   */\n  className?: string;\n  /**\n   * Width & Height of the calendar.\n   * Default is 276\n   */\n  size?: number;\n  /**\n   * Base font-size of calendar.\n   * Default is 16\n   */\n  fontSize?: number;\n  /**\n   * The initial month and year that will be shown to the user.\n   * By default it shows today's date month and year. If a date is selected it shows the selected\n   * date's month and year.\n   */\n  initialViewDate?: Date;\n  /**\n   * User can not change month/year\n   */\n  lockView?: boolean;\n  /**\n   * Value of a single date or an array of dates in ISO format.\n   * Only applicable if selectRange is false\n   */\n  value?: Date | Date[];\n  /**\n   * Renders a multiple dates selector view\n   */\n  isMultiSelector?: boolean;\n  /**\n   * Renders a range selector UI for the calendar\n   */\n  isRangeSelector?: boolean;\n  /**\n   * Skip disabled dates when doing fixed range selection\n   */\n  skipDisabledDatesInRange?: boolean;\n  /**\n   * Always select n number of days starting from the user's selected date\n   */\n  fixedRange?: number;\n  /**\n   * Start date of the date range.\n   * Only applicable if selectRange is true.\n   */\n  rangeStart?: Date;\n  /**\n   * End date of the date range.\n   * Only applicable if selectRange is true.\n   */\n  rangeEnd?: Date;\n  /**\n   * Array of weekday number that are part of weekend.\n   * The weekday number depends on the start of the week if provided one.\n   * By default this is [6, 0] which Saturday, Sunday respectively as per the 0 based start of the week.\n   */\n  weekends?: WeekdayIndices[];\n  /**\n   * By default the calendar starts from Sun which is represented in JS as 0 index.\n   * You can provide the index for any other day that you want as start of the week.\n   */\n  startOfWeek?: WeekdayIndices;\n  /**\n   * Separator to be used when formatting the date string.\n   * Default is '-' i.e 'DD-MM-YYYY'\n   */\n  separator?: string;\n  /**\n   * A combination of YYYY-MM-DD.\n   * Eg. MM-DD-YYYY, DD-MM-YYYY etc.\n   * Default is '-' i.e 'DD-MM-YYYY'\n   */\n  format?: string;\n  /**\n   * A boolean flag to disable all past dates.\n   */\n  disablePast?: boolean;\n  /**\n   * A boolean flag to disable today's date.\n   */\n  disableToday?: boolean;\n  /**\n   * A boolean flag to disable all future dates.\n   */\n  disableFuture?: boolean;\n  /**\n   * A callback function that can be used to disable specific dates on the calendar.\n   */\n  isDisabled?: (date: Date) => boolean;\n  /**\n   * User will not be able to select past this date. This date will be selectable.\n   */\n  maxAllowedDate?: Date;\n  /**\n   * User will not be able to select before this date. This date will be selectable.\n   */\n  minAllowedDate?: Date;\n  /**\n   * These dates will be highlighted\n   */\n  highlights?: Date[];\n  /**\n   * OnChange callback functionn.\n   */\n  onChange?: (value: Value | MultiValue | RangeValue) => any | Promise<any>;\n}\n\n// const getStyles: (size: number) => ComputedStyles = (size: number) => ({\n//   appliedWidth: `${size!}px`,\n//   appliedHeight: `${size!}px`,\n//   headerHeightPercent: '14.65%',\n//   bodyHeightPercent: '85.35%',\n//   weekdaysRowBottomMarginPercent: '3.26%',\n//   weekdayColumnCellLeftMarginPercent: '2.17%',\n//   weekdayColumnCellWidthPercent: '12.736%',\n//   dayOfMonthViewHeightPercent: '82.179%',\n//   weekdaysRowHeightPercent: '14.001%',\n//   dayOfMonthRowHeightPercent: '16.664%',\n//   dayOfMonthColumnWidthPercent: '14.286%',\n//   monthRowHeightPercent: '24.9%',\n//   monthColumnWidthPercent: '33.33%',\n//   yearRowHeightPercent: '24.9%',\n//   yearColumnWidthPercent: '20%',\n// });\n\nconst getStyles: (size: number, fontSize: number) => CSSProps = (size, fontSize) => ({\n  root: {\n    arc: {\n      width: `${size!}px`,\n      height: `${size!}px`,\n      fontSize: `${fontSize}px`,\n      display: 'flex',\n      alignItems: 'flex-start',\n      flexDirection: 'column',\n      boxSizing: 'border-box',\n    },\n    arc_view: { height: '85.35%', width: '100%' },\n    'arc_view-months': { height: '100%' },\n    'arc_view-years': { height: '100%' },\n    arc_header: { height: '14.65%', padding: '2.50%', display: 'flex', alignTtems: 'center', width: '100%' },\n  },\n  weekdaysRow: {\n    arc_view_weekdays: {\n      height: '14.001%',\n      margin: '0 0 3.26% 0',\n      padding: 0,\n      display: 'flex',\n      width: '100%',\n      listStyle: 'none',\n    },\n    arc_view_weekdays_cell: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%',\n      flexBasis: '14.286%',\n      maxWidth: '14.286%',\n    },\n    arc_view_weekdays_cell_value: {\n      width: '65.95%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  },\n  dayOfMonth: {\n    'arc_view-days-of-month': {\n      height: '82.179%',\n    },\n    arc_view_row: { height: '16.664%', display: 'flex', width: '100%', alignItems: 'center' },\n    arc_view_cell: {\n      flexBasis: '14.286%',\n      maxWidth: '14.286%',\n      height: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    arc_view_cell_value: {\n      width: '65.95%',\n      height: '80.5%',\n    },\n    arc_view_cell_value_button: {\n      width: '100%',\n      height: '100%',\n    },\n  },\n  months: {\n    arc_view_row: { height: '24.9%', display: 'flex', width: '100%' },\n    arc_view_cell: {\n      flexBasis: '33.33%',\n      maxWidth: '33.33%',\n      height: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    arc_view_cell_value_button: {\n      width: '78px',\n      height: '28px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  },\n  years: {\n    arc_view_row: { height: '24.9%', display: 'flex', width: '100%' },\n    arc_view_cell: { width: '20%', height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' },\n    arc_view_cell_value_button: {\n      width: '48px',\n      height: '26px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  },\n  header: {\n    arc_header_nav: { width: '10.14%', height: '100%', flex: '0 0 auto' },\n    arch_header_label: {\n      width: '65.21%',\n      height: '100%',\n      margin: '0 4.34%',\n      flex: '1 1 auto',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  },\n});\n\n// Add an option to freeze ui if date is invalid\n// Add a isEditable option\n// Change is in range to could be in range as a class rather than hover\n// dont show range hover on diabalbed\n\nfunction Calendar({\n  value,\n  isMultiSelector,\n  className = '',\n  isRangeSelector,\n  useDarkMode = false,\n  weekends,\n  highlights = [],\n  rangeStart: rangeStartValue,\n  initialViewDate,\n  rangeEnd: rangeEndValue,\n  startOfWeek = 1,\n  maxAllowedDate,\n  skipDisabledDatesInRange = false,\n  minAllowedDate,\n  fixedRange,\n  isDisabled,\n  onChange,\n  lockView = false,\n  separator = '-',\n  format = 'DD-MM-YYYY',\n  disableFuture = false,\n  size = 276,\n  fontSize = 16,\n  disablePast = false,\n  disableToday = false,\n}: Props) {\n  const styles = useMemo(() => getStyles(size, fontSize), [size, fontSize]);\n\n  const [today] = useState(new Date());\n\n  const [isRangeSelectorView] = useState(!!isRangeSelector);\n\n  const [isMultiSelectorView] = useState(!isRangeSelectorView && !!isMultiSelector);\n\n  const [isFixedRangeView] = useState(\n    isRangeSelectorView && typeof fixedRange === 'number' && fixedRange > 0 ? true : false\n  );\n\n  const [isNormalView] = useState(!isRangeSelectorView && !isMultiSelectorView);\n\n  // is range select mode on\n  const [isRangeSelectModeOn, setIsRangeSelectModeOn] = useState(false);\n\n  if (isNormalView && Array.isArray(value)) {\n    throw new Error('`value` should an instance of the Date class. Provided value is an Array.');\n  }\n\n  const [fixedRangeLength] = useState(isFixedRangeView ? (fixedRange as number) : 1);\n\n  // start day of the week\n  const [startOfTheWeek] = useState(startOfWeek);\n\n  const [weekendIndexes] = useState(() => {\n    return Array.isArray(weekends) && (weekends.every((num) => typeof num === 'number') || weekends.length === 0)\n      ? weekends\n      : getWeekendInfo(startOfTheWeek);\n  });\n\n  // selected single date\n  const [selectedDate, setSelectedDate] = useState(() => {\n    if (isNormalView && isValid(value as Date)) {\n      const year = (value as Date).getFullYear();\n      const month = (value as Date).getMonth();\n      const dateOfMonth = (value as Date).getDate();\n      return new Date(year, month, dateOfMonth);\n    } else {\n      return undefined;\n    }\n  });\n\n  // selected multi dates\n  const [selectedMultiDates, setSelectedMultiDates] = useState<Record<string, Date | undefined>>(() => {\n    if (isMultiSelectorView && Array.isArray(value) && value.every(isValid)) {\n      return value.reduce((acc, currDate) => {\n        if (isValid(currDate)) {\n          acc[toString(currDate)] = currDate;\n        }\n        return acc;\n      }, {} as Record<string, Date | undefined>);\n    } else {\n      return {} as Record<string, Date | undefined>;\n    }\n  });\n\n  // selected range start date\n  const [selectedRangeStart, setSelectedRangeStart] = useState(() => {\n    if (isRangeSelectorView && isValid(rangeStartValue)) {\n      const year = rangeStartValue.getFullYear();\n      const month = rangeStartValue.getMonth();\n      const date = rangeStartValue.getDate();\n      return new Date(year, month, date);\n    } else {\n      return undefined;\n    }\n  });\n\n  const [selectedRangeEnd, setSelectedRangeEnd] = useState(() => {\n    if (\n      isRangeSelectorView &&\n      selectedRangeStart &&\n      isValid(rangeEndValue) &&\n      isBefore(rangeEndValue, selectedRangeStart)\n    ) {\n      const year = rangeEndValue.getFullYear();\n      const month = rangeEndValue.getMonth();\n      const date = rangeEndValue.getDate();\n      return new Date(year, month, date);\n    } else {\n      // TODO read from user's value prop\n      return undefined;\n    }\n  });\n\n  const [newSelectedRangeStart, setNewSelectedRangeStart] = useState<Date | undefined>(selectedRangeStart);\n\n  const [newSelectedRangeEnd, setNewSelectedRangeEnd] = useState<Date | undefined>(selectedRangeEnd);\n\n  // View States\n  const [view, setView] = useState<'years' | 'months' | 'month_dates'>('month_dates');\n\n  const [monthInView, setMonthInView] = useState<MonthIndices>(\n    (isValid(initialViewDate)\n      ? initialViewDate.getMonth()\n      : isNormalView && isValid(value as Date)\n      ? (value as Date).getMonth()\n      : isRangeSelectorView && selectedRangeStart\n      ? selectedRangeStart.getMonth()\n      : isMultiSelectorView && Array.isArray(value) && isValid(value[0])\n      ? value[0].getMonth()\n      : today.getMonth()) as MonthIndices\n  );\n\n  const [yearInView, setYearInView] = useState(\n    isValid(initialViewDate)\n      ? initialViewDate.getFullYear()\n      : isNormalView && isValid(value as Date)\n      ? (value as Date).getFullYear()\n      : isRangeSelectorView && selectedRangeStart\n      ? selectedRangeStart.getFullYear()\n      : isMultiSelectorView && Array.isArray(value) && isValid(value[0])\n      ? value[0].getFullYear()\n      : today.getFullYear()\n  );\n\n  const changeMonthInView = useCallback(\n    (month: MonthIndices) => {\n      !lockView && setMonthInView(month);\n    },\n    [lockView, setMonthInView]\n  );\n\n  const changeYearInView = useCallback(\n    (year: number) => {\n      !lockView && setYearInView(year);\n    },\n    [lockView, setYearInView]\n  );\n\n  const changeView = useCallback(\n    (view: 'years' | 'months' | 'month_dates') => {\n      !lockView && setView(view);\n    },\n    [lockView, setView]\n  );\n\n  const [startingYearForCurrRange, setStartingYearForCurrRange] = useState(getStartOfRangeForAYear(yearInView));\n\n  useEffect(() => {\n    setStartingYearForCurrRange(getStartOfRangeForAYear(yearInView));\n  }, [yearInView, setStartingYearForCurrRange]);\n\n  // 1 - 20, 21 - 40\n  const [yearMatrixRangeStart, yearMatrixRangeEnd] = useMemo(() => {\n    return getYearRangeLimits(startingYearForCurrRange);\n  }, [startingYearForCurrRange]);\n\n  // callback handlers\n  const onPrevClick = useCallback(\n    (e) => {\n      if (view === 'month_dates') {\n        const isPrevMonthFromLastYear = monthInView === 0;\n        if (isPrevMonthFromLastYear) {\n          setYearInView(getPreviousYear(yearInView));\n        }\n        changeMonthInView(getPreviousMonth(monthInView));\n      }\n      if (view === 'years') {\n        setStartingYearForCurrRange(getPreviousRangeStartingYear(startingYearForCurrRange));\n      }\n      if (view === 'months') {\n        changeYearInView(yearInView !== 1 ? yearInView - 1 : 1);\n      }\n    },\n    [\n      changeMonthInView,\n      monthInView,\n      changeYearInView,\n      yearInView,\n      view,\n      setStartingYearForCurrRange,\n      startingYearForCurrRange,\n    ]\n  );\n\n  const onNextClick = useCallback(\n    (e) => {\n      if (view === 'month_dates') {\n        const isCurrentMonthLast = monthInView === 11;\n        if (isCurrentMonthLast) {\n          changeYearInView(getNextYear(yearInView));\n        }\n        changeMonthInView(getNextMonth(monthInView));\n      }\n      if (view === 'years') {\n        setStartingYearForCurrRange(getNextRangeStartingYear(startingYearForCurrRange));\n      }\n\n      if (view === 'months') {\n        changeYearInView(getNextYear(yearInView));\n      }\n    },\n    [\n      changeMonthInView,\n      monthInView,\n      changeYearInView,\n      yearInView,\n      view,\n      setStartingYearForCurrRange,\n      startingYearForCurrRange,\n    ]\n  );\n\n  const computedClass = useMemo(\n    () =>\n      typeof className === 'string'\n        ? `arc ${useDarkMode ? 'dark' : ''} ` + className\n        : `arc ${useDarkMode ? 'dark' : ''}`,\n    [className, useDarkMode]\n  );\n\n  // max allowed Date\n  const [maxDate] = useState(() => {\n    return isValid(maxAllowedDate) ? maxAllowedDate : today;\n  });\n\n  // min allowed Date\n  const [minDate] = useState(() => {\n    return isValid(minAllowedDate) ? minAllowedDate : today;\n  });\n\n  const [applyMaxConstraint] = useState(() => {\n    return isValid(maxAllowedDate)\n      ? isValid(minAllowedDate)\n        ? isBefore(maxAllowedDate, minAllowedDate)\n        : true\n      : false;\n  });\n\n  const [applyminConstraint] = useState(() => {\n    return isValid(minAllowedDate)\n      ? isValid(maxAllowedDate)\n        ? isBefore(maxAllowedDate, minAllowedDate)\n        : true\n      : false;\n  });\n\n  const checkDisabledForADate = checkIfDateIsDisabledHOF({\n    disablePast,\n    disableToday,\n    disableFuture,\n    customDisabledCheck: isDisabled,\n    maxDate,\n    minDate,\n    applyMax: applyMaxConstraint,\n    applyMin: applyminConstraint,\n  });\n\n  return (\n    <section style={styles.root.arc} className={computedClass}>\n      <Header\n        layoutCalcs={styles}\n        onClickPrev={onPrevClick}\n        onClickNext={onNextClick}\n        onChangeViewType={changeView}\n        viewType={view}\n        viewingMonth={monthInView}\n        viewingYear={yearInView}\n        yearMatrixStart={yearMatrixRangeStart}\n        yearMatrixEnd={yearMatrixRangeEnd}\n      />\n      <main style={styles.root.arc_view} className='arc_view'>\n        {view === 'months' && (\n          <MonthSelector layoutCalcs={styles} onChangeViewType={changeView} onChangeViewingMonth={changeMonthInView} />\n        )}\n        {view === 'years' && (\n          <YearSelector\n            layoutCalcs={styles}\n            onChangeViewType={changeView}\n            onChangeViewingYear={changeYearInView}\n            yearMatrixStart={yearMatrixRangeStart}\n            yearMatrixEnd={yearMatrixRangeEnd}\n          />\n        )}\n        {view === 'month_dates' && (\n          <>\n            <WeekDaysRow layoutCalcs={styles} weekStartIndex={startOfTheWeek} weekendIndices={weekendIndexes} />\n            <DayOfMonthSelector\n              isRangeSelectModeOn={isRangeSelectModeOn}\n              setIsRangeSelectModeOn={setIsRangeSelectModeOn}\n              layoutCalcs={styles}\n              skipDisabledDatesInRange={!!skipDisabledDatesInRange}\n              selectedDate={selectedDate}\n              selectedRangeStart={selectedRangeStart}\n              selectedRangeEnd={selectedRangeEnd}\n              lockView={!!lockView}\n              newSelectedRangeStart={newSelectedRangeStart}\n              weekStartIndex={startOfTheWeek}\n              onChangeViewingYear={changeYearInView}\n              onChangeViewingMonth={changeMonthInView}\n              onChangenSelectedMultiDates={setSelectedMultiDates}\n              onChangenNewSelectedRangeEnd={setNewSelectedRangeEnd}\n              onChangenNewSelectedRangeStart={setNewSelectedRangeStart}\n              onChangenSelectedRangeEnd={setSelectedRangeEnd}\n              onChangenSelectedRangeStart={setSelectedRangeStart}\n              onChangenSelectedDate={setSelectedDate}\n              newSelectedRangeEnd={newSelectedRangeEnd}\n              isRangeSelectorView={isRangeSelectorView}\n              fixedRangeLength={fixedRangeLength}\n              isFixedRangeView={isFixedRangeView}\n              isDisabled={checkDisabledForADate}\n              selectedMultiDates={selectedMultiDates}\n              isMultiSelectorView={isMultiSelectorView}\n              viewingMonth={monthInView}\n              format={format}\n              today={today}\n              maxAllowedDate={maxAllowedDate}\n              minAllowedDate={minAllowedDate}\n              weekendIndices={weekendIndexes}\n              onChange={onChange}\n              viewingYear={yearInView}\n              disableFuture={disableFuture}\n              disablePast={disablePast}\n              separator={separator}\n              highlights={highlights}\n              disableToday={disableToday}\n            />\n          </>\n        )}\n      </main>\n    </section>\n  );\n}\n\nexport default Calendar;\n\nexport interface CSSProps {\n  root: {\n    arc: CSSProperties;\n    arc_view: CSSProperties;\n    arc_header: CSSProperties;\n    'arc_view-months': CSSProperties;\n    'arc_view-years': CSSProperties;\n  };\n  weekdaysRow: {\n    arc_view_weekdays: CSSProperties;\n    arc_view_weekdays_cell: CSSProperties;\n    arc_view_weekdays_cell_value: CSSProperties;\n  };\n  dayOfMonth: {\n    'arc_view-days-of-month': CSSProperties;\n    arc_view_row: CSSProperties;\n    arc_view_cell: CSSProperties;\n    arc_view_cell_value: CSSProperties;\n    arc_view_cell_value_button: CSSProperties;\n  };\n  months: {\n    arc_view_row: CSSProperties;\n    arc_view_cell: CSSProperties;\n    arc_view_cell_value_button: CSSProperties;\n  };\n  years: {\n    arc_view_row: CSSProperties;\n    arc_view_cell: CSSProperties;\n    arc_view_cell_value_button: CSSProperties;\n  };\n  header: {\n    arc_header_nav: CSSProperties;\n    arch_header_label: CSSProperties;\n  };\n}\n","import React, { useCallback, useState } from 'react';\nimport ReactJson from 'react-json-view';\n\nimport Calendar from './awesome-react-calendar/calendar';\n\nimport './App.css';\nimport { Popover } from 'react-tiny-popover';\n\nfunction App() {\n  const [isPopoverOpen, setIsPopoverOpen] = useState<boolean>(false);\n  const [one, setOne] = useState<object>({});\n\n  const onChangeone = useCallback(\n    (value) => {\n      setOne(value);\n    },\n    [setOne]\n  );\n\n  const [two, setTwo] = useState<object>({});\n\n  const onChangetwo = useCallback(\n    (value) => {\n      setTwo(value);\n    },\n    [setTwo]\n  );\n\n  const [three, setThree] = useState<object>({});\n\n  const onChangethree = useCallback(\n    (value) => {\n      setThree(value);\n    },\n    [setThree]\n  );\n\n  const [four, setFour] = useState<object>({});\n\n  const onChangefour = useCallback(\n    (value) => {\n      setFour(value);\n    },\n    [setFour]\n  );\n\n  const [five, setFive] = useState<object>({});\n\n  const onChangefive = useCallback(\n    (value) => {\n      setFive(value);\n    },\n    [setFive]\n  );\n\n  const [six, setSix] = useState<object>({});\n\n  const onChangesix = useCallback(\n    (value) => {\n      setSix(value);\n    },\n    [setSix]\n  );\n\n  const [seven, setSeven] = useState<object>({});\n\n  const onChangeseven = useCallback(\n    (value) => {\n      setSeven(value);\n    },\n    [setSeven]\n  );\n\n  const [eight, setEight] = useState<object>({});\n\n  const onChangeeight = useCallback(\n    (value) => {\n      setEight(value);\n    },\n    [setEight]\n  );\n\n  const [nine, setNine] = useState<object>({});\n\n  const onChangenine = useCallback(\n    (value) => {\n      setNine(value);\n    },\n    [setNine]\n  );\n\n  const [ten, setTen] = useState<object>({});\n\n  const onChangeTen = useCallback(\n    (value) => {\n      setTen(value);\n    },\n    [setTen]\n  );\n\n  const [eleven, setEleven] = useState<object>({});\n\n  const onChangeEleven = useCallback(\n    (value) => {\n      setEleven(value);\n    },\n    [setEleven]\n  );\n\n  const [tweleve, setTweleve] = useState<object>({});\n\n  const onChangeTweleve = useCallback(\n    (value) => {\n      setTweleve(value);\n    },\n    [setTweleve]\n  );\n\n  const [thirteen, setThirteen] = useState<object>({});\n\n  const onChangeThirteen = useCallback(\n    (value) => {\n      setThirteen(value);\n    },\n    [setThirteen]\n  );\n\n  const [fourteen, setFourteen] = useState<object>({});\n\n  const onChangeFourteen = useCallback(\n    (value) => {\n      setFourteen(value);\n    },\n    [setFourteen]\n  );\n\n  const [fiveteen, setFiveteen] = useState<object>({});\n\n  const onChangeFiveteen = useCallback(\n    (value) => {\n      setFiveteen(value);\n    },\n    [setFiveteen]\n  );\n\n  const maxDate = new Date(2021, 7, 28);\n  const minDate = new Date(2021, 7, 4);\n  return (\n    <div className='demo'>\n      <div>\n        <div>\n          <p>Default</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar onChange={onChangenine} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={nine} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div className='desc'>\n          <p>Multiple Dates View</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar\n              value={[new Date(2021, 6, 22), new Date(2021, 6, 25), new Date(2021, 6, 9)]}\n              isMultiSelector\n              disableToday\n              separator='/'\n              format='MM-DD-YYYY'\n              onChange={onChangeone}\n            />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={one} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Range Select View</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar\n              isRangeSelector\n              rangeStart={new Date(2021, 0, 8)}\n              rangeEnd={new Date(2021, 0, 9)}\n              separator='/'\n              format='MM-DD-YYYY'\n              onChange={onChangethree}\n              // startOfWeek={2}\n              value={new Date(2021, 1, 23)}\n            />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={three} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Range Select View With Min-Max Allowed Dates</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar\n              initialViewDate={new Date(2021, 7, 10)}\n              isRangeSelector\n              maxAllowedDate={maxDate}\n              minAllowedDate={minDate}\n              disableToday\n              separator='/'\n              format='MM-DD-YYYY'\n              onChange={onChangetwo}\n              // startOfWeek={2}\n            />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={two} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Fixed Range View (6 Days)</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar isRangeSelector fixedRange={6} onChange={onChangeThirteen} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={thirteen} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Highlight Custom Dates</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar\n              initialViewDate={new Date(2020, 5, 6)}\n              highlights={[new Date(2020, 5, 6), new Date(2020, 5, 12), new Date(2020, 5, 16), new Date(2020, 5, 24)]}\n              onChange={onChangeFourteen}\n            />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={fourteen} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can disable custom dates (here disabled if (date % 4 === 0))</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar\n              isDisabled={(date) => {\n                return date.getDate() % 4 === 0;\n              }}\n              onChange={onChangeFiveteen}\n            />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={fiveteen} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can enable skipping disabled dates when doing fixed range(5 here) selections</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar\n              isRangeSelector\n              fixedRange={5}\n              skipDisabledDatesInRange\n              isDisabled={(date) => {\n                return date.getDate() % 3 === 0;\n              }}\n              onChange={onChangeseven}\n            />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={seven} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can change start day of the week (Wed here)</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar startOfWeek={3} onChange={onChangefour} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={four} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can specify weekend days (Fri, Sat, Sun here)</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar weekends={[4, 5, 6]} onChange={onChangefive} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={five} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can disable highlighting Weekends</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar weekends={[]} onChange={onChangefive} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={five} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can set if past,today,future is disabled by simple props</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar disablePast onChange={onChangesix} />\n          </div>\n          <div className='calendar'>\n            <Calendar\n              disableToday\n              value={new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() + 1)}\n              onChange={onChangeseven}\n            />\n          </div>\n          <div className='calendar'>\n            <Calendar disableFuture onChange={onChangeeight} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can lock the calendar to a specific month/year</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar lockView onChange={onChangesix} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={six} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can set output date format (YYYY-DD-MM here)</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar format='YYYY-DD-MM' onChange={onChangeTen} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={ten} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can set output date separator (# here)</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar separator='#' onChange={onChangeEleven} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={eleven} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can be rendered inside a popover</p>\n        </div>\n        <div>\n          <div className='input'>\n            <input value={(ten as any).formatted as string} />\n            <Popover\n              isOpen={isPopoverOpen}\n              padding={6}\n              positions={['bottom', 'top', 'left', 'right']}\n              content={\n                <Calendar\n                  value={(ten as any).value as Date}\n                  onChange={(value) => {\n                    setTen(value);\n                    setIsPopoverOpen(false);\n                  }}\n                />\n              }>\n              <div onClick={() => setIsPopoverOpen(!isPopoverOpen)}>🗓</div>\n            </Popover>\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can Set Initial Month&Date View To Show (Sept, 2020 here)</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar initialViewDate={new Date(2020, 8, 9)} onChange={onChangeTweleve} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={tweleve} />\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div>\n          <p>Easy to theme using CSS variables</p>\n        </div>\n        <div>\n          <div>\n            <Calendar className='green' isRangeSelector />\n          </div>\n          <div>\n            <Calendar className='brown' />\n          </div>\n          <div>\n            <Calendar className='violet' isRangeSelector fixedRange={4} />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>In-built and customizable dark mode</p>\n        </div>\n        <div>\n          <div>\n            <Calendar useDarkMode isRangeSelector />\n          </div>\n          <div>\n            <Calendar useDarkMode />\n          </div>\n        </div>\n      </div>\n      <div>\n        <div>\n          <p>Can easily adjust scale</p>\n        </div>\n        <div>\n          <div>\n            <Calendar fontSize={20} size={600} isRangeSelector />\n          </div>\n          <div>\n            <Calendar fontSize={17} size={400} isMultiSelector />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}