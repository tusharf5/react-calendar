{"version":3,"sources":["awesome-react-calendar/constants.ts","awesome-react-calendar/date-utils.ts","awesome-react-calendar/calendar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NATIVE_INDEX_TO_LABEL_WEEKDAY_MAP","0","1","2","3","4","5","6","NATIVE_INDEX_TO_LABEL_MONTHS_MAP","7","8","9","10","11","addDays","date","numberOfDaysToAdd","daysLeftToAdd","newDate","dayOfMonth","getDate","remainingDaysInMonth","getNumberOfDaysInAMonth","getFullYear","getMonth","daysThatCanBeAddedInThisMonth","Date","toString","isBefore","toCheckDate","isValid","isNaN","getTime","isEqual","first","second","isPartOfRange","rangeStart","rangeEnd","isALeapYear","year","month","getNativeWeekDayIndexFromAStartDayInfluencedIndex","weekdayAsPerChangedIndex","startOfTheWeek","diversion","getPreviousMonth","getNextMonth","getPreviousYear","getNextYear","getStartOfRangeForAYear","Number","toFixed","getDaysOfMonthViewMetrix","params","isRangeSelectModeOn","isRangeView","selectedDate","selectedRangeStart","selectedRangeEnd","newSelectedRangeStart","newSelectedRangeEnd","isSelectMultiDate","selectedMultiDates","weekendIndexes","yearInView","monthInView","disableFuture","disablePast","disableToday","maxDate","minDate","applyMax","applyMin","isDisabled","matrix","currentMonthDatesStartIndex","setDate","setMonth","setFullYear","weekdayAsPerNativeIndex","getInfluencedWeekDayIndexAsPerAStartDay","getDay","getInfluencedWeekDayIndexOnFirstDateOfMonth","weekends","checkDisabledForADate","customDisabledCheck","currentYear","currentMonth","weekday","checkIfDateIsDisabledHOF","todaysDate","todaysMonth","todaysYear","totalDaysInCurrentMonth","isPrevMonthFromLastYear","isCurrentMonthLast","totalDaysInPrevMonth","row","weekColumn","currMonth","currYear","currDate","push","activeMonthInView","isInRange","isRangeStart","isRangeEnd","isWeekend","find","c","dayOfWeek","isToday","isFirstRow","isLastRow","isFirsColumn","isLastColumn","isSelected","length","Calendar","dates","selectRange","startdate","initialViewDate","endDate","startOfWeek","maxAllowedDate","minAllowedDate","selectMultiDates","fixedRange","onChange","separator","format","useState","isFixedRange","setIsRangeSelectModeOn","fixedRangeLength","applyMaxConstraint","applyminConstraint","Array","isArray","every","num","getWeekendInfo","view","setView","setMonthInView","setYearInView","reduce","acc","setSelectedMultiDates","today","dateOfMonth","setSelectedDate","setSelectedRangeStart","setSelectedRangeEnd","setNewSelectedRangeStart","setNewSelectedRangeEnd","startingYearForCurrRange","setStartingYearForCurrRange","useMemo","rangeStartYear","yearMatrixRangeStart","yearMatrixRangeEnd","WEEK_DAYS","Object","keys","slice","concat","weekdayIndex","index","getWeekDaysIndexToLabelMapForAStartOfTheWeek","formatter","partsMap","YYYY","MM","DD","parts","split","Error","part","string","forEach","validateAndReturnDateFormatter","useEffect","yearsViewMatrix","selectedYear","years","from","v","isCurrentYear","isSelectedYear","getYearsViewMetrix","monthsViewMatrix","selectedMonth","months","k","isCurrentMonth","isSelectedMonth","getMonthViewMetrix","daysOfMMonthViewMatrix","onPrevClick","useCallback","e","onNextClick","onDateClicked","cell","clickedDate","previouslySelectedDate","startDate","value","formatted","undefined","stringkey","newselectedMultiDates","filter","dk","map","className","onClick","weekDay","weekend","role","onMouseEnter","disabled","tabIndex","App","one","setOne","onChangeone","two","setTwo","onChangetwo","three","setThree","onChangethree","four","setFour","onChangefour","five","setFive","onChangefive","six","setSix","onChangesix","seven","setSeven","onChangeseven","eight","setEight","onChangeeight","nine","setNine","onChangenine","ten","setTen","onChangeTen","eleven","setEleven","onChangeEleven","tweleve","setTweleve","onChangeTweleve","thirteen","setThirteen","onChangeThirteen","name","enableClipboard","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAKaA,EAAoE,CAC/EC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,MAGQC,EAAiE,CAC5EP,EAAG,UACHC,EAAG,WACHC,EAAG,QACHC,EAAG,QACHC,EAAG,MACHC,EAAG,OACHC,EAAG,OACHE,EAAG,SACHC,EAAG,YACHC,EAAG,UACHC,GAAI,WACJC,GAAI,YCXC,SAASC,EAAQC,EAAYC,GAIlC,IAHA,IAAIC,EAAgBD,EAChBE,EAAUH,EAEPE,EAAgB,GAAG,CACxB,IAAME,EAAaD,EAAQE,UAErBC,EADmBC,EAAwBJ,EAAQK,cAAeL,EAAQM,YAChCL,EAC5CM,EAAgC,EAEhCJ,GAAwBJ,GAC1BQ,EAAgCR,EAChCA,EAAgB,EAChBC,EAAU,IAAIQ,KAAKR,EAAQK,cAAeL,EAAQM,WAAYN,EAAQE,UAAYK,KAElFA,EAAgCJ,EAChCJ,GAAgCI,EACL,KAAvBH,EAAQM,YACVN,EAAU,IAAIQ,KAAKR,EAAQK,cAAgB,EAAG,EAAG,GACjDN,GAAgC,IAEhCC,EAAU,IAAIQ,KAAKR,EAAQK,cAAeL,EAAQM,WAAa,EAAG,GAClEP,GAAgC,IAKtC,OAAOC,EAMF,SAASS,EAASZ,GACvB,MAAM,GAAN,OAAUA,EAAKQ,eAAf,OAA+BR,EAAKS,YAApC,OAAiDT,EAAKK,WAMjD,SAASQ,EAASb,EAAYc,GACnC,GAAIA,EAAYN,cAAgBR,EAAKQ,cACnC,OAAO,EAGT,GAAIM,EAAYN,gBAAkBR,EAAKQ,cAAe,CACpD,GAAIM,EAAYL,WAAaT,EAAKS,WAChC,OAAO,EAGT,GAAIK,EAAYL,aAAeT,EAAKS,YAC9BK,EAAYT,UAAYL,EAAKK,UAC/B,OAAO,EAKb,OAAO,EAMF,SAASU,EAAQf,GACtB,MAAuB,qBAATA,GAAiC,OAATA,IAAkBgB,MAAM,IAAIL,KAAKX,GAAciB,WAMhF,SAASC,EAAQC,EAAaC,GACnC,OACED,EAAMX,gBAAkBY,EAAOZ,eAC/BW,EAAMV,aAAeW,EAAOX,YAC5BU,EAAMd,YAAce,EAAOf,UAOxB,SAASgB,EAAcC,EAAkBC,EAAgBvB,GAE9D,OAAIsB,EAAWd,eAAiBR,EAAKQ,eAAiBR,EAAKQ,eAAiBe,EAASf,gBAE/Ec,EAAWd,cAAgBR,EAAKQ,eAAiBR,EAAKQ,cAAgBe,EAASf,gBAK/Ec,EAAWd,gBAAkBe,EAASf,cACpCc,EAAWb,YAAcT,EAAKS,YAAcT,EAAKS,YAAcc,EAASd,aAEtEa,EAAWb,WAAaT,EAAKS,YAAcT,EAAKS,WAAac,EAASd,aAKtEa,EAAWb,aAAec,EAASd,WAEnCa,EAAWjB,WAAaL,EAAKK,WAC7BL,EAAKK,WAAakB,EAASlB,WAC3BL,EAAKS,aAAec,EAASd,WAQ7Ba,EAAWb,aAAeT,EAAKS,WAC7Ba,EAAWjB,WAAaL,EAAKK,UAO/BkB,EAASd,aAAeT,EAAKS,YAC3BT,EAAKK,WAAakB,EAASlB,YAYjCiB,EAAWd,gBAAkBR,EAAKQ,cAEhCR,EAAKS,WAAaa,EAAWb,YAK7BT,EAAKS,aAAea,EAAWb,YAE7BT,EAAKK,WAAaiB,EAAWjB,UASjCkB,EAASf,gBAAkBR,EAAKQ,gBAE9BR,EAAKS,WAAac,EAASd,YAK3BT,EAAKS,aAAec,EAASd,YAE3BT,EAAKK,WAAakB,EAASlB,aAgBhC,SAASmB,EAAYC,GAC1B,OAAQA,EAAO,IAAM,GAAKA,EAAO,MAAQ,GAAMA,EAAO,MAAQ,EAQzD,SAASlB,EAAwBkB,EAAcC,GAgBpD,MAf0C,CACxCxC,EAAG,GACHC,EAAGqC,EAAYC,GAAQ,GAAK,GAC5BrC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHE,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,GAAI,GACJC,GAAI,IAGK4B,GAmFb,SAASC,EACPC,EACAC,GAEA,IAAMC,EAAY,EAAID,EACtB,OACED,GAA4BE,EACxBF,EAA2BC,EAC3BD,EAA2BE,EAAY,EA4CxC,SAASC,EAAiBL,GAC/B,OAAiB,IAAVA,EAAc,GAAOA,EAAQ,EAG/B,SAASM,EAAaN,GAC3B,OAAiB,KAAVA,EAAe,EAAMA,EAAQ,EAG/B,SAASO,EAAgBR,GAC9B,OAAgB,IAATA,EAAa,EAAIA,EAAO,EAG1B,SAASS,EAAYT,GAC1B,OAAOA,EAAO,EAOT,SAASU,EAAwBV,GAGtC,OAAIA,EAAO,KAAO,EACT,IAAMA,EAAO,GAAK,GAAK,EAGzB,GAAKW,QAAQX,EAAO,IAAIY,QAAQ,IAAM,EA4IxC,SAASC,EAAyBC,GAmEvC,IAnEyG,IAEvGC,EAqBED,EArBFC,oBACAC,EAoBEF,EApBFE,YACAC,EAmBEH,EAnBFG,aACAC,EAkBEJ,EAlBFI,mBACAC,EAiBEL,EAjBFK,iBACAC,EAgBEN,EAhBFM,sBACAC,EAeEP,EAfFO,oBACAC,EAcER,EAdFQ,kBACAC,EAaET,EAbFS,mBACAC,EAYEV,EAZFU,eACAC,EAWEX,EAXFW,WACAC,EAUEZ,EAVFY,YACAtB,EASEU,EATFV,eAdsG,EAuBpGU,EARFa,qBAfsG,WAuBpGb,EAPFc,mBAhBsG,WAuBpGd,EANFe,oBAjBsG,SAkBtGC,EAKEhB,EALFgB,QACAC,EAIEjB,EAJFiB,QACAC,EAGElB,EAHFkB,SACAC,EAEEnB,EAFFmB,SACAC,EACEpB,EADFoB,WAGIC,EAAkC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAEvDC,EApOR,SACEpC,EACAC,EACAG,GAEA,IAAM7B,EAAO,IAAIW,KAIjB,OAHAX,EAAK8D,QAAQ,GACb9D,EAAK+D,SAASrC,GACd1B,EAAKgE,YAAYvC,GAzEnB,SAAiDwC,GAAsE,IAArCpC,EAAoC,uDAAnB,EACjG,OACEoC,GAA2BpC,EACvBoC,EAA0BpC,EAC1B,EAAIA,EAAiB,EAAIoC,EAsExBC,CAAwClE,EAAKmE,SAAUtC,GA2N1BuC,CAClClB,EACAC,EACAtB,GAGIwC,EAAWpB,EAEXqB,EAtGR,SAAkC/B,GAAyC,IACjEc,EACNd,EADMc,YAAaC,EACnBf,EADmBe,aAAcF,EACjCb,EADiCa,cAAemB,EAChDhC,EADgDgC,oBAAqBhB,EACrEhB,EADqEgB,QAASC,EAC9EjB,EAD8EiB,QAASC,EACvFlB,EADuFkB,SAAUC,EACjGnB,EADiGmB,SAG7F1D,EAAO,IAAIW,KACXP,EAAaJ,EAAKK,UAClBmE,EAAcxE,EAAKQ,cACnBiE,EAAezE,EAAKS,WAE1B,OAAO,SAA+BgB,EAAcC,EAAqB1B,EAAc0E,GACrF,GAAIrB,EAAa,CACf,GAAI5B,EAAO+C,EACT,OAAO,EAGT,GAAI/C,IAAS+C,GAAe9C,EAAQ+C,EAClC,OAAO,EAGT,GAAIhD,IAAS+C,GAAe9C,IAAU+C,GAAgBzE,EAAOI,EAC3D,OAAO,EAGX,GAAIkD,GACE7B,IAAS+C,GAAe9C,IAAU+C,GAAgBzE,IAASI,EAC7D,OAAO,EAGX,GAAIgD,EAAe,CACjB,GAAI3B,EAAO+C,EACT,OAAO,EAGT,GAAI/C,IAAS+C,GAAe9C,EAAQ+C,EAClC,OAAO,EAGT,GAAIhD,IAAS+C,GAAe9C,IAAU+C,GAAgBzE,EAAOI,EAC3D,OAAO,EAIX,SAAIqD,IACE5C,EAAS,IAAIF,KAAKc,EAAMC,EAAO1B,GAAOuD,QAKxCG,IACE7C,EAAS2C,EAAS,IAAI7C,KAAKc,EAAMC,EAAO1B,MAKX,oBAAxBuE,GACFA,EAAoB,CACzB9C,KAAMA,EACNC,MAAOA,EACPgD,QAASA,EACT1E,KAAMA,KA2CkB2E,CAAyB,CACrDtB,cACAC,eACAF,gBACAmB,oBAAqBZ,EACrBJ,UACAC,UACAC,WACAC,aAGIkB,GAAa,IAAIjE,MAAON,UACxBwE,GAAc,IAAIlE,MAAOF,WACzBqE,GAAa,IAAInE,MAAOH,cACxBuE,EAA0BxE,EAAwB2C,EAAYC,GAE9D6B,EAA0C,IAAhB7B,EAC1B8B,EAAqC,KAAhB9B,EAErB+B,EAAuB3E,EAC3ByE,EAA0B/C,EAAgBiB,GAAcA,EACxDnB,EAAiBoB,IAIfgC,EAAM,EACNC,EAA6B,EAMxBpF,EAHsBkF,GAAwBrB,EAA8B,GAG7C7D,GAAQkF,EAAsBlF,IAAQ,CACzD,IAAfoF,IACFA,EAAa,EACbD,KAEF,IAAME,EAAYtD,EAAiBoB,GAC7BmC,EAAWN,EAA0B/C,EAAgBiB,GAAcA,EAEnEqC,EAAW,IAAI5E,KAAK2E,EAAUD,EAAWrF,GAK/C4D,EAAOuB,GAAKK,KAAK,CACfxF,KAAMA,EACN0B,MAAO2D,EACPI,mBAAmB,EACnBC,YAAWjD,IACPD,KACEzB,EAAQ8B,KAA0B9B,EAAQ+B,MACxCjC,EAASiC,EAAqBD,GAC5BxB,EAAcwB,EAAuBC,EAAqByC,GAC1DlE,EAAcyB,EAAqBD,EAAuB0C,IAE9DlE,EAAcsB,EAAoBC,EAAkB2C,IAE1DI,eAAclD,IACVD,IACEzB,EAAQ8B,IACN3B,EAAQ2B,EAAuB0C,GAEjCrE,EAAQyB,EAAoB4C,IAElCK,aAAYnD,KAAeD,GAA8BtB,EAAQ0B,EAAkB2C,IACnF9D,KAAM6D,EACNO,UAA6D,kBAA3CxB,EAASyB,MAAK,SAACC,GAAD,OAAOA,IAAMX,KAC7CY,UAAWrE,EAAkDyD,EAAYvD,GACzEoE,QAASjG,IAAS4E,GAAcS,IAAcR,GAAeS,IAAaR,EAC1EoB,WAAoB,IAARf,EACZgB,UAAmB,IAARhB,EACXiB,aAA6B,IAAfhB,EACdiB,aAA6B,IAAfjB,EACdkB,WAAYvD,IACNC,EAAmBpC,EAAS2E,KAC9B9C,IAEA4C,IAAc3C,EAAajC,YAC3B6E,IAAa5C,EAAalC,eAC1BR,IAAS0C,EAAarC,WAE1BsD,WAAYW,EACVgB,EACAD,EACArF,EACA2B,EAAkDyD,EAAYvD,MAGlEuD,IAIF,IAAK,IAAIpF,EAAO,EAAGA,GAAQ+E,EAAyB/E,IAAQ,CACvC,IAAfoF,IACFA,EAAa,EACbD,KAEF,IAAME,EAAYlC,EACZmC,GAAWpC,EACX+C,GAAUjG,IAAS4E,GAAczB,IAAgB0B,GAAe3B,IAAe4B,EAE/ES,GAAW,IAAI5E,KAAK2E,GAAUD,EAAWrF,GAE/C4D,EAAOuB,GAAKK,KAAK,CACfxF,KAAMA,EACN0B,MAAO2D,EACPI,mBAAmB,EACnBC,YAAWjD,IACPD,KACEzB,EAAQ8B,KAA0B9B,EAAQ+B,MACxCjC,EAASiC,EAAqBD,GAC5BxB,EAAcwB,EAAuBC,EAAqByC,IAC1DlE,EAAcyB,EAAqBD,EAAuB0C,KAE9DlE,EAAcsB,EAAoBC,EAAkB2C,KAE1DI,eAAclD,IACVD,IACEzB,EAAQ8B,IACN3B,EAAQ2B,EAAuB0C,IAEjCrE,EAAQyB,EAAoB4C,KAElCK,aAAYnD,KAAeD,GAA8BtB,EAAQ0B,EAAkB2C,KACnF9D,KAAM6D,GACNU,UAAWrE,EAAkDyD,EAAYvD,GACzEgE,UAA6D,kBAA3CxB,EAASyB,MAAK,SAACC,GAAD,OAAOA,IAAMX,KAC7Ca,QAASA,GACTC,WAAoB,IAARf,EACZgB,UAAmB,IAARhB,EACXiB,aAA6B,IAAfhB,EACdiB,aAA6B,IAAfjB,EACdkB,WAAYvD,IACNC,EAAmBpC,EAAS2E,MAC9B9C,IAEA4C,IAAc3C,EAAajC,YAC3B6E,KAAa5C,EAAalC,eAC1BR,IAAS0C,EAAarC,WAC1BsD,WAAYW,EACVgB,GACAD,EACArF,EACA2B,EAAkDyD,EAAYvD,MAGlEuD,IAMF,IAHA,IAAIpF,GAAO,EAGJ4D,EAAO,GAAG2C,OAAS,GAAG,CACR,IAAfnB,IACFA,EAAa,EACbD,KAEF,IAAME,GAAYrD,EAAamB,GACzBmC,GAAWL,EAAqB/B,EAAa,EAAIA,EAEjDqC,GAAW,IAAI5E,KAAK2E,GAAUD,GAAWrF,IAE/C4D,EAAOuB,GAAKK,KAAK,CACfxF,KAAMA,GACN0B,MAAO2D,GACPI,mBAAmB,EACnBC,YAAWjD,IACPD,KACEzB,EAAQ8B,KAA0B9B,EAAQ+B,MACxCjC,EAASiC,EAAqBD,GAC5BxB,EAAcwB,EAAuBC,EAAqByC,IAC1DlE,EAAcyB,EAAqBD,EAAuB0C,KAE9DlE,EAAcsB,EAAoBC,EAAkB2C,KAE1DI,eAAclD,IACVD,IACEzB,EAAQ8B,IACN3B,EAAQ2B,EAAuB0C,IAEjCrE,EAAQyB,EAAoB4C,KAElCK,aAAYnD,KAAeD,GAA8BtB,EAAQ0B,EAAkB2C,KACnF9D,KAAM6D,GACNU,UAAWrE,EAAkDyD,EAAYvD,GACzEgE,UAA6D,kBAA3CxB,EAASyB,MAAK,SAACC,GAAD,OAAOA,IAAMX,KAC7Ca,QAASjG,KAAS4E,GAAcS,KAAcR,GAAeS,KAAaR,EAC1EoB,WAAoB,IAARf,EACZgB,UAAmB,IAARhB,EACXiB,aAA6B,IAAfhB,EACdiB,aAA6B,IAAfjB,EACdkB,WAAYvD,IACNC,EAAmBpC,EAAS2E,MAC9B9C,IAEA4C,KAAc3C,EAAajC,YAC3B6E,KAAa5C,EAAalC,eAC1BR,KAAS0C,EAAarC,WAC1BsD,WAAYW,EACVgB,GACAD,GACArF,GACA2B,EAAkDyD,EAAYvD,MAGlEuD,IACApF,KAGF,OAAO4D,E,WC/EM4C,MAziBf,YAoBW,IAnBTxG,EAmBQ,EAnBRA,KAmBQ,IAlBRyG,aAkBQ,MAlBA,GAkBA,EAjBRC,EAiBQ,EAjBRA,YACArC,EAgBQ,EAhBRA,SACAsC,EAeQ,EAfRA,UACAC,EAcQ,EAdRA,gBACAC,EAaQ,EAbRA,QAaQ,IAZRC,mBAYQ,MAZM,EAYN,EAXRC,EAWQ,EAXRA,eACAC,EAUQ,EAVRA,eACAC,EASQ,EATRA,iBACAC,EAQQ,EARRA,WACAvD,EAOQ,EAPRA,WACAwD,EAMQ,EANRA,SAMQ,IALRC,iBAKQ,MALI,IAKJ,MAJRC,cAIQ,MAJC,aAID,MAHRjE,qBAGQ,aAFRC,mBAEQ,aADRC,oBACQ,WAEoBgE,mBACE,mBAArBL,IAAmCP,GAAcO,GADnDlE,EAFC,sBAMeuE,oBACpBvE,IAAsB2D,GAAqC,kBAAfQ,GAA2BA,EAAa,GADhFK,EANC,sBAW8CD,oBAAS,GAXvD,mBAWD9E,EAXC,KAWoBgF,EAXpB,OAamBF,mBAASC,EAAgBL,EAAwB,GAArEO,EAbC,sBAgBiBH,mBAASR,GAA3BjF,GAhBC,uBAmBUyF,oBAAS,WACzB,OAAOvG,EAAQgG,GAAkBA,EAAiB,IAAIpG,QADjD4C,GAnBC,wBAsBqB+D,oBAAS,WACpC,QAAOvG,EAAQgG,MACXhG,EAAQiG,IACNnG,EAASkG,EAAgBC,OAH1BU,GAtBC,wBA+BUJ,oBAAS,WACzB,OAAOvG,EAAQiG,GAAkBA,EAAiB,IAAIrG,QADjD6C,GA/BC,wBAmCqB8D,oBAAS,WACpC,QAAOvG,EAAQiG,MACXjG,EAAQgG,IACNlG,EAASkG,EAAgBC,OAH1BW,GAnCC,wBA2CiBL,oBAAS,WAChC,OAAOM,MAAMC,QAAQxD,IAAaA,EAASyD,OAAM,SAACC,GAAD,MAAwB,kBAARA,KAC7D1D,EDyID,SAAwBxC,GAC7B,OAAuB,IAAnBA,EACK,CAAC,EAAG,GACiB,IAAnBA,EACF,CAAC,EAAG,GACiB,IAAnBA,EACF,CAAC,EAAG,GACiB,IAAnBA,EACF,CAAC,EAAG,GACiB,IAAnBA,EACF,CAAC,EAAG,GACiB,IAAnBA,EACF,CAAC,EAAG,GAEJ,CAAC,EAAG,GCtJPmG,CAAenG,OAHdoB,GA3CC,wBAkDgBqE,mBAA6C,eAlD7D,qBAkDDW,GAlDC,MAkDKC,GAlDL,SAmD8BZ,mBACnCvG,EAAQ6F,GACL,IAAIjG,KAAKiG,GAAiBnG,YACzBiG,GAAe3F,EAAQf,GACxB,IAAIW,KAAKX,GAAMS,YACf,IAAIE,MAAOF,YAxDT,qBAmDD0C,GAnDC,MAmDYgF,GAnDZ,SA0D4Bb,mBAClCvG,EAAQ6F,GACJ,IAAIjG,KAAKiG,GAAiBpG,eACzBkG,GAAe3F,EAAQf,GACxB,IAAIW,KAAKX,GAAMQ,eACf,IAAIG,MAAOH,eA/DT,qBA0DD0C,GA1DC,MA0DWkF,GA1DX,SAmE4Cd,mBAClDb,EAAM4B,QAAO,SAACC,EAAK/C,GAIjB,OAHIxE,EAAQwE,KACV+C,EAAI1H,EAAS2E,IAAaA,GAErB+C,IACN,KAzEG,qBAmEDtF,GAnEC,MAmEmBuF,GAnEnB,SA6EgCjB,oBAAS,WAC/C,IAAMkB,EAAQ,IAAI7H,KAClB,GAAII,EAAQf,GAAO,CACjB,IAAMyB,EAAOzB,EAAKQ,cACZkB,EAAQ1B,EAAKS,WACbgI,EAAczI,EAAKK,UACzB,OAAO,IAAIM,KAAKc,EAAMC,EAAO+G,GAE7B,OAAOD,KArFH,qBA6ED9F,GA7EC,MA6EagG,GA7Eb,SA0F4CpB,oBAAS,WAC3D,IAAMkB,EAAQ,IAAI7H,KAClB,GAAM+F,GAAe3F,EAAQ4F,GAAY,CACvC,IAAMlF,EAAOkF,EAAUnG,cACjBkB,EAAQiF,EAAUlG,WAClBT,EAAO2G,EAAUtG,UAEvB,OAAO,IAAIM,KAAKc,EAAMC,EAAO1B,GAE7B,OAAOwI,KAnGH,qBA0FD7F,GA1FC,MA0FmBgG,GA1FnB,SAuGwCrB,oBAAS,WACvD,IAAMkB,EAAQ,IAAI7H,KAElB,GAAM+F,GAAe3F,EAAQ8F,GAAU,CACrC,IAAMpF,EAAOoF,EAAQrG,cACfkB,EAAQmF,EAAQpG,WAChBT,EAAO6G,EAAQxG,UACrB,OAAO,IAAIM,KAAKc,EAAMC,EAAO1B,GACxB,OAAIuH,EACFxH,EAAQ4C,GAAoB8E,GAE5Be,KAlHH,qBAuGD5F,GAvGC,MAuGiBgG,GAvGjB,SAsHkDtB,oBAA2B,WACnF,OAAO3E,MAvHD,qBAsHDE,GAtHC,MAsHsBgG,GAtHtB,SA0H8CvB,oBAA2B,WAC/E,OAAO1E,MA3HD,qBA0HDE,GA1HC,MA0HoBgG,GA1HpB,SA8HwDxB,mBAASnF,EAAwBe,KA9HzF,qBA8HD6F,GA9HC,MA8HyBC,GA9HzB,SAiI2CC,mBAAQ,WACzD,MD+HK,CAD0BC,EC9HLH,GD+HJG,EAAiB,IADpC,IAA4BA,IC7H9B,CAACH,KAnII,qBAiIDI,GAjIC,MAiIqBC,GAjIrB,MAsIFC,GAAYJ,mBAAQ,WACxB,ODxDG,WAA2G,IAArDpH,EAAoD,uDAAnC,EAK5E,OAAOyH,OAAOC,KAAKtK,GAChBuK,MAAM3H,EAAgB,GACtB4H,OAAOH,OAAOC,KAAKtK,GAAmCuK,MAAM,EAAG3H,IAC/DwG,QAAO,SAACC,EAAKoB,EAAcC,GAG1B,OADArB,EAAIlG,OAAOuH,IAA4B1K,EAAkCmD,OAAOsH,IACzEpB,IACN,IC4CIsB,CAA6C/H,MACnD,CAACA,KAGEgI,GAAYZ,mBAAQ,WACxB,ODmIG,SAAwC5B,GAC7C,IAAMyC,EAAkD,CAAEC,MAAM,EAAMC,IAAI,EAAMC,IAAI,GAC9EC,EAAQ7C,EAAO8C,MAAM,KAC3B,GAAqB,IAAjBD,EAAM3D,OACR,MAAM,IAAI6D,MAAM,2BAElB,IAAKF,EAAMpC,OAAM,SAACuC,GAAD,OAAUP,EAASO,MAClC,MAAM,IAAID,MAAM,mCAElB,OAAO,SAAC3I,EAAcC,EAAe1B,EAAcoH,GACjD,IAAIkD,EAAS,GAeb,OAdAJ,EAAMK,SAAQ,SAACF,EAAMV,GACN,SAATU,IACFC,GAAU7I,GAEC,OAAT4I,IACFC,GAAU5I,GAEC,OAAT2I,IACFC,GAAUtK,GAEE,IAAV2J,IACFW,GAAUlD,MAGPkD,GC5JAE,CAA+BnD,KACrC,CAACA,IAEJoD,qBAAU,WACRzB,GAA4B7G,EAAwBe,OACnD,CAACA,GAAY8F,KAGhB,IAAM0B,GAAkBzB,mBAAsB,WAC5C,OD+GG,SAA4BC,EAAwByB,GACzD,IAAMC,EAAQhD,MAAMiD,KAAK,CAAEtE,OAAQ,KAAM,SAACuE,EAAGnB,GAC3C,MAAO,CACLlI,KAAMyH,EAAiBS,EACvBoB,eAAe,IAAIpK,MAAOH,gBAAkB0I,EAAiBS,EAC7DqB,eAAgBL,IAAiBzB,EAAiBS,MAGtD,MAAO,CAACiB,EAAMpB,MAAM,EAAG,GAAIoB,EAAMpB,MAAM,EAAG,IAAKoB,EAAMpB,MAAM,GAAI,IAAKoB,EAAMpB,MAAM,GAAI,KCvH3EyB,CAAmBlC,GAA0BrG,GAAalC,iBAChE,CAACuI,GAA0BrG,KAExBwI,GAAmBjC,mBAAuB,WAC9C,ODiFG,SAA4BkC,GACjC,IAAMC,EAASxD,MAAMiD,KAAK,CAAEtE,OAAQ,KAAM,SAACuE,EAAGO,GAC5C,MAAO,CACL3J,MAAO2J,EACPC,gBAAgB,IAAI3K,MAAOF,aAAe4K,EAC1CE,gBAAiBJ,IAAkBE,MAGvC,MAAO,CAACD,EAAO5B,MAAM,EAAG,GAAI4B,EAAO5B,MAAM,EAAG,GAAI4B,EAAO5B,MAAM,EAAG,GAAI4B,EAAO5B,MAAM,EAAG,KCzF3EgC,CAAmB9I,GAAajC,cACtC,CAACiC,KAEE+I,GAAyBxC,mBAAQ,WACrC,OAAO3G,EAAyB,CAC9BI,aAAcA,GACdC,mBAAoBA,GACpBC,iBAAkBA,GAClBC,sBAAuBA,GACvBC,oBAAqBA,GACrBL,cAAeiE,GAAea,EAC9B/E,sBACAS,kBACAD,sBACAD,oBACAG,cACAC,eACAtB,kBACAuB,gBACAC,cACAC,eACAK,aACAJ,QAASA,GACTC,QAASA,GACTC,SAAUiE,GACVhE,SAAUiE,OAEX,CACDjF,GACAC,GACAC,GACAC,GACAC,GACA4D,EACAa,EACA/E,EACAS,GACAD,GACAD,EACAG,GACAC,GACAtB,GACAuB,EACAC,EACAC,EACAK,EACAJ,GACAC,GACAkE,GACAC,KAII+D,GAAcC,uBAClB,SAACC,GAEG,IDoCqC1C,ECrC1B,gBAATjB,KAC8C,IAAhB9E,IAE9BiF,GAAcnG,EAAgBiB,KAEhCiF,GAAepG,EAAiBoB,MAErB,UAAT8E,IACFe,GD8BiB,KADoBE,EC7BoBH,ID+BtD,EAEF5G,EAAwB+G,EAAiB,IC/B/B,WAATjB,IACFG,GAA6B,IAAflF,GAAmBA,GAAa,EAAI,KAGtD,CACEiF,GACAhF,GACAiF,GACAlF,GACA+E,GACAe,GACAD,KAIE8C,GAAcF,uBAClB,SAACC,GACc,gBAAT3D,KACyC,KAAhB9E,IAEzBiF,GAAclG,EAAYgB,KAE5BiF,GAAenG,EAAamB,MAEjB,UAAT8E,IACFe,GDUC7G,ECVoD4G,GDUX,KCP/B,WAATd,IACFG,GAAclG,EAAYgB,OAG9B,CACEiF,GACAhF,GACAiF,GACAlF,GACA+E,GACAe,GACAD,KAIE+C,GAAgBH,uBACpB,SAACI,GACC,IAAMC,EAAc,IAAIrL,KAAKoL,EAAKtK,KAAMsK,EAAKrK,MAAOqK,EAAK/L,MAEzD,GAAI0G,EACF,GAAIlE,GAAuBK,GAAuB,CAGhD,IAAMoJ,EAAyB,IAAItL,KACjCkC,GAAsBrC,cACtBqC,GAAsBpC,WACtBoC,GAAsBxC,WAGxB,GAAIQ,EAASoL,EAAwBD,GAAc,CACjDrD,GAAsBqD,GACtBpD,GAAoBqD,GAEpB,IAAMC,EAAYF,EAEZnF,EAAUoF,EAEhB9E,GACEA,EAAS,CACP,CACEgF,MAAOD,EACPE,UAAWvC,GACTqC,EAAU1L,cACV0L,EAAUzL,WAAa,EACvByL,EAAU7L,UACV+G,IAGJ,CACE+E,MAAOtF,EACPuF,UAAWvC,GAAUhD,EAAQrG,cAAeqG,EAAQpG,WAAa,EAAGoG,EAAQxG,UAAW+G,UAGxF,CACLuB,GAAsBsD,GAEtBrD,GAAoBoD,GAEpB,IAAME,EAAYD,EAEZpF,EAAUmF,EAEhB7E,GACEA,EAAS,CACP,CACEgF,MAAOD,EACPE,UAAWvC,GACTqC,EAAU1L,cACV0L,EAAUzL,WAAa,EACvByL,EAAU7L,UACV+G,IAGJ,CACE+E,MAAOtF,EACPuF,UAAWvC,GAAUhD,EAAQrG,cAAeqG,EAAQpG,WAAa,EAAGoG,EAAQxG,UAAW+G,MAK/F0B,QAAuBuD,GAEvB7E,GAAuB,QAGvBqB,GAAyBmD,GAEzBlD,QAAuBuD,GAEvB7E,GAAuB,QAEpB,GAAIzE,EAAmB,CAC5B,IAAM/C,EAAO,IAAIW,KAAKoL,EAAKtK,KAAMsK,EAAKrK,MAAOqK,EAAK/L,MAC5CsM,EAAY1L,EAASZ,GAErBuM,EAAqB,eAAQvJ,IAE7BA,GAAmBsJ,GACvBC,EAAsBD,QAAaD,EAEnCE,EAAsBD,GAAatM,EAGrCuI,GAAsBgE,GAEtBpF,GACEA,EACEmC,OAAOC,KAAKgD,GACTC,QAAO,SAACC,GAAD,QAAUF,EAAsBE,MACvCC,KAAI,SAACD,GAAD,MAAS,CACZN,MAAOI,EAAsBE,GAC7BhL,KAAO8K,EAAsBE,GAAajM,cAC1CkB,MAAQ6K,EAAsBE,GAAahM,WAC3CT,KAAOuM,EAAsBE,GAAapM,UAC1C+L,UAAWvC,GACR0C,EAAsBE,GAAajM,cACnC+L,EAAsBE,GAAahM,WAAa,EAChD8L,EAAsBE,GAAapM,UACpC+G,aAIL,GAAIG,EAAc,CACvBoB,GAAsBqD,GAEtB,IAAMnF,EAAU9G,EAAQiM,EAAavE,GACrCmB,GAAoB/B,QAEpB6B,GAAgBsD,GAEhB7E,GACEA,EAAS,CACPgF,MAAOH,EACPI,UAAWvC,GACTmC,EAAYxL,cACZwL,EAAYvL,WAAa,EACzBuL,EAAY3L,UACZ+G,KAKRe,GAAe4D,EAAKrK,OACpB0G,GAAc2D,EAAKtK,QAErB,CACEiF,EACA3D,EACAwE,EACA/E,EACAK,GACAsE,EACA0C,GACAzC,EACApE,GACAyE,IAIJ,OACE,0BAASkF,UAAU,MAAnB,UACE,yBAAQA,UAAU,aAAlB,UACE,wBAAQA,UAAU,qCAAqCC,QAASlB,GAAhE,oBAGU,gBAATzD,GACC,yBAAQ0E,UAAU,kDAAkDC,QAAS,kBAAM1E,GAAQ,UAA3F,UACE,8BACE,+BAAOzI,EAAiC0D,QAE1C,8BACE,+BAAOD,UAGA,WAAT+E,GACF,wBAAQ0E,UAAU,2CAAlB,SACE,qBAAKC,QAAS,kBAAM1E,GAAQ,UAA5B,SACE,+BAAOhF,SAIX,wBAAQyJ,UAAU,0CAA0CC,QAAS,kBAAM1E,GAAQ,gBAAnF,SACE,8BACE,iCACGiB,GADH,IAC0BC,UAKhC,wBAAQuD,UAAU,qCAAqCC,QAASf,GAAhE,uBAIF,uBAAMc,UAAU,WAAhB,UACY,WAAT1E,IACC,qBAAK0E,UAAU,kBAAf,SACGzB,GAAiBwB,KAAI,SAACvH,EAAKwE,GAAN,OACpB,qBAAKgD,UAAU,eAAf,SACGxH,EAAIuH,KAAI,SAACX,GAAD,OACP,qBAAKY,UAAS,uBAAkBZ,EAAKT,eAAiB,kBAAoB,IAA1E,SACE,wBACEsB,QAAS,WACPzE,GAAe4D,EAAKrK,OACpBwG,GAAQ,gBAHZ,SAKGzI,EAAiCsM,EAAKrK,UAN0CqK,EAAKrK,WAF3DiI,QAgB/B,UAAT1B,IACC,qBAAK0E,UAAU,iBAAf,SACGjC,GAAgBgC,KAAI,SAACvH,EAAKwE,GAAN,OACnB,qBAAKgD,UAAU,eAAf,SACGxH,EAAIuH,KAAI,SAACX,GAAD,OACP,qBAAKY,UAAS,uBAAkBZ,EAAKhB,cAAgB,iBAAmB,IAAxE,SACE,wBACE6B,QAAS,WACPxE,GAAc2D,EAAKtK,MACnByG,GAAQ,WAHZ,SAKG6D,EAAKtK,QANyEsK,EAAKtK,UAFzDkI,QAgB/B,gBAAT1B,IACC,qCACE,oBAAI0E,UAAU,oBAAd,SACGrD,OAAOC,KAAKF,IAAWqD,KAAI,SAACG,GAAD,OAC1B,oBAEEF,UAAS,gCACkE,kBAAlE1J,GAAe6C,MAAK,SAACgH,GAAD,OAAaA,IAAY1K,OAAOyK,MAAyB,YAAc,IAHtG,SAKE,+BAAOxD,GAAUjH,OAAOyK,OAJnBA,QAQX,qBAAKF,UAAU,yBAAyBI,KAAK,OAA7C,SACGtB,GAAuBiB,KAAI,SAACvH,EAAKwE,GAAN,OAC1B,qBAAKgD,UAAU,eAAf,SACGxH,EAAIuH,KAAI,SAACX,GAAD,OACP,qBACEiB,aAAc,WACRtG,GACElE,GACFsG,GAAuB,IAAInI,KAAKoL,EAAKtK,KAAMsK,EAAKrK,MAAOqK,EAAK/L,QAKlE2M,UAAS,uBAAkBZ,EAAKtG,kBAAoB,cAAgB,IAA3D,OACPsG,EAAKlG,UAAY,YAAc,IADxB,OAENkG,EAAK9F,QAAU,aAAe,IAFxB,OAE6B8F,EAAK7F,WAAa,UAAY,IAF3D,OAGP6F,EAAK5F,UAAY,UAAY,IAHtB,OAIN4F,EAAK3F,aAAe,UAAY,IAJ1B,OAI+B2F,EAAK1F,aAAe,UAAY,IAJ/D,OAKP0F,EAAKzF,aAAeI,EAAc,gBAAkB,IAL7C,OAMNqF,EAAKpI,WAAa,gBAAkB,IAN9B,OAMmCoI,EAAKrG,UAAY,gBAAkB,IANtE,OAOPqG,EAAKpG,aAAe,mBAAqB,IAPlC,OAQNoG,EAAKnG,WAAa,iBAAmB,IAR/B,OAQoCpD,EAAsB,kBAAoB,IAjBzF,SAkBE,qBAAKmK,UAAU,sBAAf,SACE,wBACEM,SAAUlB,EAAKpI,WACfuJ,SAAUnB,EAAKpI,YAAc,EAAI,EACjCiJ,QAAS,kBAAMd,GAAcC,IAH/B,SAIGA,EAAK/L,UAfL+L,EAAK/L,UAVmB2J,kB,MC3SpCwD,MAjVf,WAAgB,IAAD,EACS7F,mBAAiB,IAD1B,mBACN8F,EADM,KACDC,EADC,KAGPC,EAAc3B,uBAClB,SAACQ,GACCkB,EAAOlB,KAET,CAACkB,IAPU,EAUS/F,mBAAiB,IAV1B,mBAUNiG,EAVM,KAUDC,EAVC,KAYPC,EAAc9B,uBAClB,SAACQ,GACCqB,EAAOrB,KAET,CAACqB,IAhBU,EAmBalG,mBAAiB,IAnB9B,mBAmBNoG,EAnBM,KAmBCC,EAnBD,KAqBPC,EAAgBjC,uBACpB,SAACQ,GACCwB,EAASxB,KAEX,CAACwB,IAzBU,EA4BWrG,mBAAiB,IA5B5B,mBA4BNuG,EA5BM,KA4BAC,EA5BA,KA8BPC,EAAepC,uBACnB,SAACQ,GACC2B,EAAQ3B,KAEV,CAAC2B,IAlCU,EAqCWxG,mBAAiB,IArC5B,mBAqCN0G,EArCM,KAqCAC,EArCA,KAuCPC,EAAevC,uBACnB,SAACQ,GACC8B,EAAQ9B,KAEV,CAAC8B,IA3CU,EA8CS3G,mBAAiB,IA9C1B,mBA8CN6G,EA9CM,KA8CDC,EA9CC,KAgDPC,EAAc1C,uBAClB,SAACQ,GACCiC,EAAOjC,KAET,CAACiC,IApDU,EAuDa9G,mBAAiB,IAvD9B,mBAuDNgH,EAvDM,KAuDCC,EAvDD,KAyDPC,EAAgB7C,uBACpB,SAACQ,GACCoC,EAASpC,KAEX,CAACoC,IA7DU,EAgEajH,mBAAiB,IAhE9B,mBAgENmH,EAhEM,KAgECC,EAhED,KAkEPC,EAAgBhD,uBACpB,SAACQ,GACCuC,EAASvC,KAEX,CAACuC,IAtEU,EAyEWpH,mBAAiB,IAzE5B,mBAyENsH,EAzEM,KAyEAC,EAzEA,KA2EPC,EAAenD,uBACnB,SAACQ,GACC0C,EAAQ1C,KAEV,CAAC0C,IA/EU,EAkFSvH,mBAAiB,IAlF1B,mBAkFNyH,EAlFM,KAkFDC,EAlFC,KAoFPC,GAActD,uBAClB,SAACQ,GACC6C,EAAO7C,KAET,CAAC6C,IAxFU,GA2Fe1H,mBAAiB,IA3FhC,qBA2FN4H,GA3FM,MA2FEC,GA3FF,MA6FPC,GAAiBzD,uBACrB,SAACQ,GACCgD,GAAUhD,KAEZ,CAACgD,KAjGU,GAoGiB7H,mBAAiB,IApGlC,qBAoGN+H,GApGM,MAoGGC,GApGH,MAsGPC,GAAkB5D,uBACtB,SAACQ,GACCmD,GAAWnD,KAEb,CAACmD,KA1GU,GA6GmBhI,mBAAiB,IA7GpC,qBA6GNkI,GA7GM,MA6GIC,GA7GJ,MA+GPC,GAAmB/D,uBACvB,SAACQ,GACCsD,GAAYtD,KAEd,CAACsD,KAGGlM,GAAU,IAAI5C,KAAK,KAAM,EAAG,IAC5B6C,GAAU,IAAI7C,KAAK,KAAM,EAAG,GAClC,OACE,sBAAKgM,UAAU,OAAf,UACE,gCACE,8BACE,0CAEF,gCACE,qBAAKA,UAAU,WAAf,SACE,cAAC,EAAD,CAAUxF,SAAU2H,MAEtB,qBAAKnC,UAAU,OAAf,SACE,cAAC,IAAD,CAAWgD,KAAK,QAAQC,iBAAiB,EAAOC,IAAKjB,YAK3D,gCACE,qBAAKjC,UAAU,OAAf,SACE,6DAEF,gCACE,qBAAKA,UAAU,WAAf,SACE,cAAC,EAAD,CACElG,MAAO,CAAC,IAAI9F,KAAK,KAAM,EAAG,IAAK,IAAIA,KAAK,KAAM,EAAG,IAAK,IAAIA,KAAK,KAAM,EAAG,IACxEsG,kBAAgB,EAChB3D,cAAY,EACZ8D,UAAU,IACVC,OAAO,aACPF,SAAUmG,MAGd,qBAAKX,UAAU,OAAf,SACE,cAAC,IAAD,CAAWgD,KAAK,QAAQC,iBAAiB,EAAOC,IAAKzC,YAK3D,gCACE,8BACE,2DAEF,gCACE,qBAAKT,UAAU,WAAf,SACE,cAAC,EAAD,CACEjG,aAAW,EACXC,UAAW,IAAIhG,KAAK,KAAM,EAAG,GAC7BkG,QAAS,IAAIlG,KAAK,KAAM,EAAG,IAC3ByG,UAAU,IACVC,OAAO,aACPF,SAAUyG,EAEV5N,KAAM,IAAIW,KAAK,KAAM,EAAG,QAG5B,qBAAKgM,UAAU,OAAf,SACE,cAAC,IAAD,CAAWgD,KAAK,QAAQC,iBAAiB,EAAOC,IAAKnC,YAK3D,gCACE,8BACE,sFAEF,gCACE,qBAAKf,UAAU,WAAf,SACE,cAAC,EAAD,CACE/F,gBAAiB,IAAIjG,KAAK,KAAM,EAAG,IACnC+F,aAAW,EACXK,eAAgBxD,GAChByD,eAAgBxD,GAChBF,cAAY,EACZ8D,UAAU,IACVC,OAAO,aACPF,SAAUsG,MAId,qBAAKd,UAAU,OAAf,SACE,cAAC,IAAD,CAAWgD,KAAK,QAAQC,iBAAiB,EAAOC,IAAKtC,YAK3D,gCACE,8BACE,mEAEF,gCACE,qBAAKZ,UAAU,WAAf,SACE,cAAC,EAAD,CAAUzF,WAAY,EAAGC,SAAUuI,OAErC,qBAAK/C,UAAU,OAAf,SACE,cAAC,IAAD,CAAWgD,KAAK,QAAQC,iBAAiB,EAAOC,IAAKL,aAK3D,gCACE,8BACE,8EAEF,gCACE,qBAAK7C,UAAU,WAAf,SACE,cAAC,EAAD,CAAU7F,YAAa,EAAGK,SAAU4G,MAEtC,qBAAKpB,UAAU,OAAf,SACE,cAAC,IAAD,CAAWgD,KAAK,QAAQC,iBAAiB,EAAOC,IAAKhC,YAK3D,gCACE,8BACE,4EAEF,gCACE,qBAAKlB,UAAU,WAAf,SACE,cAAC,EAAD,CAAUtI,SAAU,CAAC,EAAG,EAAG,GAAI8C,SAAU+G,MAE3C,qBAAKvB,UAAU,OAAf,SACE,cAAC,IAAD,CAAWgD,KAAK,QAAQC,iBAAiB,EAAOC,IAAK7B,YAK3D,gCACE,8BACE,8DAEF,gCACE,qBAAKrB,UAAU,WAAf,SACE,cAAC,EAAD,CAAUtJ,aAAW,EAAC8D,SAAUkH,MAElC,qBAAK1B,UAAU,OAAf,SACE,cAAC,IAAD,CAAWgD,KAAK,QAAQC,iBAAiB,EAAOC,IAAK1B,YAK3D,gCACE,8BACE,+DAEF,gCACE,qBAAKxB,UAAU,WAAf,SACE,cAAC,EAAD,CACErJ,cAAY,EACZtD,KAAM,IAAIW,MAAK,IAAIA,MAAOH,eAAe,IAAIG,MAAOF,YAAY,IAAIE,MAAON,UAAY,GACvF8G,SAAUqH,MAGd,qBAAK7B,UAAU,OAAf,SACE,cAAC,IAAD,CAAWgD,KAAK,QAAQC,iBAAiB,EAAOC,IAAKvB,YAK3D,gCACE,8BACE,gEAEF,gCACE,qBAAK3B,UAAU,WAAf,SACE,cAAC,EAAD,CAAUvJ,eAAa,EAAC+D,SAAUwH,MAEpC,qBAAKhC,UAAU,OAAf,SACE,cAAC,IAAD,CAAWgD,KAAK,QAAQC,iBAAiB,EAAOC,IAAKpB,YAK3D,gCACE,8BACE,+EAEF,gCACE,qBAAK9B,UAAU,WAAf,SACE,cAAC,EAAD,CAAUtF,OAAO,aAAaF,SAAU8H,OAE1C,qBAAKtC,UAAU,OAAf,SACE,cAAC,IAAD,CAAWgD,KAAK,QAAQC,iBAAiB,EAAOC,IAAKd,YAK3D,gCACE,8BACE,yEAEF,gCACE,qBAAKpC,UAAU,WAAf,SACE,cAAC,EAAD,CAAUvF,UAAU,IAAID,SAAUiI,OAEpC,qBAAKzC,UAAU,OAAf,SACE,cAAC,IAAD,CAAWgD,KAAK,QAAQC,iBAAiB,EAAOC,IAAKX,aAK3D,gCACE,8BACE,4FAEF,gCACE,qBAAKvC,UAAU,WAAf,SACE,cAAC,EAAD,CAAU/F,gBAAiB,IAAIjG,KAAK,KAAM,EAAG,GAAIwG,SAAUoI,OAE7D,qBAAK5C,UAAU,OAAf,SACE,cAAC,IAAD,CAAWgD,KAAK,QAAQC,iBAAiB,EAAOC,IAAKR,iBClUlDS,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9bdf275b.chunk.js","sourcesContent":["import type { MonthIndices, WeekdayIndices } from './types';\n\n/**\n * This weekday index-to-label map is what is used by the Date object\n */\nexport const NATIVE_INDEX_TO_LABEL_WEEKDAY_MAP: Record<WeekdayIndices, string> = {\n  0: 'Su',\n  1: 'Mo',\n  2: 'Tu',\n  3: 'We',\n  4: 'Th',\n  5: 'Fr',\n  6: 'Sa',\n};\n\nexport const NATIVE_INDEX_TO_LABEL_MONTHS_MAP: Record<MonthIndices, string> = {\n  0: 'January',\n  1: 'February',\n  2: 'March',\n  3: 'April',\n  4: 'May',\n  5: 'June',\n  6: 'July',\n  7: 'August',\n  8: 'September',\n  9: 'October',\n  10: 'November',\n  11: 'December',\n};\n","/* eslint-disable no-loop-func */\nimport type {\n  MonthIndices,\n  WeekdayIndices,\n  MonthCell,\n  YearCell,\n  DayOfMonthCell,\n  GetDaysOfMonthViewMetrixParams,\n  CheckIfDateIsDisabledHOFParams,\n} from './types';\n\nimport { NATIVE_INDEX_TO_LABEL_WEEKDAY_MAP } from './constants';\n\n/**\n * Add number of days to a month.\n */\nexport function addDays(date: Date, numberOfDaysToAdd: number): Date {\n  let daysLeftToAdd = numberOfDaysToAdd;\n  let newDate = date;\n\n  while (daysLeftToAdd > 0) {\n    const dayOfMonth = newDate.getDate();\n    const totalDaysInMonth = getNumberOfDaysInAMonth(newDate.getFullYear(), newDate.getMonth() as MonthIndices);\n    const remainingDaysInMonth = totalDaysInMonth - dayOfMonth;\n    let daysThatCanBeAddedInThisMonth = 0;\n\n    if (remainingDaysInMonth >= daysLeftToAdd) {\n      daysThatCanBeAddedInThisMonth = daysLeftToAdd;\n      daysLeftToAdd = 0;\n      newDate = new Date(newDate.getFullYear(), newDate.getMonth(), newDate.getDate() + daysThatCanBeAddedInThisMonth);\n    } else {\n      daysThatCanBeAddedInThisMonth = remainingDaysInMonth;\n      daysLeftToAdd = daysLeftToAdd - remainingDaysInMonth;\n      if (newDate.getMonth() === 11) {\n        newDate = new Date(newDate.getFullYear() + 1, 0, 1);\n        daysLeftToAdd = daysLeftToAdd - 1;\n      } else {\n        newDate = new Date(newDate.getFullYear(), newDate.getMonth() + 1, 1);\n        daysLeftToAdd = daysLeftToAdd - 1;\n      }\n    }\n  }\n\n  return newDate;\n}\n\n/**\n * Converts a date to string\n */\nexport function toString(date: Date) {\n  return `${date.getFullYear()}${date.getMonth()}${date.getDate()}`;\n}\n\n/**\n * Returns true if toCheck date is before the date\n */\nexport function isBefore(date: Date, toCheckDate: Date): boolean {\n  if (toCheckDate.getFullYear() < date.getFullYear()) {\n    return true;\n  }\n\n  if (toCheckDate.getFullYear() === date.getFullYear()) {\n    if (toCheckDate.getMonth() < date.getMonth()) {\n      return true;\n    }\n\n    if (toCheckDate.getMonth() === date.getMonth()) {\n      if (toCheckDate.getDate() < date.getDate()) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the given date is valid\n */\nexport function isValid(date: undefined | Date): date is Date {\n  return typeof date !== 'undefined' && date !== null && !isNaN(new Date(date as Date).getTime());\n}\n\n/**\n * Returns true if the given dates are equal\n */\nexport function isEqual(first: Date, second: Date): boolean {\n  return (\n    first.getFullYear() === second.getFullYear() &&\n    first.getMonth() === second.getMonth() &&\n    first.getDate() === second.getDate()\n  );\n}\n\n/**\n * Returns true if the given date falls inside the range\n */\nexport function isPartOfRange(rangeStart: Date, rangeEnd: Date, date: Date): boolean {\n  // if date lies in between the year\n  if (rangeStart.getFullYear() <= date.getFullYear() && date.getFullYear() <= rangeEnd.getFullYear()) {\n    // if year is in-between range year start and year end\n    if (rangeStart.getFullYear() < date.getFullYear() && date.getFullYear() < rangeEnd.getFullYear()) {\n      return true;\n    }\n\n    // if start year and end year are same\n    if (rangeStart.getFullYear() === rangeEnd.getFullYear()) {\n      if (rangeStart.getMonth() <= date.getMonth() && date.getMonth() <= rangeEnd.getMonth()) {\n        // if month is in-between month start and and moth end\n        if (rangeStart.getMonth() < date.getMonth() && date.getMonth() < rangeEnd.getMonth()) {\n          return true;\n        }\n\n        // if month start and month end are same\n        if (rangeStart.getMonth() === rangeEnd.getMonth()) {\n          if (\n            rangeStart.getDate() <= date.getDate() &&\n            date.getDate() <= rangeEnd.getDate() &&\n            date.getMonth() === rangeEnd.getMonth()\n          ) {\n            return true;\n          }\n          return false;\n        }\n\n        // if date is in start month\n        if (rangeStart.getMonth() === date.getMonth()) {\n          if (rangeStart.getDate() <= date.getDate()) {\n            return true;\n          }\n          return false;\n        }\n\n        // if date is in end month\n        if (rangeEnd.getMonth() === date.getMonth()) {\n          if (date.getDate() <= rangeEnd.getDate()) {\n            return true;\n          }\n          return false;\n        }\n\n        return false;\n      }\n      return false;\n    }\n\n    // if year is same as start year\n    if (rangeStart.getFullYear() === date.getFullYear()) {\n      // if month is greater than start month\n      if (date.getMonth() > rangeStart.getMonth()) {\n        return true;\n      }\n\n      // if month is same as start month\n      if (date.getMonth() === rangeStart.getMonth()) {\n        // if date is greater than range start date\n        if (date.getDate() >= rangeStart.getDate()) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    // if year is same as end year\n    if (rangeEnd.getFullYear() === date.getFullYear()) {\n      // if month is smaller than end month\n      if (date.getMonth() < rangeEnd.getMonth()) {\n        return true;\n      }\n\n      // if month is same as end month\n      if (date.getMonth() === rangeEnd.getMonth()) {\n        // if date is smaller than range end date\n        if (date.getDate() <= rangeEnd.getDate()) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    return false;\n  }\n  return false;\n}\n\n/**\n * Returns true if the given year is a leap year.\n * @param {number} year\n */\nexport function isALeapYear(year: number) {\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n/**\n * Returns the number of days in the given month of the given year.\n * @param {number} year\n * @param {number} month\n */\nexport function getNumberOfDaysInAMonth(year: number, month: MonthIndices) {\n  const map: Record<MonthIndices, number> = {\n    0: 31,\n    1: isALeapYear(year) ? 29 : 28,\n    2: 31,\n    3: 30,\n    4: 31,\n    5: 30,\n    6: 31,\n    7: 31,\n    8: 30,\n    9: 31,\n    10: 30,\n    11: 31,\n  };\n\n  return map[month];\n}\n\n// WEEKDAY UTILS\n\n/**\n * Creates and return a new weekday index-label map as per the **start**\n * parameter. By default this will return the same weekday index-label map\n * used by the Date object.\n * 0 means Sun - if we follow the native Date convention\n * Now if someone wants to start their week from Mon, then 0 would mean Monday which is different from\n * the convention used by the Date methods.\n * @param startOfTheWeek index of the day to be considered as start of the week\n */\nexport function getWeekDaysIndexToLabelMapForAStartOfTheWeek(startOfTheWeek = 0): Record<WeekdayIndices, string> {\n  // we break [0,1,2,3,4,5,6] in two parts, startOfTheWeek = 3\n  // [startOfTheWeek,4,5,6] and [0,1,2] and join them with their labels\n  // this is just to re-order the label in the **correct order**\n  // i.e 0 becomes Wed although in native order 0 is Sunday\n  return Object.keys(NATIVE_INDEX_TO_LABEL_WEEKDAY_MAP)\n    .slice(startOfTheWeek, 7)\n    .concat(Object.keys(NATIVE_INDEX_TO_LABEL_WEEKDAY_MAP).slice(0, startOfTheWeek))\n    .reduce((acc, weekdayIndex, index) => {\n      // acc[0] = DEFAULT_WEEKDAY_INDEX[3]\n      acc[Number(index) as WeekdayIndices] = NATIVE_INDEX_TO_LABEL_WEEKDAY_MAP[Number(weekdayIndex) as WeekdayIndices];\n      return acc;\n    }, {} as Record<WeekdayIndices, string>);\n}\n\n/**\n * So if the Date object says that some date has 3 day-of-the-week. No this 3 means Wednesday as per the native index for week days.\n * But if a calendar starts from Monday, then wednesday will not be at 3 but it will be at some other index which is according to a different index-label map.\n * So this method returns that index for wednesday.\n * @param weekdayAsPerNativeIndex day-of-the-week as per the Date object\n * @param startOfTheWeek index of the day to be considered as start of the week\n */\nfunction getInfluencedWeekDayIndexAsPerAStartDay(weekdayAsPerNativeIndex: number, startOfTheWeek = 0): WeekdayIndices {\n  return (\n    weekdayAsPerNativeIndex >= startOfTheWeek\n      ? weekdayAsPerNativeIndex - startOfTheWeek\n      : 6 - startOfTheWeek + 1 + weekdayAsPerNativeIndex\n  ) as WeekdayIndices;\n}\n\n// {\n//   0: 'Mo',\n//   1: 'Tu',\n//   2: 'We',\n//   3: 'Th',\n//   4: 'Fr',\n//   5: 'Sa',\n//   6: 'Su'\n// };\n// start = 1\n// 6 - 1 = 5\n// influencedIndex = 3 (Thu)\n// 3 <= 5 so 3 + 1 = 4 (Thu) (native)\n// influencedIndex = 2 (Wed)\n// 2 <= 5 so 2 + 1 = 3 (Wed) (native)\n// influencedIndex = 5 (Sa)\n// 5 <= 5 so 5 + 1 = 6 (Sa) (native)\n// influencedIndex = 6 (Su)\n// 6 > 5 so ((6 - 5) - 1) = 0 (su) (native)\n\n// {\n//   0: 'Tu',\n//   1: 'We',\n//   2: 'Th',\n//   3: 'Fr',\n//   4: 'Sa',\n//   5: 'Su',\n//   6: 'Mo'\n// };\n// start = 2\n// 6 - 2 = 4\n// influencedIndex = 3 (Fr)\n// 3 <= 4 so 3 + 2 = 5 (Fr) (native)\n// influencedIndex = 2 (Th)\n// 2 <= 4 so 2 + 2 = 4 (Th) (native)\n// influencedIndex = 5 (Su)\n// 5 > 4 so ((5 - 4) - 1) = 0 (Su) (native)\n// influencedIndex = 6 (Mo)\n// 6 > 4 so ((6 - 4) - 1) = 1 (Mo) (native)\nfunction getNativeWeekDayIndexFromAStartDayInfluencedIndex(\n  weekdayAsPerChangedIndex: number,\n  startOfTheWeek: number\n): WeekdayIndices {\n  const diversion = 6 - startOfTheWeek;\n  return (\n    weekdayAsPerChangedIndex <= diversion\n      ? weekdayAsPerChangedIndex + startOfTheWeek\n      : weekdayAsPerChangedIndex - diversion - 1\n  ) as WeekdayIndices;\n}\n\n/**\n * Gives the index of day-of-the-week on the 1st of the provided month-year.\n * @param year Specify a year\n * @param month Specify a month\n * @param startOfTheWeek index of the day to be considered as start of the week\n */\nfunction getInfluencedWeekDayIndexOnFirstDateOfMonth(\n  year: number,\n  month: number,\n  startOfTheWeek: number\n): WeekdayIndices {\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  return getInfluencedWeekDayIndexAsPerAStartDay(date.getDay(), startOfTheWeek) as WeekdayIndices;\n}\n\n/**\n * Returns info about what indexes are weekend\n * @param startOfTheWeek index of the day to be considered as start of the week\n */\nexport function getWeekendInfo(startOfTheWeek: number): WeekdayIndices[] {\n  if (startOfTheWeek === 0) {\n    return [6, 0];\n  } else if (startOfTheWeek === 1) {\n    return [5, 6];\n  } else if (startOfTheWeek === 2) {\n    return [4, 5];\n  } else if (startOfTheWeek === 3) {\n    return [3, 4];\n  } else if (startOfTheWeek === 4) {\n    return [2, 3];\n  } else if (startOfTheWeek === 5) {\n    return [1, 2];\n  } else {\n    return [0, 1];\n  }\n}\n\nexport function getPreviousMonth(month: MonthIndices): MonthIndices {\n  return month === 0 ? 11 : ((month - 1) as MonthIndices);\n}\n\nexport function getNextMonth(month: MonthIndices): MonthIndices {\n  return month === 11 ? 0 : ((month + 1) as MonthIndices);\n}\n\nexport function getPreviousYear(year: number): number {\n  return year === 1 ? 1 : year - 1;\n}\n\nexport function getNextYear(year: number): number {\n  return year + 1;\n}\n\n// 1 - 20 (20 years in one range block)\n// 21 - 40\n// so if you provide 3 then the start of raange for 3 would be\n// 1 since it belongs to the 1-20 year range.\nexport function getStartOfRangeForAYear(year: number) {\n  // last cell will always be a perfect multiple of 20\n  // take 2016 as an example\n  if (year % 20 === 0) {\n    return 20 * (year / 20 - 1) + 1;\n  }\n  // logic derived from a few examples like 2021, 1981, 1973\n  return 20 * Number((year / 20).toFixed(0)) + 1;\n}\n\n/**\n * Returns matrix for the month select view.\n * @param selectedMonth\n */\nexport function getMonthViewMetrix(selectedMonth: number): Array<MonthCell>[] {\n  const months = Array.from({ length: 12 }, (v, k) => {\n    return {\n      month: k as MonthIndices,\n      isCurrentMonth: new Date().getMonth() === k,\n      isSelectedMonth: selectedMonth === k,\n    };\n  });\n  return [months.slice(0, 3), months.slice(3, 6), months.slice(6, 9), months.slice(9, 12)];\n}\n\nexport function getPreviousRangeStartingYear(rangeStartYear: number) {\n  if (rangeStartYear === 1) {\n    return 1;\n  }\n  return getStartOfRangeForAYear(rangeStartYear - 1);\n}\n\nexport function getNextRangeStartingYear(rangeStartYear: number) {\n  return getStartOfRangeForAYear(rangeStartYear + 20);\n}\n\nexport function getYearRangeLimits(rangeStartYear: number) {\n  return [rangeStartYear, rangeStartYear + 19];\n}\n\nexport function getYearsViewMetrix(rangeStartYear: number, selectedYear: number): Array<YearCell>[] {\n  const years = Array.from({ length: 20 }, (v, index) => {\n    return {\n      year: rangeStartYear + index,\n      isCurrentYear: new Date().getFullYear() === rangeStartYear + index,\n      isSelectedYear: selectedYear === rangeStartYear + index,\n    };\n  });\n  return [years.slice(0, 5), years.slice(5, 10), years.slice(10, 15), years.slice(15, 20)];\n}\n\nexport function validateAndReturnDateFormatter(format: string) {\n  const partsMap: Record<'YYYY' | 'MM' | 'DD', boolean> = { YYYY: true, MM: true, DD: true };\n  const parts = format.split('-') as ('YYYY' | 'MM' | 'DD')[];\n  if (parts.length !== 3) {\n    throw new Error('Date format is invalid.');\n  }\n  if (!parts.every((part) => partsMap[part])) {\n    throw new Error('Date format uses unknown parts.');\n  }\n  return (year: number, month: number, date: number, separator: string): string => {\n    let string = '';\n    parts.forEach((part, index) => {\n      if (part === 'YYYY') {\n        string += year;\n      }\n      if (part === 'MM') {\n        string += month;\n      }\n      if (part === 'DD') {\n        string += date;\n      }\n      if (index !== 2) {\n        string += separator;\n      }\n    });\n    return string;\n  };\n}\n\nfunction checkIfDateIsDisabledHOF(params: CheckIfDateIsDisabledHOFParams) {\n  const { disablePast, disableToday, disableFuture, customDisabledCheck, maxDate, minDate, applyMax, applyMin } =\n    params;\n\n  const date = new Date();\n  const dayOfMonth = date.getDate();\n  const currentYear = date.getFullYear();\n  const currentMonth = date.getMonth();\n\n  return function checkIfDateIsDisabled(year: number, month: MonthIndices, date: number, weekday: WeekdayIndices) {\n    if (disablePast) {\n      if (year < currentYear) {\n        return true;\n      }\n\n      if (year === currentYear && month < currentMonth) {\n        return true;\n      }\n\n      if (year === currentYear && month === currentMonth && date < dayOfMonth) {\n        return true;\n      }\n    }\n    if (disableToday) {\n      if (year === currentYear && month === currentMonth && date === dayOfMonth) {\n        return true;\n      }\n    }\n    if (disableFuture) {\n      if (year > currentYear) {\n        return true;\n      }\n\n      if (year === currentYear && month > currentMonth) {\n        return true;\n      }\n\n      if (year === currentYear && month === currentMonth && date > dayOfMonth) {\n        return true;\n      }\n    }\n\n    if (applyMax) {\n      if (isBefore(new Date(year, month, date), maxDate)) {\n        return true;\n      }\n    }\n\n    if (applyMin) {\n      if (isBefore(minDate, new Date(year, month, date))) {\n        return true;\n      }\n    }\n\n    if (typeof customDisabledCheck === 'function') {\n      return customDisabledCheck({\n        year: year,\n        month: month,\n        weekday: weekday,\n        date: date,\n      });\n    }\n\n    return false;\n  };\n}\n\nexport function getDaysOfMonthViewMetrix(params: GetDaysOfMonthViewMetrixParams): Array<DayOfMonthCell>[] {\n  const {\n    isRangeSelectModeOn,\n    isRangeView,\n    selectedDate,\n    selectedRangeStart,\n    selectedRangeEnd,\n    newSelectedRangeStart,\n    newSelectedRangeEnd,\n    isSelectMultiDate,\n    selectedMultiDates,\n    weekendIndexes,\n    yearInView,\n    monthInView,\n    startOfTheWeek,\n    disableFuture = false,\n    disablePast = false,\n    disableToday = false,\n    maxDate,\n    minDate,\n    applyMax,\n    applyMin,\n    isDisabled,\n  } = params;\n\n  const matrix: Array<DayOfMonthCell>[] = [[], [], [], [], [], []];\n\n  const currentMonthDatesStartIndex = getInfluencedWeekDayIndexOnFirstDateOfMonth(\n    yearInView,\n    monthInView,\n    startOfTheWeek\n  );\n\n  const weekends = weekendIndexes;\n\n  const checkDisabledForADate = checkIfDateIsDisabledHOF({\n    disablePast,\n    disableToday,\n    disableFuture,\n    customDisabledCheck: isDisabled,\n    maxDate,\n    minDate,\n    applyMax,\n    applyMin,\n  });\n\n  const todaysDate = new Date().getDate();\n  const todaysMonth = new Date().getMonth();\n  const todaysYear = new Date().getFullYear();\n  const totalDaysInCurrentMonth = getNumberOfDaysInAMonth(yearInView, monthInView);\n\n  const isPrevMonthFromLastYear = monthInView === 0;\n  const isCurrentMonthLast = monthInView === 11;\n\n  const totalDaysInPrevMonth = getNumberOfDaysInAMonth(\n    isPrevMonthFromLastYear ? getPreviousYear(yearInView) : yearInView,\n    getPreviousMonth(monthInView)\n  );\n\n  // calendar has 6 rows (0 - 5)\n  let row = 0;\n  let weekColumn: WeekdayIndices = 0;\n\n  //  31 - (6 - 1) === 26\n  const lastMonthDateStartFrom = totalDaysInPrevMonth - (currentMonthDatesStartIndex - 1);\n\n  // first loop to fill cell values of last month\n  for (let date = lastMonthDateStartFrom; date <= totalDaysInPrevMonth; date++) {\n    if (weekColumn === 7) {\n      weekColumn = 0;\n      row++;\n    }\n    const currMonth = getPreviousMonth(monthInView);\n    const currYear = isPrevMonthFromLastYear ? getPreviousYear(yearInView) : yearInView;\n\n    const currDate = new Date(currYear, currMonth, date);\n\n    // if new range dates are VALID\n    // then use them to compute in range values\n\n    matrix[row].push({\n      date: date,\n      month: currMonth,\n      activeMonthInView: false,\n      isInRange: isRangeView\n        ? isRangeSelectModeOn\n          ? isValid(newSelectedRangeStart) && isValid(newSelectedRangeEnd)\n            ? isBefore(newSelectedRangeEnd, newSelectedRangeStart)\n              ? isPartOfRange(newSelectedRangeStart, newSelectedRangeEnd, currDate)\n              : isPartOfRange(newSelectedRangeEnd, newSelectedRangeStart, currDate)\n            : false\n          : isPartOfRange(selectedRangeStart, selectedRangeEnd, currDate)\n        : false,\n      isRangeStart: isRangeView\n        ? isRangeSelectModeOn\n          ? isValid(newSelectedRangeStart)\n            ? isEqual(newSelectedRangeStart, currDate)\n            : false\n          : isEqual(selectedRangeStart, currDate)\n        : false,\n      isRangeEnd: isRangeView ? (isRangeSelectModeOn ? false : isEqual(selectedRangeEnd, currDate)) : false,\n      year: currYear,\n      isWeekend: typeof weekends.find((c) => c === weekColumn) === 'number' ? true : false,\n      dayOfWeek: getNativeWeekDayIndexFromAStartDayInfluencedIndex(weekColumn, startOfTheWeek),\n      isToday: date === todaysDate && currMonth === todaysMonth && currYear === todaysYear,\n      isFirstRow: row === 0,\n      isLastRow: row === 5,\n      isFirsColumn: weekColumn === 0,\n      isLastColumn: weekColumn === 6,\n      isSelected: isSelectMultiDate\n        ? !!selectedMultiDates[toString(currDate)]\n        : isRangeView\n        ? false\n        : currMonth === selectedDate.getMonth() &&\n          currYear === selectedDate.getFullYear() &&\n          date === selectedDate.getDate(),\n      // not modified\n      isDisabled: checkDisabledForADate(\n        currYear,\n        currMonth,\n        date,\n        getNativeWeekDayIndexFromAStartDayInfluencedIndex(weekColumn, startOfTheWeek)\n      ),\n    });\n    weekColumn++;\n  }\n\n  // second loop to fill cell values of current month\n  for (let date = 1; date <= totalDaysInCurrentMonth; date++) {\n    if (weekColumn === 7) {\n      weekColumn = 0;\n      row++;\n    }\n    const currMonth = monthInView;\n    const currYear = yearInView;\n    const isToday = date === todaysDate && monthInView === todaysMonth && yearInView === todaysYear;\n\n    const currDate = new Date(currYear, currMonth, date);\n\n    matrix[row].push({\n      date: date,\n      month: currMonth,\n      activeMonthInView: true,\n      isInRange: isRangeView\n        ? isRangeSelectModeOn\n          ? isValid(newSelectedRangeStart) && isValid(newSelectedRangeEnd)\n            ? isBefore(newSelectedRangeEnd, newSelectedRangeStart)\n              ? isPartOfRange(newSelectedRangeStart, newSelectedRangeEnd, currDate)\n              : isPartOfRange(newSelectedRangeEnd, newSelectedRangeStart, currDate)\n            : false\n          : isPartOfRange(selectedRangeStart, selectedRangeEnd, currDate)\n        : false,\n      isRangeStart: isRangeView\n        ? isRangeSelectModeOn\n          ? isValid(newSelectedRangeStart)\n            ? isEqual(newSelectedRangeStart, currDate)\n            : false\n          : isEqual(selectedRangeStart, currDate)\n        : false,\n      isRangeEnd: isRangeView ? (isRangeSelectModeOn ? false : isEqual(selectedRangeEnd, currDate)) : false,\n      year: currYear,\n      dayOfWeek: getNativeWeekDayIndexFromAStartDayInfluencedIndex(weekColumn, startOfTheWeek),\n      isWeekend: typeof weekends.find((c) => c === weekColumn) === 'number' ? true : false,\n      isToday: isToday,\n      isFirstRow: row === 0,\n      isLastRow: row === 5,\n      isFirsColumn: weekColumn === 0,\n      isLastColumn: weekColumn === 6,\n      isSelected: isSelectMultiDate\n        ? !!selectedMultiDates[toString(currDate)]\n        : isRangeView\n        ? false\n        : currMonth === selectedDate.getMonth() &&\n          currYear === selectedDate.getFullYear() &&\n          date === selectedDate.getDate(),\n      isDisabled: checkDisabledForADate(\n        currYear,\n        currMonth,\n        date,\n        getNativeWeekDayIndexFromAStartDayInfluencedIndex(weekColumn, startOfTheWeek)\n      ),\n    });\n    weekColumn++;\n  }\n\n  let date = 1;\n  // last loop to fill cell values of next month\n\n  while (matrix[5].length < 7) {\n    if (weekColumn === 7) {\n      weekColumn = 0;\n      row++;\n    }\n    const currMonth = getNextMonth(monthInView);\n    const currYear = isCurrentMonthLast ? yearInView + 1 : yearInView;\n\n    const currDate = new Date(currYear, currMonth, date);\n\n    matrix[row].push({\n      date: date,\n      month: currMonth,\n      activeMonthInView: false,\n      isInRange: isRangeView\n        ? isRangeSelectModeOn\n          ? isValid(newSelectedRangeStart) && isValid(newSelectedRangeEnd)\n            ? isBefore(newSelectedRangeEnd, newSelectedRangeStart)\n              ? isPartOfRange(newSelectedRangeStart, newSelectedRangeEnd, currDate)\n              : isPartOfRange(newSelectedRangeEnd, newSelectedRangeStart, currDate)\n            : false\n          : isPartOfRange(selectedRangeStart, selectedRangeEnd, currDate)\n        : false,\n      isRangeStart: isRangeView\n        ? isRangeSelectModeOn\n          ? isValid(newSelectedRangeStart)\n            ? isEqual(newSelectedRangeStart, currDate)\n            : false\n          : isEqual(selectedRangeStart, currDate)\n        : false,\n      isRangeEnd: isRangeView ? (isRangeSelectModeOn ? false : isEqual(selectedRangeEnd, currDate)) : false,\n      year: currYear,\n      dayOfWeek: getNativeWeekDayIndexFromAStartDayInfluencedIndex(weekColumn, startOfTheWeek),\n      isWeekend: typeof weekends.find((c) => c === weekColumn) === 'number' ? true : false,\n      isToday: date === todaysDate && currMonth === todaysMonth && currYear === todaysYear,\n      isFirstRow: row === 0,\n      isLastRow: row === 5,\n      isFirsColumn: weekColumn === 0,\n      isLastColumn: weekColumn === 6,\n      isSelected: isSelectMultiDate\n        ? !!selectedMultiDates[toString(currDate)]\n        : isRangeView\n        ? false\n        : currMonth === selectedDate.getMonth() &&\n          currYear === selectedDate.getFullYear() &&\n          date === selectedDate.getDate(),\n      isDisabled: checkDisabledForADate(\n        currYear,\n        currMonth,\n        date,\n        getNativeWeekDayIndexFromAStartDayInfluencedIndex(weekColumn, startOfTheWeek)\n      ),\n    });\n    weekColumn++;\n    date++;\n  }\n\n  return matrix;\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport type { DayOfMonthCell, IsDisabledParams, MonthCell, MonthIndices, YearCell, WeekdayIndices } from './types';\n\nimport {\n  getWeekDaysIndexToLabelMapForAStartOfTheWeek,\n  getStartOfRangeForAYear,\n  getPreviousYear,\n  getPreviousMonth,\n  getPreviousRangeStartingYear,\n  getNextYear,\n  getNextMonth,\n  getNextRangeStartingYear,\n  getYearsViewMetrix,\n  getMonthViewMetrix,\n  getDaysOfMonthViewMetrix,\n  getYearRangeLimits,\n  validateAndReturnDateFormatter,\n  getWeekendInfo,\n  isValid,\n  isBefore,\n  toString,\n  addDays,\n} from './date-utils';\n\nimport { NATIVE_INDEX_TO_LABEL_MONTHS_MAP } from './constants';\n\ninterface Value {\n  value: Date;\n  formatted: string;\n}\n\ntype RangeValue = [Value, Value];\ntype MultiValue = Value[];\n\ninterface Props {\n  /**\n   * The initial month and year that will be shown to the user.\n   * By default it shows today's date month and year. If a date is selected it shows the selected\n   * date's month and year.\n   */\n  initialViewDate?: Date;\n  /**\n   * Value of the date in ISO format.\n   * Only applicable if selectRange is false\n   */\n  date?: Date;\n  /**\n   * Multiple dates\n   */\n  dates?: Date[];\n  /**\n   * Start date of the date range.\n   * Only applicable if selectRange is true.\n   */\n  startdate?: Date;\n  /**\n   * End date of the date range.\n   * Only applicable if selectRange is true.\n   */\n  endDate?: Date;\n  /**\n   * Array of weekday number that are part of weekend.\n   * The weekday number depends on the start of the week if provided one.\n   * By default this is [6, 0] which Saturday, Sunday respectively as per the 0 based start of the week.\n   */\n  weekends?: WeekdayIndices[];\n  /**\n   * By default the calendar starts from Sun which is represented in JS as 0 index.\n   * You can provide the index for any other day that you want as start of the week.\n   */\n  startOfWeek?: WeekdayIndices;\n  /**\n   * Separator to be used when formatting the date string.\n   * Default is '-' i.e 'DD-MM-YYYY'\n   */\n  separator?: string;\n  /**\n   * A combination of YYYY-MM-DD.\n   * Eg. MM-DD-YYYY, DD-MM-YYYY etc.\n   * Default is '-' i.e 'DD-MM-YYYY'\n   */\n  format?: string;\n  /**\n   * A boolean flag to disable all past dates.\n   */\n  disablePast?: boolean;\n  /**\n   * Always select n number of days starting from the user's selected date\n   */\n  fixedRange?: number;\n  /**\n   * A boolean flag to disable today's date.\n   */\n  disableToday?: boolean;\n  /**\n   * A boolean flag to disable all future dates.\n   */\n  disableFuture?: boolean;\n  /**\n   * A callback function that can be used to disable specific dates on the calendar.\n   */\n  isDisabled?: (params: IsDisabledParams) => boolean;\n  /**\n   * User will not be able to select past this date. This date will be selectable.\n   */\n  maxAllowedDate?: Date;\n  /**\n   * User will not be able to select before this date. This date will be selectable.\n   */\n  minAllowedDate?: Date;\n  /**\n   * Renders a range selector UI for the calendar\n   */\n  selectRange?: boolean;\n  /**\n   * Renders a multi date selector UI for the calendar\n   */\n  selectMultiDates?: boolean;\n  /**\n   * OnChange callback functionn.\n   */\n  onChange?: (value: Value | MultiValue | RangeValue) => any | Promise<any>;\n}\n\n// Add an option to freeze ui if date is invalid\n// Add a isEditable option\n// Change is in range to could be in range as a class rather than hover\n// dont show range hover on diabalbed\n\nfunction Calendar({\n  date,\n  dates = [],\n  selectRange,\n  weekends,\n  startdate,\n  initialViewDate,\n  endDate,\n  startOfWeek = 1,\n  maxAllowedDate,\n  minAllowedDate,\n  selectMultiDates,\n  fixedRange,\n  isDisabled,\n  onChange,\n  separator = '-',\n  format = 'DD-MM-YYYY',\n  disableFuture = false,\n  disablePast = false,\n  disableToday = false,\n}: Props) {\n  // range takes precedence over multi select\n  const [isSelectMultiDate] = useState(\n    typeof selectMultiDates === 'boolean' && !selectRange ? selectMultiDates : false\n  );\n\n  const [isFixedRange] = useState(\n    !isSelectMultiDate && !selectRange && typeof fixedRange === 'number' && fixedRange > 1 ? true : false\n  );\n\n  // is range select mode on\n  const [isRangeSelectModeOn, setIsRangeSelectModeOn] = useState(false);\n\n  const [fixedRangeLength] = useState(isFixedRange ? (fixedRange as number) : 1);\n\n  // start day of the week\n  const [startOfTheWeek] = useState(startOfWeek);\n\n  // maxDate\n  const [maxDate] = useState(() => {\n    return isValid(maxAllowedDate) ? maxAllowedDate : new Date();\n  });\n  const [applyMaxConstraint] = useState(() => {\n    return isValid(maxAllowedDate)\n      ? isValid(minAllowedDate)\n        ? isBefore(maxAllowedDate, minAllowedDate)\n        : true\n      : false;\n  });\n\n  // minDate\n  const [minDate] = useState(() => {\n    return isValid(minAllowedDate) ? minAllowedDate : new Date();\n  });\n\n  const [applyminConstraint] = useState(() => {\n    return isValid(minAllowedDate)\n      ? isValid(maxAllowedDate)\n        ? isBefore(maxAllowedDate, minAllowedDate)\n        : true\n      : false;\n  });\n\n  const [weekendIndexes] = useState(() => {\n    return Array.isArray(weekends) && weekends.every((num) => typeof num === 'number')\n      ? weekends\n      : getWeekendInfo(startOfTheWeek);\n  });\n\n  // current view\n  const [view, setView] = useState<'years' | 'months' | 'month_dates'>('month_dates');\n  const [monthInView, setMonthInView] = useState<MonthIndices>(\n    (isValid(initialViewDate)\n      ? new Date(initialViewDate).getMonth()\n      : !selectRange && isValid(date)\n      ? new Date(date).getMonth()\n      : new Date().getMonth()) as MonthIndices\n  );\n  const [yearInView, setYearInView] = useState(\n    isValid(initialViewDate)\n      ? new Date(initialViewDate).getFullYear()\n      : !selectRange && isValid(date)\n      ? new Date(date).getFullYear()\n      : new Date().getFullYear()\n  );\n\n  // selected multi dates\n  const [selectedMultiDates, setSelectedMultiDates] = useState<Record<string, Date | undefined>>(\n    dates.reduce((acc, currDate) => {\n      if (isValid(currDate)) {\n        acc[toString(currDate)] = currDate;\n      }\n      return acc;\n    }, {} as Record<string, Date | undefined>)\n  );\n\n  // selected single date\n  const [selectedDate, setSelectedDate] = useState(() => {\n    const today = new Date();\n    if (isValid(date)) {\n      const year = date.getFullYear();\n      const month = date.getMonth();\n      const dateOfMonth = date.getDate();\n      return new Date(year, month, dateOfMonth);\n    } else {\n      return today;\n    }\n  });\n\n  // selected range start date\n  const [selectedRangeStart, setSelectedRangeStart] = useState(() => {\n    const today = new Date();\n    if (!!selectRange && isValid(startdate)) {\n      const year = startdate.getFullYear();\n      const month = startdate.getMonth();\n      const date = startdate.getDate();\n\n      return new Date(year, month, date);\n    } else {\n      return today;\n    }\n  });\n\n  const [selectedRangeEnd, setSelectedRangeEnd] = useState(() => {\n    const today = new Date();\n    // FIXME Check if endDAte is after startDAte\n    if (!!selectRange && isValid(endDate)) {\n      const year = endDate.getFullYear();\n      const month = endDate.getMonth();\n      const date = endDate.getDate();\n      return new Date(year, month, date);\n    } else if (isFixedRange) {\n      return addDays(selectedRangeStart, fixedRangeLength);\n    } else {\n      return today;\n    }\n  });\n\n  const [newSelectedRangeStart, setNewSelectedRangeStart] = useState<Date | undefined>(() => {\n    return selectedRangeStart;\n  });\n\n  const [newSelectedRangeEnd, setNewSelectedRangeEnd] = useState<Date | undefined>(() => {\n    return selectedRangeEnd;\n  });\n\n  const [startingYearForCurrRange, setStartingYearForCurrRange] = useState(getStartOfRangeForAYear(yearInView));\n\n  // 1 - 20, 21 - 40\n  const [yearMatrixRangeStart, yearMatrixRangeEnd] = useMemo(() => {\n    return getYearRangeLimits(startingYearForCurrRange);\n  }, [startingYearForCurrRange]);\n\n  // week days as per the start day of the week\n  const WEEK_DAYS = useMemo(() => {\n    return getWeekDaysIndexToLabelMapForAStartOfTheWeek(startOfTheWeek);\n  }, [startOfTheWeek]);\n\n  // date formatter\n  const formatter = useMemo(() => {\n    return validateAndReturnDateFormatter(format);\n  }, [format]);\n\n  useEffect(() => {\n    setStartingYearForCurrRange(getStartOfRangeForAYear(yearInView));\n  }, [yearInView, setStartingYearForCurrRange]);\n\n  // matrices for different views\n  const yearsViewMatrix = useMemo<YearCell[][]>(() => {\n    return getYearsViewMetrix(startingYearForCurrRange, selectedDate.getFullYear());\n  }, [startingYearForCurrRange, selectedDate]);\n\n  const monthsViewMatrix = useMemo<MonthCell[][]>(() => {\n    return getMonthViewMetrix(selectedDate.getMonth());\n  }, [selectedDate]);\n\n  const daysOfMMonthViewMatrix = useMemo(() => {\n    return getDaysOfMonthViewMetrix({\n      selectedDate: selectedDate,\n      selectedRangeStart: selectedRangeStart,\n      selectedRangeEnd: selectedRangeEnd,\n      newSelectedRangeStart: newSelectedRangeStart,\n      newSelectedRangeEnd: newSelectedRangeEnd,\n      isRangeView: !!selectRange || isFixedRange,\n      isRangeSelectModeOn,\n      weekendIndexes,\n      selectedMultiDates,\n      isSelectMultiDate,\n      yearInView,\n      monthInView,\n      startOfTheWeek,\n      disableFuture,\n      disablePast,\n      disableToday,\n      isDisabled,\n      maxDate: maxDate,\n      minDate: minDate,\n      applyMax: applyMaxConstraint,\n      applyMin: applyminConstraint,\n    });\n  }, [\n    selectedDate,\n    selectedRangeStart,\n    selectedRangeEnd,\n    newSelectedRangeStart,\n    newSelectedRangeEnd,\n    selectRange,\n    isFixedRange,\n    isRangeSelectModeOn,\n    weekendIndexes,\n    selectedMultiDates,\n    isSelectMultiDate,\n    yearInView,\n    monthInView,\n    startOfTheWeek,\n    disableFuture,\n    disablePast,\n    disableToday,\n    isDisabled,\n    maxDate,\n    minDate,\n    applyMaxConstraint,\n    applyminConstraint,\n  ]);\n\n  // callback handlers\n  const onPrevClick = useCallback(\n    (e) => {\n      if (view === 'month_dates') {\n        const isPrevMonthFromLastYear = monthInView === 0;\n        if (isPrevMonthFromLastYear) {\n          setYearInView(getPreviousYear(yearInView));\n        }\n        setMonthInView(getPreviousMonth(monthInView));\n      }\n      if (view === 'years') {\n        setStartingYearForCurrRange(getPreviousRangeStartingYear(startingYearForCurrRange));\n      }\n      if (view === 'months') {\n        setYearInView(yearInView !== 1 ? yearInView - 1 : 1);\n      }\n    },\n    [\n      setMonthInView,\n      monthInView,\n      setYearInView,\n      yearInView,\n      view,\n      setStartingYearForCurrRange,\n      startingYearForCurrRange,\n    ]\n  );\n\n  const onNextClick = useCallback(\n    (e) => {\n      if (view === 'month_dates') {\n        const isCurrentMonthLast = monthInView === 11;\n        if (isCurrentMonthLast) {\n          setYearInView(getNextYear(yearInView));\n        }\n        setMonthInView(getNextMonth(monthInView));\n      }\n      if (view === 'years') {\n        setStartingYearForCurrRange(getNextRangeStartingYear(startingYearForCurrRange));\n      }\n\n      if (view === 'months') {\n        setYearInView(getNextYear(yearInView));\n      }\n    },\n    [\n      setMonthInView,\n      monthInView,\n      setYearInView,\n      yearInView,\n      view,\n      setStartingYearForCurrRange,\n      startingYearForCurrRange,\n    ]\n  );\n\n  const onDateClicked = useCallback(\n    (cell: DayOfMonthCell) => {\n      const clickedDate = new Date(cell.year, cell.month, cell.date);\n\n      if (selectRange) {\n        if (isRangeSelectModeOn && newSelectedRangeStart) {\n          // check if it is the first click or seconds\n\n          const previouslySelectedDate = new Date(\n            newSelectedRangeStart.getFullYear(),\n            newSelectedRangeStart.getMonth(),\n            newSelectedRangeStart.getDate()\n          );\n\n          if (isBefore(previouslySelectedDate, clickedDate)) {\n            setSelectedRangeStart(clickedDate);\n            setSelectedRangeEnd(previouslySelectedDate);\n\n            const startDate = clickedDate;\n\n            const endDate = previouslySelectedDate;\n\n            onChange &&\n              onChange([\n                {\n                  value: startDate,\n                  formatted: formatter(\n                    startDate.getFullYear(),\n                    startDate.getMonth() + 1,\n                    startDate.getDate(),\n                    separator\n                  ),\n                },\n                {\n                  value: endDate,\n                  formatted: formatter(endDate.getFullYear(), endDate.getMonth() + 1, endDate.getDate(), separator),\n                },\n              ]);\n          } else {\n            setSelectedRangeStart(previouslySelectedDate);\n\n            setSelectedRangeEnd(clickedDate);\n\n            const startDate = previouslySelectedDate;\n\n            const endDate = clickedDate;\n\n            onChange &&\n              onChange([\n                {\n                  value: startDate,\n                  formatted: formatter(\n                    startDate.getFullYear(),\n                    startDate.getMonth() + 1,\n                    startDate.getDate(),\n                    separator\n                  ),\n                },\n                {\n                  value: endDate,\n                  formatted: formatter(endDate.getFullYear(), endDate.getMonth() + 1, endDate.getDate(), separator),\n                },\n              ]);\n          }\n\n          setNewSelectedRangeEnd(undefined);\n\n          setIsRangeSelectModeOn(false);\n        } else {\n          // select first date\n          setNewSelectedRangeStart(clickedDate);\n\n          setNewSelectedRangeEnd(undefined);\n\n          setIsRangeSelectModeOn(true);\n        }\n      } else if (isSelectMultiDate) {\n        const date = new Date(cell.year, cell.month, cell.date);\n        const stringkey = toString(date);\n\n        const newselectedMultiDates = { ...selectedMultiDates };\n\n        if (!!selectedMultiDates[stringkey]) {\n          newselectedMultiDates[stringkey] = undefined;\n        } else {\n          newselectedMultiDates[stringkey] = date;\n        }\n\n        setSelectedMultiDates(newselectedMultiDates);\n\n        onChange &&\n          onChange(\n            Object.keys(newselectedMultiDates)\n              .filter((dk) => !!newselectedMultiDates[dk])\n              .map((dk) => ({\n                value: newselectedMultiDates[dk] as Date,\n                year: (newselectedMultiDates[dk] as Date).getFullYear(),\n                month: (newselectedMultiDates[dk] as Date).getMonth(),\n                date: (newselectedMultiDates[dk] as Date).getDate(),\n                formatted: formatter(\n                  (newselectedMultiDates[dk] as Date).getFullYear(),\n                  (newselectedMultiDates[dk] as Date).getMonth() + 1,\n                  (newselectedMultiDates[dk] as Date).getDate(),\n                  separator\n                ),\n              }))\n          );\n      } else if (isFixedRange) {\n        setSelectedRangeStart(clickedDate);\n\n        const endDate = addDays(clickedDate, fixedRangeLength);\n        setSelectedRangeEnd(endDate);\n      } else {\n        setSelectedDate(clickedDate);\n\n        onChange &&\n          onChange({\n            value: clickedDate,\n            formatted: formatter(\n              clickedDate.getFullYear(),\n              clickedDate.getMonth() + 1,\n              clickedDate.getDate(),\n              separator\n            ),\n          });\n      }\n\n      setMonthInView(cell.month);\n      setYearInView(cell.year);\n    },\n    [\n      selectRange,\n      isSelectMultiDate,\n      isFixedRange,\n      isRangeSelectModeOn,\n      newSelectedRangeStart,\n      onChange,\n      formatter,\n      separator,\n      selectedMultiDates,\n      fixedRangeLength,\n    ]\n  );\n\n  return (\n    <section className='arc'>\n      <header className='arc_header'>\n        <button className='arc_header_nav arc_header_nav-prev' onClick={onPrevClick}>\n          ←\n        </button>\n        {view === 'month_dates' ? (\n          <button className='arc_header_label arc_header_label-days-of-month' onClick={() => setView('years')}>\n            <div>\n              <span>{NATIVE_INDEX_TO_LABEL_MONTHS_MAP[monthInView]}</span>\n            </div>\n            <div>\n              <span>{yearInView}</span>\n            </div>\n          </button>\n        ) : view === 'months' ? (\n          <button className='arc_header_label arc_header_label-months'>\n            <div onClick={() => setView('years')}>\n              <span>{yearInView}</span>\n            </div>\n          </button>\n        ) : (\n          <button className='arc_header_label arc_header_label-years' onClick={() => setView('month_dates')}>\n            <div>\n              <span>\n                {yearMatrixRangeStart}-{yearMatrixRangeEnd}\n              </span>\n            </div>\n          </button>\n        )}\n        <button className='arc_header_nav arc_header_nav-next' onClick={onNextClick}>\n          →\n        </button>\n      </header>\n      <main className='arc_view'>\n        {view === 'months' && (\n          <div className='arc_view-months'>\n            {monthsViewMatrix.map((row, index) => (\n              <div className='arc_view_row' key={index}>\n                {row.map((cell) => (\n                  <div className={`arc_view_cell${cell.isCurrentMonth ? ' arc_this_month' : ''}`} key={cell.month}>\n                    <button\n                      onClick={() => {\n                        setMonthInView(cell.month);\n                        setView('month_dates');\n                      }}>\n                      {NATIVE_INDEX_TO_LABEL_MONTHS_MAP[cell.month]}\n                    </button>\n                  </div>\n                ))}\n              </div>\n            ))}\n          </div>\n        )}\n        {view === 'years' && (\n          <div className='arc_view-years'>\n            {yearsViewMatrix.map((row, index) => (\n              <div className='arc_view_row' key={index}>\n                {row.map((cell) => (\n                  <div className={`arc_view_cell${cell.isCurrentYear ? ' arc_this_year' : ''}`} key={cell.year}>\n                    <button\n                      onClick={() => {\n                        setYearInView(cell.year);\n                        setView('months');\n                      }}>\n                      {cell.year}\n                    </button>\n                  </div>\n                ))}\n              </div>\n            ))}\n          </div>\n        )}\n        {view === 'month_dates' && (\n          <>\n            <ul className='arc_view_weekdays'>\n              {Object.keys(WEEK_DAYS).map((weekDay) => (\n                <li\n                  key={weekDay}\n                  className={`arc_view_weekdays_cell${\n                    typeof weekendIndexes.find((weekend) => weekend === Number(weekDay)) === 'number' ? ' arc_wknd' : ''\n                  }`}>\n                  <span>{WEEK_DAYS[Number(weekDay) as WeekdayIndices]}</span>\n                </li>\n              ))}\n            </ul>\n            <div className='arc_view-days-of-month' role='grid'>\n              {daysOfMMonthViewMatrix.map((row, index) => (\n                <div className='arc_view_row' key={index}>\n                  {row.map((cell) => (\n                    <div\n                      onMouseEnter={() => {\n                        if (selectRange) {\n                          if (isRangeSelectModeOn) {\n                            setNewSelectedRangeEnd(new Date(cell.year, cell.month, cell.date));\n                          }\n                        }\n                      }}\n                      key={cell.date}\n                      className={`arc_view_cell${cell.activeMonthInView ? ' arc_active' : ''}${\n                        cell.isWeekend ? ' arc_wknd' : ''\n                      }${cell.isToday ? ' arc_today' : ''}${cell.isFirstRow ? ' arc_fr' : ''}${\n                        cell.isLastRow ? ' arc_lr' : ''\n                      }${cell.isFirsColumn ? ' arc_fc' : ''}${cell.isLastColumn ? ' arc_lc' : ''}${\n                        cell.isSelected && !selectRange ? ' arc_selected' : ''\n                      }${cell.isDisabled ? ' arc_disabled' : ''}${cell.isInRange ? ' arc_in_range' : ''}${\n                        cell.isRangeStart ? ' arc_range_start' : ''\n                      }${cell.isRangeEnd ? ' arc_range_end' : ''}${isRangeSelectModeOn ? ' arc_range_mode' : ''}`}>\n                      <div className='arc_view_cell_value'>\n                        <button\n                          disabled={cell.isDisabled}\n                          tabIndex={cell.isDisabled ? -1 : 0}\n                          onClick={() => onDateClicked(cell)}>\n                          {cell.date}\n                        </button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ))}\n            </div>\n          </>\n        )}\n      </main>\n    </section>\n  );\n}\n\nexport default Calendar;\n","import React, { useCallback, useState } from 'react';\nimport ReactJson from 'react-json-view';\n\nimport Calendar from './awesome-react-calendar/calendar';\n\nimport './App.css';\n\nfunction App() {\n  const [one, setOne] = useState<object>({});\n\n  const onChangeone = useCallback(\n    (value) => {\n      setOne(value);\n    },\n    [setOne]\n  );\n\n  const [two, setTwo] = useState<object>({});\n\n  const onChangetwo = useCallback(\n    (value) => {\n      setTwo(value);\n    },\n    [setTwo]\n  );\n\n  const [three, setThree] = useState<object>({});\n\n  const onChangethree = useCallback(\n    (value) => {\n      setThree(value);\n    },\n    [setThree]\n  );\n\n  const [four, setFour] = useState<object>({});\n\n  const onChangefour = useCallback(\n    (value) => {\n      setFour(value);\n    },\n    [setFour]\n  );\n\n  const [five, setFive] = useState<object>({});\n\n  const onChangefive = useCallback(\n    (value) => {\n      setFive(value);\n    },\n    [setFive]\n  );\n\n  const [six, setSix] = useState<object>({});\n\n  const onChangesix = useCallback(\n    (value) => {\n      setSix(value);\n    },\n    [setSix]\n  );\n\n  const [seven, setSeven] = useState<object>({});\n\n  const onChangeseven = useCallback(\n    (value) => {\n      setSeven(value);\n    },\n    [setSeven]\n  );\n\n  const [eight, setEight] = useState<object>({});\n\n  const onChangeeight = useCallback(\n    (value) => {\n      setEight(value);\n    },\n    [setEight]\n  );\n\n  const [nine, setNine] = useState<object>({});\n\n  const onChangenine = useCallback(\n    (value) => {\n      setNine(value);\n    },\n    [setNine]\n  );\n\n  const [ten, setTen] = useState<object>({});\n\n  const onChangeTen = useCallback(\n    (value) => {\n      setTen(value);\n    },\n    [setTen]\n  );\n\n  const [eleven, setEleven] = useState<object>({});\n\n  const onChangeEleven = useCallback(\n    (value) => {\n      setEleven(value);\n    },\n    [setEleven]\n  );\n\n  const [tweleve, setTweleve] = useState<object>({});\n\n  const onChangeTweleve = useCallback(\n    (value) => {\n      setTweleve(value);\n    },\n    [setTweleve]\n  );\n\n  const [thirteen, setThirteen] = useState<object>({});\n\n  const onChangeThirteen = useCallback(\n    (value) => {\n      setThirteen(value);\n    },\n    [setThirteen]\n  );\n\n  const maxDate = new Date(2021, 7, 28);\n  const minDate = new Date(2021, 7, 4);\n  return (\n    <div className='demo'>\n      <div>\n        <div>\n          <p>Default</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar onChange={onChangenine} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={nine} />\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div className='desc'>\n          <p>Select Multiple Dates View</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar\n              dates={[new Date(2021, 6, 21), new Date(2021, 6, 25), new Date(2021, 6, 9)]}\n              selectMultiDates\n              disableToday\n              separator='/'\n              format='MM-DD-YYYY'\n              onChange={onChangeone}\n            />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={one} />\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div>\n          <p>Select Range Select View</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar\n              selectRange\n              startdate={new Date(2021, 0, 8)}\n              endDate={new Date(2021, 0, 22)}\n              separator='/'\n              format='MM-DD-YYYY'\n              onChange={onChangethree}\n              // startOfWeek={2}\n              date={new Date(2021, 1, 23)}\n            />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={three} />\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div>\n          <p>Select Range Select View With Min-Max Allowed Dates</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar\n              initialViewDate={new Date(2021, 7, 10)}\n              selectRange\n              maxAllowedDate={maxDate}\n              minAllowedDate={minDate}\n              disableToday\n              separator='/'\n              format='MM-DD-YYYY'\n              onChange={onChangetwo}\n              // startOfWeek={2}\n            />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={two} />\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div>\n          <p>Select Fixed Range View (6 Days)</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar fixedRange={6} onChange={onChangeThirteen} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={thirteen} />\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div>\n          <p>Can Modify Start Day Of The Week (Wed here)</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar startOfWeek={3} onChange={onChangefour} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={four} />\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div>\n          <p>Can Specify Weekends (Fri, Sat, Sun here)</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar weekends={[4, 5, 6]} onChange={onChangefive} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={five} />\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div>\n          <p>Can Set If Past Is Disabled</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar disablePast onChange={onChangesix} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={six} />\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div>\n          <p>Can Set If Today Is Disabled</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar\n              disableToday\n              date={new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() + 1)}\n              onChange={onChangeseven}\n            />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={seven} />\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div>\n          <p>Can Set If Future Is Disabled</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar disableFuture onChange={onChangeeight} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={eight} />\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div>\n          <p>Can Set Output Date Format (YYYY-DD-MM here)</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar format='YYYY-DD-MM' onChange={onChangeTen} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={ten} />\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div>\n          <p>Can Set Output Date Separator (# here)</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar separator='#' onChange={onChangeEleven} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={eleven} />\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div>\n          <p>Can Set Initial Month&Date View To Show (Sept, 2020 here)</p>\n        </div>\n        <div>\n          <div className='calendar'>\n            <Calendar initialViewDate={new Date(2020, 8, 9)} onChange={onChangeTweleve} />\n          </div>\n          <div className='json'>\n            <ReactJson name='value' enableClipboard={false} src={tweleve} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}